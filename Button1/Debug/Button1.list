
Button1.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   0000010c  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00002938  0800010c  0800010c  0001010c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000020  08002a44  08002a44  00012a44  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08002a64  08002a64  00020054  2**0
                  CONTENTS
  4 .ARM          00000000  08002a64  08002a64  00020054  2**0
                  CONTENTS
  5 .preinit_array 00000000  08002a64  08002a64  00020054  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08002a64  08002a64  00012a64  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08002a68  08002a68  00012a68  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000054  20000000  08002a6c  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          000000cc  20000054  08002ac0  00020054  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  20000120  08002ac0  00020120  2**0
                  ALLOC
 11 .ARM.attributes 00000029  00000000  00000000  00020054  2**0
                  CONTENTS, READONLY
 12 .debug_info   0000963f  00000000  00000000  0002007d  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00001bd4  00000000  00000000  000296bc  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000ae8  00000000  00000000  0002b290  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 000009d0  00000000  00000000  0002bd78  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00016e58  00000000  00000000  0002c748  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   0000dd83  00000000  00000000  000435a0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    000823be  00000000  00000000  00051323  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000053  00000000  00000000  000d36e1  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00002a94  00000000  00000000  000d3734  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

0800010c <__do_global_dtors_aux>:
 800010c:	b510      	push	{r4, lr}
 800010e:	4c05      	ldr	r4, [pc, #20]	; (8000124 <__do_global_dtors_aux+0x18>)
 8000110:	7823      	ldrb	r3, [r4, #0]
 8000112:	b933      	cbnz	r3, 8000122 <__do_global_dtors_aux+0x16>
 8000114:	4b04      	ldr	r3, [pc, #16]	; (8000128 <__do_global_dtors_aux+0x1c>)
 8000116:	b113      	cbz	r3, 800011e <__do_global_dtors_aux+0x12>
 8000118:	4804      	ldr	r0, [pc, #16]	; (800012c <__do_global_dtors_aux+0x20>)
 800011a:	f3af 8000 	nop.w
 800011e:	2301      	movs	r3, #1
 8000120:	7023      	strb	r3, [r4, #0]
 8000122:	bd10      	pop	{r4, pc}
 8000124:	20000054 	.word	0x20000054
 8000128:	00000000 	.word	0x00000000
 800012c:	08002a2c 	.word	0x08002a2c

08000130 <frame_dummy>:
 8000130:	b508      	push	{r3, lr}
 8000132:	4b03      	ldr	r3, [pc, #12]	; (8000140 <frame_dummy+0x10>)
 8000134:	b11b      	cbz	r3, 800013e <frame_dummy+0xe>
 8000136:	4903      	ldr	r1, [pc, #12]	; (8000144 <frame_dummy+0x14>)
 8000138:	4803      	ldr	r0, [pc, #12]	; (8000148 <frame_dummy+0x18>)
 800013a:	f3af 8000 	nop.w
 800013e:	bd08      	pop	{r3, pc}
 8000140:	00000000 	.word	0x00000000
 8000144:	20000058 	.word	0x20000058
 8000148:	08002a2c 	.word	0x08002a2c

0800014c <Display_Init>:

const int MAX_LED = 4;
int index_led = 0;
int led_buffer[4] = {0, 0, 0, 0};

void Display_Init(){
 800014c:	b580      	push	{r7, lr}
 800014e:	af00      	add	r7, sp, #0
	HAL_GPIO_WritePin(RED1_GPIO_Port, RED1_Pin, GPIO_PIN_RESET);
 8000150:	2200      	movs	r2, #0
 8000152:	2101      	movs	r1, #1
 8000154:	480e      	ldr	r0, [pc, #56]	; (8000190 <Display_Init+0x44>)
 8000156:	f001 fc58 	bl	8001a0a <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(GREEN1_GPIO_Port, GREEN1_Pin, GPIO_PIN_RESET);
 800015a:	2200      	movs	r2, #0
 800015c:	2104      	movs	r1, #4
 800015e:	480c      	ldr	r0, [pc, #48]	; (8000190 <Display_Init+0x44>)
 8000160:	f001 fc53 	bl	8001a0a <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(YELLOW1_GPIO_Port, YELLOW1_Pin, GPIO_PIN_RESET);
 8000164:	2200      	movs	r2, #0
 8000166:	2102      	movs	r1, #2
 8000168:	4809      	ldr	r0, [pc, #36]	; (8000190 <Display_Init+0x44>)
 800016a:	f001 fc4e 	bl	8001a0a <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(RED2_GPIO_Port, RED2_Pin, GPIO_PIN_RESET);
 800016e:	2200      	movs	r2, #0
 8000170:	2108      	movs	r1, #8
 8000172:	4807      	ldr	r0, [pc, #28]	; (8000190 <Display_Init+0x44>)
 8000174:	f001 fc49 	bl	8001a0a <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(GREEN2_GPIO_Port, GREEN2_Pin, GPIO_PIN_RESET);
 8000178:	2200      	movs	r2, #0
 800017a:	2120      	movs	r1, #32
 800017c:	4804      	ldr	r0, [pc, #16]	; (8000190 <Display_Init+0x44>)
 800017e:	f001 fc44 	bl	8001a0a <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(YELLOW2_GPIO_Port, YELLOW2_Pin, GPIO_PIN_RESET);
 8000182:	2200      	movs	r2, #0
 8000184:	2110      	movs	r1, #16
 8000186:	4802      	ldr	r0, [pc, #8]	; (8000190 <Display_Init+0x44>)
 8000188:	f001 fc3f 	bl	8001a0a <HAL_GPIO_WritePin>
}
 800018c:	bf00      	nop
 800018e:	bd80      	pop	{r7, pc}
 8000190:	40010800 	.word	0x40010800

08000194 <Display_Led_Red1>:


void Display_Led_Red1(){
 8000194:	b580      	push	{r7, lr}
 8000196:	af00      	add	r7, sp, #0
	HAL_GPIO_WritePin(RED1_GPIO_Port, RED1_Pin, GPIO_PIN_SET);
 8000198:	2201      	movs	r2, #1
 800019a:	2101      	movs	r1, #1
 800019c:	4807      	ldr	r0, [pc, #28]	; (80001bc <Display_Led_Red1+0x28>)
 800019e:	f001 fc34 	bl	8001a0a <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(GREEN1_GPIO_Port, GREEN1_Pin, GPIO_PIN_RESET);
 80001a2:	2200      	movs	r2, #0
 80001a4:	2104      	movs	r1, #4
 80001a6:	4805      	ldr	r0, [pc, #20]	; (80001bc <Display_Led_Red1+0x28>)
 80001a8:	f001 fc2f 	bl	8001a0a <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(YELLOW1_GPIO_Port, YELLOW1_Pin, GPIO_PIN_RESET);
 80001ac:	2200      	movs	r2, #0
 80001ae:	2102      	movs	r1, #2
 80001b0:	4802      	ldr	r0, [pc, #8]	; (80001bc <Display_Led_Red1+0x28>)
 80001b2:	f001 fc2a 	bl	8001a0a <HAL_GPIO_WritePin>
}
 80001b6:	bf00      	nop
 80001b8:	bd80      	pop	{r7, pc}
 80001ba:	bf00      	nop
 80001bc:	40010800 	.word	0x40010800

080001c0 <Display_Led_Green1>:
void Display_Led_Green1(){
 80001c0:	b580      	push	{r7, lr}
 80001c2:	af00      	add	r7, sp, #0
	HAL_GPIO_WritePin(RED1_GPIO_Port, RED1_Pin, GPIO_PIN_RESET);
 80001c4:	2200      	movs	r2, #0
 80001c6:	2101      	movs	r1, #1
 80001c8:	4807      	ldr	r0, [pc, #28]	; (80001e8 <Display_Led_Green1+0x28>)
 80001ca:	f001 fc1e 	bl	8001a0a <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(GREEN1_GPIO_Port, GREEN1_Pin, GPIO_PIN_SET);
 80001ce:	2201      	movs	r2, #1
 80001d0:	2104      	movs	r1, #4
 80001d2:	4805      	ldr	r0, [pc, #20]	; (80001e8 <Display_Led_Green1+0x28>)
 80001d4:	f001 fc19 	bl	8001a0a <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(YELLOW1_GPIO_Port, YELLOW1_Pin, GPIO_PIN_RESET);
 80001d8:	2200      	movs	r2, #0
 80001da:	2102      	movs	r1, #2
 80001dc:	4802      	ldr	r0, [pc, #8]	; (80001e8 <Display_Led_Green1+0x28>)
 80001de:	f001 fc14 	bl	8001a0a <HAL_GPIO_WritePin>
}
 80001e2:	bf00      	nop
 80001e4:	bd80      	pop	{r7, pc}
 80001e6:	bf00      	nop
 80001e8:	40010800 	.word	0x40010800

080001ec <Display_Led_Yellow1>:
void Display_Led_Yellow1(){
 80001ec:	b580      	push	{r7, lr}
 80001ee:	af00      	add	r7, sp, #0
	HAL_GPIO_WritePin(RED1_GPIO_Port, RED1_Pin, GPIO_PIN_RESET);
 80001f0:	2200      	movs	r2, #0
 80001f2:	2101      	movs	r1, #1
 80001f4:	4807      	ldr	r0, [pc, #28]	; (8000214 <Display_Led_Yellow1+0x28>)
 80001f6:	f001 fc08 	bl	8001a0a <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(GREEN1_GPIO_Port, GREEN1_Pin, GPIO_PIN_RESET);
 80001fa:	2200      	movs	r2, #0
 80001fc:	2104      	movs	r1, #4
 80001fe:	4805      	ldr	r0, [pc, #20]	; (8000214 <Display_Led_Yellow1+0x28>)
 8000200:	f001 fc03 	bl	8001a0a <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(YELLOW1_GPIO_Port, YELLOW1_Pin, GPIO_PIN_SET);
 8000204:	2201      	movs	r2, #1
 8000206:	2102      	movs	r1, #2
 8000208:	4802      	ldr	r0, [pc, #8]	; (8000214 <Display_Led_Yellow1+0x28>)
 800020a:	f001 fbfe 	bl	8001a0a <HAL_GPIO_WritePin>
}
 800020e:	bf00      	nop
 8000210:	bd80      	pop	{r7, pc}
 8000212:	bf00      	nop
 8000214:	40010800 	.word	0x40010800

08000218 <Display_Led_Red2>:

void Display_Led_Red2(){
 8000218:	b580      	push	{r7, lr}
 800021a:	af00      	add	r7, sp, #0
	HAL_GPIO_WritePin(RED2_GPIO_Port, RED2_Pin, GPIO_PIN_SET);
 800021c:	2201      	movs	r2, #1
 800021e:	2108      	movs	r1, #8
 8000220:	4807      	ldr	r0, [pc, #28]	; (8000240 <Display_Led_Red2+0x28>)
 8000222:	f001 fbf2 	bl	8001a0a <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(GREEN2_GPIO_Port, GREEN2_Pin, GPIO_PIN_RESET);
 8000226:	2200      	movs	r2, #0
 8000228:	2120      	movs	r1, #32
 800022a:	4805      	ldr	r0, [pc, #20]	; (8000240 <Display_Led_Red2+0x28>)
 800022c:	f001 fbed 	bl	8001a0a <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(YELLOW2_GPIO_Port, YELLOW2_Pin, GPIO_PIN_RESET);
 8000230:	2200      	movs	r2, #0
 8000232:	2110      	movs	r1, #16
 8000234:	4802      	ldr	r0, [pc, #8]	; (8000240 <Display_Led_Red2+0x28>)
 8000236:	f001 fbe8 	bl	8001a0a <HAL_GPIO_WritePin>
}
 800023a:	bf00      	nop
 800023c:	bd80      	pop	{r7, pc}
 800023e:	bf00      	nop
 8000240:	40010800 	.word	0x40010800

08000244 <Display_Led_Green2>:
void Display_Led_Green2(){
 8000244:	b580      	push	{r7, lr}
 8000246:	af00      	add	r7, sp, #0
	HAL_GPIO_WritePin(RED2_GPIO_Port, RED2_Pin, GPIO_PIN_RESET);
 8000248:	2200      	movs	r2, #0
 800024a:	2108      	movs	r1, #8
 800024c:	4807      	ldr	r0, [pc, #28]	; (800026c <Display_Led_Green2+0x28>)
 800024e:	f001 fbdc 	bl	8001a0a <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(GREEN2_GPIO_Port, GREEN2_Pin, GPIO_PIN_SET);
 8000252:	2201      	movs	r2, #1
 8000254:	2120      	movs	r1, #32
 8000256:	4805      	ldr	r0, [pc, #20]	; (800026c <Display_Led_Green2+0x28>)
 8000258:	f001 fbd7 	bl	8001a0a <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(YELLOW2_GPIO_Port, YELLOW2_Pin, GPIO_PIN_RESET);
 800025c:	2200      	movs	r2, #0
 800025e:	2110      	movs	r1, #16
 8000260:	4802      	ldr	r0, [pc, #8]	; (800026c <Display_Led_Green2+0x28>)
 8000262:	f001 fbd2 	bl	8001a0a <HAL_GPIO_WritePin>
}
 8000266:	bf00      	nop
 8000268:	bd80      	pop	{r7, pc}
 800026a:	bf00      	nop
 800026c:	40010800 	.word	0x40010800

08000270 <Display_Led_Yellow2>:
void Display_Led_Yellow2(){
 8000270:	b580      	push	{r7, lr}
 8000272:	af00      	add	r7, sp, #0
	HAL_GPIO_WritePin(RED2_GPIO_Port, RED2_Pin, GPIO_PIN_RESET);
 8000274:	2200      	movs	r2, #0
 8000276:	2108      	movs	r1, #8
 8000278:	4807      	ldr	r0, [pc, #28]	; (8000298 <Display_Led_Yellow2+0x28>)
 800027a:	f001 fbc6 	bl	8001a0a <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(GREEN2_GPIO_Port, GREEN2_Pin, GPIO_PIN_RESET);
 800027e:	2200      	movs	r2, #0
 8000280:	2120      	movs	r1, #32
 8000282:	4805      	ldr	r0, [pc, #20]	; (8000298 <Display_Led_Yellow2+0x28>)
 8000284:	f001 fbc1 	bl	8001a0a <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(YELLOW2_GPIO_Port, YELLOW2_Pin, GPIO_PIN_SET);
 8000288:	2201      	movs	r2, #1
 800028a:	2110      	movs	r1, #16
 800028c:	4802      	ldr	r0, [pc, #8]	; (8000298 <Display_Led_Yellow2+0x28>)
 800028e:	f001 fbbc 	bl	8001a0a <HAL_GPIO_WritePin>
}
 8000292:	bf00      	nop
 8000294:	bd80      	pop	{r7, pc}
 8000296:	bf00      	nop
 8000298:	40010800 	.word	0x40010800

0800029c <display7SEG>:


void display7SEG(int num){
 800029c:	b580      	push	{r7, lr}
 800029e:	b082      	sub	sp, #8
 80002a0:	af00      	add	r7, sp, #0
 80002a2:	6078      	str	r0, [r7, #4]
	//outputs: SEG7 -> SEG0
	//outputs with value of 0 (RESET) will be turn on
	//outputs with value of 1 (SET) will be turn off
	if (num == 0){ //100 0000
 80002a4:	687b      	ldr	r3, [r7, #4]
 80002a6:	2b00      	cmp	r3, #0
 80002a8:	d10a      	bne.n	80002c0 <display7SEG+0x24>
		HAL_GPIO_WritePin(GPIOB, SEG0_Pin|SEG1_Pin|SEG2_Pin
 80002aa:	2200      	movs	r2, #0
 80002ac:	213f      	movs	r1, #63	; 0x3f
 80002ae:	4842      	ldr	r0, [pc, #264]	; (80003b8 <display7SEG+0x11c>)
 80002b0:	f001 fbab 	bl	8001a0a <HAL_GPIO_WritePin>
								|SEG3_Pin|SEG4_Pin|SEG5_Pin, GPIO_PIN_RESET);
		HAL_GPIO_WritePin(GPIOB, SEG6_Pin, GPIO_PIN_SET);
 80002b4:	2201      	movs	r2, #1
 80002b6:	2140      	movs	r1, #64	; 0x40
 80002b8:	483f      	ldr	r0, [pc, #252]	; (80003b8 <display7SEG+0x11c>)
 80002ba:	f001 fba6 	bl	8001a0a <HAL_GPIO_WritePin>
	else if (num == 9){ //001 0000
		HAL_GPIO_WritePin(GPIOB, SEG0_Pin|SEG1_Pin|SEG2_Pin
								|SEG3_Pin|SEG5_Pin|SEG6_Pin, GPIO_PIN_RESET);
		HAL_GPIO_WritePin(GPIOB, SEG4_Pin, GPIO_PIN_SET);
	}
}
 80002be:	e077      	b.n	80003b0 <display7SEG+0x114>
	else if (num == 1){ //111 1001
 80002c0:	687b      	ldr	r3, [r7, #4]
 80002c2:	2b01      	cmp	r3, #1
 80002c4:	d10a      	bne.n	80002dc <display7SEG+0x40>
		HAL_GPIO_WritePin(GPIOB, SEG1_Pin|SEG2_Pin, GPIO_PIN_RESET);
 80002c6:	2200      	movs	r2, #0
 80002c8:	2106      	movs	r1, #6
 80002ca:	483b      	ldr	r0, [pc, #236]	; (80003b8 <display7SEG+0x11c>)
 80002cc:	f001 fb9d 	bl	8001a0a <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(GPIOB, SEG0_Pin|SEG3_Pin|SEG4_Pin
 80002d0:	2201      	movs	r2, #1
 80002d2:	2179      	movs	r1, #121	; 0x79
 80002d4:	4838      	ldr	r0, [pc, #224]	; (80003b8 <display7SEG+0x11c>)
 80002d6:	f001 fb98 	bl	8001a0a <HAL_GPIO_WritePin>
}
 80002da:	e069      	b.n	80003b0 <display7SEG+0x114>
	else if (num == 2){ //010 0100
 80002dc:	687b      	ldr	r3, [r7, #4]
 80002de:	2b02      	cmp	r3, #2
 80002e0:	d10a      	bne.n	80002f8 <display7SEG+0x5c>
		HAL_GPIO_WritePin(GPIOB, SEG0_Pin|SEG1_Pin|SEG3_Pin
 80002e2:	2200      	movs	r2, #0
 80002e4:	215b      	movs	r1, #91	; 0x5b
 80002e6:	4834      	ldr	r0, [pc, #208]	; (80003b8 <display7SEG+0x11c>)
 80002e8:	f001 fb8f 	bl	8001a0a <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(GPIOB, SEG2_Pin|SEG5_Pin, GPIO_PIN_SET);
 80002ec:	2201      	movs	r2, #1
 80002ee:	2124      	movs	r1, #36	; 0x24
 80002f0:	4831      	ldr	r0, [pc, #196]	; (80003b8 <display7SEG+0x11c>)
 80002f2:	f001 fb8a 	bl	8001a0a <HAL_GPIO_WritePin>
}
 80002f6:	e05b      	b.n	80003b0 <display7SEG+0x114>
	else if (num == 3){ //011 0000
 80002f8:	687b      	ldr	r3, [r7, #4]
 80002fa:	2b03      	cmp	r3, #3
 80002fc:	d10a      	bne.n	8000314 <display7SEG+0x78>
		HAL_GPIO_WritePin(GPIOB, SEG0_Pin|SEG1_Pin|SEG2_Pin
 80002fe:	2200      	movs	r2, #0
 8000300:	214f      	movs	r1, #79	; 0x4f
 8000302:	482d      	ldr	r0, [pc, #180]	; (80003b8 <display7SEG+0x11c>)
 8000304:	f001 fb81 	bl	8001a0a <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(GPIOB, SEG4_Pin|SEG5_Pin, GPIO_PIN_SET);
 8000308:	2201      	movs	r2, #1
 800030a:	2130      	movs	r1, #48	; 0x30
 800030c:	482a      	ldr	r0, [pc, #168]	; (80003b8 <display7SEG+0x11c>)
 800030e:	f001 fb7c 	bl	8001a0a <HAL_GPIO_WritePin>
}
 8000312:	e04d      	b.n	80003b0 <display7SEG+0x114>
	else if (num == 4){ //001 1001
 8000314:	687b      	ldr	r3, [r7, #4]
 8000316:	2b04      	cmp	r3, #4
 8000318:	d10a      	bne.n	8000330 <display7SEG+0x94>
		HAL_GPIO_WritePin(GPIOB, SEG1_Pin|SEG2_Pin|SEG5_Pin
 800031a:	2200      	movs	r2, #0
 800031c:	2166      	movs	r1, #102	; 0x66
 800031e:	4826      	ldr	r0, [pc, #152]	; (80003b8 <display7SEG+0x11c>)
 8000320:	f001 fb73 	bl	8001a0a <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(GPIOB, SEG0_Pin|SEG3_Pin|SEG4_Pin, GPIO_PIN_SET);
 8000324:	2201      	movs	r2, #1
 8000326:	2119      	movs	r1, #25
 8000328:	4823      	ldr	r0, [pc, #140]	; (80003b8 <display7SEG+0x11c>)
 800032a:	f001 fb6e 	bl	8001a0a <HAL_GPIO_WritePin>
}
 800032e:	e03f      	b.n	80003b0 <display7SEG+0x114>
	else if (num == 5){ //001 0010
 8000330:	687b      	ldr	r3, [r7, #4]
 8000332:	2b05      	cmp	r3, #5
 8000334:	d10a      	bne.n	800034c <display7SEG+0xb0>
		HAL_GPIO_WritePin(GPIOB, SEG0_Pin|SEG2_Pin|SEG3_Pin
 8000336:	2200      	movs	r2, #0
 8000338:	216d      	movs	r1, #109	; 0x6d
 800033a:	481f      	ldr	r0, [pc, #124]	; (80003b8 <display7SEG+0x11c>)
 800033c:	f001 fb65 	bl	8001a0a <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(GPIOB, SEG1_Pin|SEG4_Pin, GPIO_PIN_SET);
 8000340:	2201      	movs	r2, #1
 8000342:	2112      	movs	r1, #18
 8000344:	481c      	ldr	r0, [pc, #112]	; (80003b8 <display7SEG+0x11c>)
 8000346:	f001 fb60 	bl	8001a0a <HAL_GPIO_WritePin>
}
 800034a:	e031      	b.n	80003b0 <display7SEG+0x114>
	else if (num == 6){ //000 0010
 800034c:	687b      	ldr	r3, [r7, #4]
 800034e:	2b06      	cmp	r3, #6
 8000350:	d10a      	bne.n	8000368 <display7SEG+0xcc>
		HAL_GPIO_WritePin(GPIOB, SEG0_Pin|SEG2_Pin|SEG3_Pin
 8000352:	2200      	movs	r2, #0
 8000354:	217d      	movs	r1, #125	; 0x7d
 8000356:	4818      	ldr	r0, [pc, #96]	; (80003b8 <display7SEG+0x11c>)
 8000358:	f001 fb57 	bl	8001a0a <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(GPIOB, SEG1_Pin, GPIO_PIN_SET);
 800035c:	2201      	movs	r2, #1
 800035e:	2102      	movs	r1, #2
 8000360:	4815      	ldr	r0, [pc, #84]	; (80003b8 <display7SEG+0x11c>)
 8000362:	f001 fb52 	bl	8001a0a <HAL_GPIO_WritePin>
}
 8000366:	e023      	b.n	80003b0 <display7SEG+0x114>
	else if (num == 7){ //111 1000
 8000368:	687b      	ldr	r3, [r7, #4]
 800036a:	2b07      	cmp	r3, #7
 800036c:	d10a      	bne.n	8000384 <display7SEG+0xe8>
		HAL_GPIO_WritePin(GPIOB, SEG0_Pin|SEG1_Pin|SEG2_Pin, GPIO_PIN_RESET);
 800036e:	2200      	movs	r2, #0
 8000370:	2107      	movs	r1, #7
 8000372:	4811      	ldr	r0, [pc, #68]	; (80003b8 <display7SEG+0x11c>)
 8000374:	f001 fb49 	bl	8001a0a <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(GPIOB, SEG3_Pin|SEG4_Pin|SEG5_Pin
 8000378:	2201      	movs	r2, #1
 800037a:	2178      	movs	r1, #120	; 0x78
 800037c:	480e      	ldr	r0, [pc, #56]	; (80003b8 <display7SEG+0x11c>)
 800037e:	f001 fb44 	bl	8001a0a <HAL_GPIO_WritePin>
}
 8000382:	e015      	b.n	80003b0 <display7SEG+0x114>
	else if (num == 8){ //000 0000
 8000384:	687b      	ldr	r3, [r7, #4]
 8000386:	2b08      	cmp	r3, #8
 8000388:	d105      	bne.n	8000396 <display7SEG+0xfa>
		HAL_GPIO_WritePin(GPIOB, SEG0_Pin|SEG1_Pin|SEG2_Pin
 800038a:	2200      	movs	r2, #0
 800038c:	217f      	movs	r1, #127	; 0x7f
 800038e:	480a      	ldr	r0, [pc, #40]	; (80003b8 <display7SEG+0x11c>)
 8000390:	f001 fb3b 	bl	8001a0a <HAL_GPIO_WritePin>
}
 8000394:	e00c      	b.n	80003b0 <display7SEG+0x114>
	else if (num == 9){ //001 0000
 8000396:	687b      	ldr	r3, [r7, #4]
 8000398:	2b09      	cmp	r3, #9
 800039a:	d109      	bne.n	80003b0 <display7SEG+0x114>
		HAL_GPIO_WritePin(GPIOB, SEG0_Pin|SEG1_Pin|SEG2_Pin
 800039c:	2200      	movs	r2, #0
 800039e:	216f      	movs	r1, #111	; 0x6f
 80003a0:	4805      	ldr	r0, [pc, #20]	; (80003b8 <display7SEG+0x11c>)
 80003a2:	f001 fb32 	bl	8001a0a <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(GPIOB, SEG4_Pin, GPIO_PIN_SET);
 80003a6:	2201      	movs	r2, #1
 80003a8:	2110      	movs	r1, #16
 80003aa:	4803      	ldr	r0, [pc, #12]	; (80003b8 <display7SEG+0x11c>)
 80003ac:	f001 fb2d 	bl	8001a0a <HAL_GPIO_WritePin>
}
 80003b0:	bf00      	nop
 80003b2:	3708      	adds	r7, #8
 80003b4:	46bd      	mov	sp, r7
 80003b6:	bd80      	pop	{r7, pc}
 80003b8:	40010c00 	.word	0x40010c00

080003bc <update7SEG>:


void update7SEG(int index){
 80003bc:	b580      	push	{r7, lr}
 80003be:	b082      	sub	sp, #8
 80003c0:	af00      	add	r7, sp, #0
 80003c2:	6078      	str	r0, [r7, #4]
 80003c4:	687b      	ldr	r3, [r7, #4]
 80003c6:	2b03      	cmp	r3, #3
 80003c8:	d866      	bhi.n	8000498 <update7SEG+0xdc>
 80003ca:	a201      	add	r2, pc, #4	; (adr r2, 80003d0 <update7SEG+0x14>)
 80003cc:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80003d0:	080003e1 	.word	0x080003e1
 80003d4:	0800040f 	.word	0x0800040f
 80003d8:	0800043d 	.word	0x0800043d
 80003dc:	0800046b 	.word	0x0800046b
	switch (index){
		case 0:
			//turn on first 7seg led only
			HAL_GPIO_WritePin(EN0_GPIO_Port, EN0_Pin, GPIO_PIN_RESET);
 80003e0:	2200      	movs	r2, #0
 80003e2:	2140      	movs	r1, #64	; 0x40
 80003e4:	4832      	ldr	r0, [pc, #200]	; (80004b0 <update7SEG+0xf4>)
 80003e6:	f001 fb10 	bl	8001a0a <HAL_GPIO_WritePin>
			HAL_GPIO_WritePin(EN1_GPIO_Port, EN1_Pin, GPIO_PIN_SET);
 80003ea:	2201      	movs	r2, #1
 80003ec:	2180      	movs	r1, #128	; 0x80
 80003ee:	4830      	ldr	r0, [pc, #192]	; (80004b0 <update7SEG+0xf4>)
 80003f0:	f001 fb0b 	bl	8001a0a <HAL_GPIO_WritePin>
			HAL_GPIO_WritePin(EN2_GPIO_Port, EN2_Pin, GPIO_PIN_SET);
 80003f4:	2201      	movs	r2, #1
 80003f6:	f44f 7180 	mov.w	r1, #256	; 0x100
 80003fa:	482d      	ldr	r0, [pc, #180]	; (80004b0 <update7SEG+0xf4>)
 80003fc:	f001 fb05 	bl	8001a0a <HAL_GPIO_WritePin>
			HAL_GPIO_WritePin(EN3_GPIO_Port, EN3_Pin, GPIO_PIN_SET);
 8000400:	2201      	movs	r2, #1
 8000402:	f44f 7100 	mov.w	r1, #512	; 0x200
 8000406:	482a      	ldr	r0, [pc, #168]	; (80004b0 <update7SEG+0xf4>)
 8000408:	f001 faff 	bl	8001a0a <HAL_GPIO_WritePin>
			break;
 800040c:	e045      	b.n	800049a <update7SEG+0xde>
		case 1:
			//turn on second 7seg led only
			HAL_GPIO_WritePin(EN0_GPIO_Port, EN0_Pin, GPIO_PIN_SET);
 800040e:	2201      	movs	r2, #1
 8000410:	2140      	movs	r1, #64	; 0x40
 8000412:	4827      	ldr	r0, [pc, #156]	; (80004b0 <update7SEG+0xf4>)
 8000414:	f001 faf9 	bl	8001a0a <HAL_GPIO_WritePin>
			HAL_GPIO_WritePin(EN1_GPIO_Port, EN1_Pin, GPIO_PIN_RESET);
 8000418:	2200      	movs	r2, #0
 800041a:	2180      	movs	r1, #128	; 0x80
 800041c:	4824      	ldr	r0, [pc, #144]	; (80004b0 <update7SEG+0xf4>)
 800041e:	f001 faf4 	bl	8001a0a <HAL_GPIO_WritePin>
			HAL_GPIO_WritePin(EN2_GPIO_Port, EN2_Pin, GPIO_PIN_SET);
 8000422:	2201      	movs	r2, #1
 8000424:	f44f 7180 	mov.w	r1, #256	; 0x100
 8000428:	4821      	ldr	r0, [pc, #132]	; (80004b0 <update7SEG+0xf4>)
 800042a:	f001 faee 	bl	8001a0a <HAL_GPIO_WritePin>
			HAL_GPIO_WritePin(EN3_GPIO_Port, EN3_Pin, GPIO_PIN_SET);
 800042e:	2201      	movs	r2, #1
 8000430:	f44f 7100 	mov.w	r1, #512	; 0x200
 8000434:	481e      	ldr	r0, [pc, #120]	; (80004b0 <update7SEG+0xf4>)
 8000436:	f001 fae8 	bl	8001a0a <HAL_GPIO_WritePin>
			break;
 800043a:	e02e      	b.n	800049a <update7SEG+0xde>
		case 2:
			//turn on third 7seg led only
			HAL_GPIO_WritePin(EN0_GPIO_Port, EN0_Pin, GPIO_PIN_SET);
 800043c:	2201      	movs	r2, #1
 800043e:	2140      	movs	r1, #64	; 0x40
 8000440:	481b      	ldr	r0, [pc, #108]	; (80004b0 <update7SEG+0xf4>)
 8000442:	f001 fae2 	bl	8001a0a <HAL_GPIO_WritePin>
			HAL_GPIO_WritePin(EN1_GPIO_Port, EN1_Pin, GPIO_PIN_SET);
 8000446:	2201      	movs	r2, #1
 8000448:	2180      	movs	r1, #128	; 0x80
 800044a:	4819      	ldr	r0, [pc, #100]	; (80004b0 <update7SEG+0xf4>)
 800044c:	f001 fadd 	bl	8001a0a <HAL_GPIO_WritePin>
			HAL_GPIO_WritePin(EN2_GPIO_Port, EN2_Pin, GPIO_PIN_RESET);
 8000450:	2200      	movs	r2, #0
 8000452:	f44f 7180 	mov.w	r1, #256	; 0x100
 8000456:	4816      	ldr	r0, [pc, #88]	; (80004b0 <update7SEG+0xf4>)
 8000458:	f001 fad7 	bl	8001a0a <HAL_GPIO_WritePin>
			HAL_GPIO_WritePin(EN3_GPIO_Port, EN3_Pin, GPIO_PIN_SET);
 800045c:	2201      	movs	r2, #1
 800045e:	f44f 7100 	mov.w	r1, #512	; 0x200
 8000462:	4813      	ldr	r0, [pc, #76]	; (80004b0 <update7SEG+0xf4>)
 8000464:	f001 fad1 	bl	8001a0a <HAL_GPIO_WritePin>
			break;
 8000468:	e017      	b.n	800049a <update7SEG+0xde>
		case 3:
			//turn on fourth 7seg led only
			HAL_GPIO_WritePin(EN0_GPIO_Port, EN0_Pin, GPIO_PIN_SET);
 800046a:	2201      	movs	r2, #1
 800046c:	2140      	movs	r1, #64	; 0x40
 800046e:	4810      	ldr	r0, [pc, #64]	; (80004b0 <update7SEG+0xf4>)
 8000470:	f001 facb 	bl	8001a0a <HAL_GPIO_WritePin>
			HAL_GPIO_WritePin(EN1_GPIO_Port, EN1_Pin, GPIO_PIN_SET);
 8000474:	2201      	movs	r2, #1
 8000476:	2180      	movs	r1, #128	; 0x80
 8000478:	480d      	ldr	r0, [pc, #52]	; (80004b0 <update7SEG+0xf4>)
 800047a:	f001 fac6 	bl	8001a0a <HAL_GPIO_WritePin>
			HAL_GPIO_WritePin(EN2_GPIO_Port, EN2_Pin, GPIO_PIN_SET);
 800047e:	2201      	movs	r2, #1
 8000480:	f44f 7180 	mov.w	r1, #256	; 0x100
 8000484:	480a      	ldr	r0, [pc, #40]	; (80004b0 <update7SEG+0xf4>)
 8000486:	f001 fac0 	bl	8001a0a <HAL_GPIO_WritePin>
			HAL_GPIO_WritePin(EN3_GPIO_Port, EN3_Pin, GPIO_PIN_RESET);
 800048a:	2200      	movs	r2, #0
 800048c:	f44f 7100 	mov.w	r1, #512	; 0x200
 8000490:	4807      	ldr	r0, [pc, #28]	; (80004b0 <update7SEG+0xf4>)
 8000492:	f001 faba 	bl	8001a0a <HAL_GPIO_WritePin>
			break;
 8000496:	e000      	b.n	800049a <update7SEG+0xde>
		default:
			break;
 8000498:	bf00      	nop
	}
	//display number according to led_buffer and index
	display7SEG(led_buffer[index]);
 800049a:	4a06      	ldr	r2, [pc, #24]	; (80004b4 <update7SEG+0xf8>)
 800049c:	687b      	ldr	r3, [r7, #4]
 800049e:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 80004a2:	4618      	mov	r0, r3
 80004a4:	f7ff fefa 	bl	800029c <display7SEG>
}
 80004a8:	bf00      	nop
 80004aa:	3708      	adds	r7, #8
 80004ac:	46bd      	mov	sp, r7
 80004ae:	bd80      	pop	{r7, pc}
 80004b0:	40010800 	.word	0x40010800
 80004b4:	20000074 	.word	0x20000074

080004b8 <updateClockBuffer>:

void updateClockBuffer(int Clock1, int Clock2){
 80004b8:	b480      	push	{r7}
 80004ba:	b083      	sub	sp, #12
 80004bc:	af00      	add	r7, sp, #0
 80004be:	6078      	str	r0, [r7, #4]
 80004c0:	6039      	str	r1, [r7, #0]
	led_buffer[0] = Clock1 / 10;
 80004c2:	687b      	ldr	r3, [r7, #4]
 80004c4:	4a18      	ldr	r2, [pc, #96]	; (8000528 <updateClockBuffer+0x70>)
 80004c6:	fb82 1203 	smull	r1, r2, r2, r3
 80004ca:	1092      	asrs	r2, r2, #2
 80004cc:	17db      	asrs	r3, r3, #31
 80004ce:	1ad3      	subs	r3, r2, r3
 80004d0:	4a16      	ldr	r2, [pc, #88]	; (800052c <updateClockBuffer+0x74>)
 80004d2:	6013      	str	r3, [r2, #0]
	led_buffer[1] = Clock1 % 10;
 80004d4:	6879      	ldr	r1, [r7, #4]
 80004d6:	4b14      	ldr	r3, [pc, #80]	; (8000528 <updateClockBuffer+0x70>)
 80004d8:	fb83 2301 	smull	r2, r3, r3, r1
 80004dc:	109a      	asrs	r2, r3, #2
 80004de:	17cb      	asrs	r3, r1, #31
 80004e0:	1ad2      	subs	r2, r2, r3
 80004e2:	4613      	mov	r3, r2
 80004e4:	009b      	lsls	r3, r3, #2
 80004e6:	4413      	add	r3, r2
 80004e8:	005b      	lsls	r3, r3, #1
 80004ea:	1aca      	subs	r2, r1, r3
 80004ec:	4b0f      	ldr	r3, [pc, #60]	; (800052c <updateClockBuffer+0x74>)
 80004ee:	605a      	str	r2, [r3, #4]
	led_buffer[2] = Clock2 / 10;
 80004f0:	683b      	ldr	r3, [r7, #0]
 80004f2:	4a0d      	ldr	r2, [pc, #52]	; (8000528 <updateClockBuffer+0x70>)
 80004f4:	fb82 1203 	smull	r1, r2, r2, r3
 80004f8:	1092      	asrs	r2, r2, #2
 80004fa:	17db      	asrs	r3, r3, #31
 80004fc:	1ad3      	subs	r3, r2, r3
 80004fe:	4a0b      	ldr	r2, [pc, #44]	; (800052c <updateClockBuffer+0x74>)
 8000500:	6093      	str	r3, [r2, #8]
	led_buffer[3] = Clock2 % 10;
 8000502:	6839      	ldr	r1, [r7, #0]
 8000504:	4b08      	ldr	r3, [pc, #32]	; (8000528 <updateClockBuffer+0x70>)
 8000506:	fb83 2301 	smull	r2, r3, r3, r1
 800050a:	109a      	asrs	r2, r3, #2
 800050c:	17cb      	asrs	r3, r1, #31
 800050e:	1ad2      	subs	r2, r2, r3
 8000510:	4613      	mov	r3, r2
 8000512:	009b      	lsls	r3, r3, #2
 8000514:	4413      	add	r3, r2
 8000516:	005b      	lsls	r3, r3, #1
 8000518:	1aca      	subs	r2, r1, r3
 800051a:	4b04      	ldr	r3, [pc, #16]	; (800052c <updateClockBuffer+0x74>)
 800051c:	60da      	str	r2, [r3, #12]
}
 800051e:	bf00      	nop
 8000520:	370c      	adds	r7, #12
 8000522:	46bd      	mov	sp, r7
 8000524:	bc80      	pop	{r7}
 8000526:	4770      	bx	lr
 8000528:	66666667 	.word	0x66666667
 800052c:	20000074 	.word	0x20000074

08000530 <Run_7SEG>:
int status_time1 = 0;
int status_time2 = 0;
int time1 = 0;//don vi s
int time2 = 0;//don vi s

void Run_7SEG(){
 8000530:	b580      	push	{r7, lr}
 8000532:	af00      	add	r7, sp, #0
	if(status_col==MAN_RED || status_col==MAN_GREEN || status_col==MAN_YELLOW){
 8000534:	4b6f      	ldr	r3, [pc, #444]	; (80006f4 <Run_7SEG+0x1c4>)
 8000536:	681b      	ldr	r3, [r3, #0]
 8000538:	2b0c      	cmp	r3, #12
 800053a:	d007      	beq.n	800054c <Run_7SEG+0x1c>
 800053c:	4b6d      	ldr	r3, [pc, #436]	; (80006f4 <Run_7SEG+0x1c4>)
 800053e:	681b      	ldr	r3, [r3, #0]
 8000540:	2b0d      	cmp	r3, #13
 8000542:	d003      	beq.n	800054c <Run_7SEG+0x1c>
 8000544:	4b6b      	ldr	r3, [pc, #428]	; (80006f4 <Run_7SEG+0x1c4>)
 8000546:	681b      	ldr	r3, [r3, #0]
 8000548:	2b0e      	cmp	r3, #14
 800054a:	d113      	bne.n	8000574 <Run_7SEG+0x44>
		time1 = Time_Auto_Red/1000;//don vi s
 800054c:	4b6a      	ldr	r3, [pc, #424]	; (80006f8 <Run_7SEG+0x1c8>)
 800054e:	681b      	ldr	r3, [r3, #0]
 8000550:	4a6a      	ldr	r2, [pc, #424]	; (80006fc <Run_7SEG+0x1cc>)
 8000552:	fb82 1203 	smull	r1, r2, r2, r3
 8000556:	1192      	asrs	r2, r2, #6
 8000558:	17db      	asrs	r3, r3, #31
 800055a:	1ad3      	subs	r3, r2, r3
 800055c:	4a68      	ldr	r2, [pc, #416]	; (8000700 <Run_7SEG+0x1d0>)
 800055e:	6013      	str	r3, [r2, #0]
		time2 = Time_Auto_Green/1000;//don vi s
 8000560:	4b68      	ldr	r3, [pc, #416]	; (8000704 <Run_7SEG+0x1d4>)
 8000562:	681b      	ldr	r3, [r3, #0]
 8000564:	4a65      	ldr	r2, [pc, #404]	; (80006fc <Run_7SEG+0x1cc>)
 8000566:	fb82 1203 	smull	r1, r2, r2, r3
 800056a:	1192      	asrs	r2, r2, #6
 800056c:	17db      	asrs	r3, r3, #31
 800056e:	1ad3      	subs	r3, r2, r3
 8000570:	4a65      	ldr	r2, [pc, #404]	; (8000708 <Run_7SEG+0x1d8>)
 8000572:	6013      	str	r3, [r2, #0]
	}
	// for normal states
	if(status_col!=MAN_RED && status_col!=MAN_GREEN && status_col!=MAN_YELLOW){
 8000574:	4b5f      	ldr	r3, [pc, #380]	; (80006f4 <Run_7SEG+0x1c4>)
 8000576:	681b      	ldr	r3, [r3, #0]
 8000578:	2b0c      	cmp	r3, #12
 800057a:	f000 80a0 	beq.w	80006be <Run_7SEG+0x18e>
 800057e:	4b5d      	ldr	r3, [pc, #372]	; (80006f4 <Run_7SEG+0x1c4>)
 8000580:	681b      	ldr	r3, [r3, #0]
 8000582:	2b0d      	cmp	r3, #13
 8000584:	f000 809b 	beq.w	80006be <Run_7SEG+0x18e>
 8000588:	4b5a      	ldr	r3, [pc, #360]	; (80006f4 <Run_7SEG+0x1c4>)
 800058a:	681b      	ldr	r3, [r3, #0]
 800058c:	2b0e      	cmp	r3, #14
 800058e:	f000 8096 	beq.w	80006be <Run_7SEG+0x18e>
		if(time1<=0){
 8000592:	4b5b      	ldr	r3, [pc, #364]	; (8000700 <Run_7SEG+0x1d0>)
 8000594:	681b      	ldr	r3, [r3, #0]
 8000596:	2b00      	cmp	r3, #0
 8000598:	dc39      	bgt.n	800060e <Run_7SEG+0xde>
			if(status_time1==0) {
 800059a:	4b5c      	ldr	r3, [pc, #368]	; (800070c <Run_7SEG+0x1dc>)
 800059c:	681b      	ldr	r3, [r3, #0]
 800059e:	2b00      	cmp	r3, #0
 80005a0:	d10a      	bne.n	80005b8 <Run_7SEG+0x88>
				time1=Time_Auto_Red/1000;
 80005a2:	4b55      	ldr	r3, [pc, #340]	; (80006f8 <Run_7SEG+0x1c8>)
 80005a4:	681b      	ldr	r3, [r3, #0]
 80005a6:	4a55      	ldr	r2, [pc, #340]	; (80006fc <Run_7SEG+0x1cc>)
 80005a8:	fb82 1203 	smull	r1, r2, r2, r3
 80005ac:	1192      	asrs	r2, r2, #6
 80005ae:	17db      	asrs	r3, r3, #31
 80005b0:	1ad3      	subs	r3, r2, r3
 80005b2:	4a53      	ldr	r2, [pc, #332]	; (8000700 <Run_7SEG+0x1d0>)
 80005b4:	6013      	str	r3, [r2, #0]
 80005b6:	e01c      	b.n	80005f2 <Run_7SEG+0xc2>
			}
			else if(status_time1==1 ){
 80005b8:	4b54      	ldr	r3, [pc, #336]	; (800070c <Run_7SEG+0x1dc>)
 80005ba:	681b      	ldr	r3, [r3, #0]
 80005bc:	2b01      	cmp	r3, #1
 80005be:	d10a      	bne.n	80005d6 <Run_7SEG+0xa6>
				time1=Time_Auto_Green/1000;
 80005c0:	4b50      	ldr	r3, [pc, #320]	; (8000704 <Run_7SEG+0x1d4>)
 80005c2:	681b      	ldr	r3, [r3, #0]
 80005c4:	4a4d      	ldr	r2, [pc, #308]	; (80006fc <Run_7SEG+0x1cc>)
 80005c6:	fb82 1203 	smull	r1, r2, r2, r3
 80005ca:	1192      	asrs	r2, r2, #6
 80005cc:	17db      	asrs	r3, r3, #31
 80005ce:	1ad3      	subs	r3, r2, r3
 80005d0:	4a4b      	ldr	r2, [pc, #300]	; (8000700 <Run_7SEG+0x1d0>)
 80005d2:	6013      	str	r3, [r2, #0]
 80005d4:	e00d      	b.n	80005f2 <Run_7SEG+0xc2>
			}
			else if(status_time1==2 ){
 80005d6:	4b4d      	ldr	r3, [pc, #308]	; (800070c <Run_7SEG+0x1dc>)
 80005d8:	681b      	ldr	r3, [r3, #0]
 80005da:	2b02      	cmp	r3, #2
 80005dc:	d109      	bne.n	80005f2 <Run_7SEG+0xc2>
				time1=Time_Auto_Yellow/1000;
 80005de:	4b4c      	ldr	r3, [pc, #304]	; (8000710 <Run_7SEG+0x1e0>)
 80005e0:	681b      	ldr	r3, [r3, #0]
 80005e2:	4a46      	ldr	r2, [pc, #280]	; (80006fc <Run_7SEG+0x1cc>)
 80005e4:	fb82 1203 	smull	r1, r2, r2, r3
 80005e8:	1192      	asrs	r2, r2, #6
 80005ea:	17db      	asrs	r3, r3, #31
 80005ec:	1ad3      	subs	r3, r2, r3
 80005ee:	4a44      	ldr	r2, [pc, #272]	; (8000700 <Run_7SEG+0x1d0>)
 80005f0:	6013      	str	r3, [r2, #0]
			}
			status_time1 = (status_time1+1)%3;
 80005f2:	4b46      	ldr	r3, [pc, #280]	; (800070c <Run_7SEG+0x1dc>)
 80005f4:	681b      	ldr	r3, [r3, #0]
 80005f6:	1c59      	adds	r1, r3, #1
 80005f8:	4b46      	ldr	r3, [pc, #280]	; (8000714 <Run_7SEG+0x1e4>)
 80005fa:	fb83 3201 	smull	r3, r2, r3, r1
 80005fe:	17cb      	asrs	r3, r1, #31
 8000600:	1ad2      	subs	r2, r2, r3
 8000602:	4613      	mov	r3, r2
 8000604:	005b      	lsls	r3, r3, #1
 8000606:	4413      	add	r3, r2
 8000608:	1aca      	subs	r2, r1, r3
 800060a:	4b40      	ldr	r3, [pc, #256]	; (800070c <Run_7SEG+0x1dc>)
 800060c:	601a      	str	r2, [r3, #0]
		}
		if(time2<=0){
 800060e:	4b3e      	ldr	r3, [pc, #248]	; (8000708 <Run_7SEG+0x1d8>)
 8000610:	681b      	ldr	r3, [r3, #0]
 8000612:	2b00      	cmp	r3, #0
 8000614:	dc39      	bgt.n	800068a <Run_7SEG+0x15a>
			if(status_time2==0 ) {
 8000616:	4b40      	ldr	r3, [pc, #256]	; (8000718 <Run_7SEG+0x1e8>)
 8000618:	681b      	ldr	r3, [r3, #0]
 800061a:	2b00      	cmp	r3, #0
 800061c:	d10a      	bne.n	8000634 <Run_7SEG+0x104>
				time2=Time_Auto_Green/1000;
 800061e:	4b39      	ldr	r3, [pc, #228]	; (8000704 <Run_7SEG+0x1d4>)
 8000620:	681b      	ldr	r3, [r3, #0]
 8000622:	4a36      	ldr	r2, [pc, #216]	; (80006fc <Run_7SEG+0x1cc>)
 8000624:	fb82 1203 	smull	r1, r2, r2, r3
 8000628:	1192      	asrs	r2, r2, #6
 800062a:	17db      	asrs	r3, r3, #31
 800062c:	1ad3      	subs	r3, r2, r3
 800062e:	4a36      	ldr	r2, [pc, #216]	; (8000708 <Run_7SEG+0x1d8>)
 8000630:	6013      	str	r3, [r2, #0]
 8000632:	e01c      	b.n	800066e <Run_7SEG+0x13e>
			}
			else if(status_time2==1){
 8000634:	4b38      	ldr	r3, [pc, #224]	; (8000718 <Run_7SEG+0x1e8>)
 8000636:	681b      	ldr	r3, [r3, #0]
 8000638:	2b01      	cmp	r3, #1
 800063a:	d10a      	bne.n	8000652 <Run_7SEG+0x122>
				time2=Time_Auto_Yellow/1000;
 800063c:	4b34      	ldr	r3, [pc, #208]	; (8000710 <Run_7SEG+0x1e0>)
 800063e:	681b      	ldr	r3, [r3, #0]
 8000640:	4a2e      	ldr	r2, [pc, #184]	; (80006fc <Run_7SEG+0x1cc>)
 8000642:	fb82 1203 	smull	r1, r2, r2, r3
 8000646:	1192      	asrs	r2, r2, #6
 8000648:	17db      	asrs	r3, r3, #31
 800064a:	1ad3      	subs	r3, r2, r3
 800064c:	4a2e      	ldr	r2, [pc, #184]	; (8000708 <Run_7SEG+0x1d8>)
 800064e:	6013      	str	r3, [r2, #0]
 8000650:	e00d      	b.n	800066e <Run_7SEG+0x13e>
			}
			else if(status_time2==2){
 8000652:	4b31      	ldr	r3, [pc, #196]	; (8000718 <Run_7SEG+0x1e8>)
 8000654:	681b      	ldr	r3, [r3, #0]
 8000656:	2b02      	cmp	r3, #2
 8000658:	d109      	bne.n	800066e <Run_7SEG+0x13e>
				time2=Time_Auto_Red/1000;
 800065a:	4b27      	ldr	r3, [pc, #156]	; (80006f8 <Run_7SEG+0x1c8>)
 800065c:	681b      	ldr	r3, [r3, #0]
 800065e:	4a27      	ldr	r2, [pc, #156]	; (80006fc <Run_7SEG+0x1cc>)
 8000660:	fb82 1203 	smull	r1, r2, r2, r3
 8000664:	1192      	asrs	r2, r2, #6
 8000666:	17db      	asrs	r3, r3, #31
 8000668:	1ad3      	subs	r3, r2, r3
 800066a:	4a27      	ldr	r2, [pc, #156]	; (8000708 <Run_7SEG+0x1d8>)
 800066c:	6013      	str	r3, [r2, #0]
			}
			status_time2 = (status_time2+1)%3;
 800066e:	4b2a      	ldr	r3, [pc, #168]	; (8000718 <Run_7SEG+0x1e8>)
 8000670:	681b      	ldr	r3, [r3, #0]
 8000672:	1c59      	adds	r1, r3, #1
 8000674:	4b27      	ldr	r3, [pc, #156]	; (8000714 <Run_7SEG+0x1e4>)
 8000676:	fb83 3201 	smull	r3, r2, r3, r1
 800067a:	17cb      	asrs	r3, r1, #31
 800067c:	1ad2      	subs	r2, r2, r3
 800067e:	4613      	mov	r3, r2
 8000680:	005b      	lsls	r3, r3, #1
 8000682:	4413      	add	r3, r2
 8000684:	1aca      	subs	r2, r1, r3
 8000686:	4b24      	ldr	r3, [pc, #144]	; (8000718 <Run_7SEG+0x1e8>)
 8000688:	601a      	str	r2, [r3, #0]
		}
		if(timer2_flag==1){
 800068a:	4b24      	ldr	r3, [pc, #144]	; (800071c <Run_7SEG+0x1ec>)
 800068c:	681b      	ldr	r3, [r3, #0]
 800068e:	2b01      	cmp	r3, #1
 8000690:	d115      	bne.n	80006be <Run_7SEG+0x18e>
			setTimer2(1000);
 8000692:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 8000696:	f000 f863 	bl	8000760 <setTimer2>

			updateClockBuffer(time1,time2);
 800069a:	4b19      	ldr	r3, [pc, #100]	; (8000700 <Run_7SEG+0x1d0>)
 800069c:	681b      	ldr	r3, [r3, #0]
 800069e:	4a1a      	ldr	r2, [pc, #104]	; (8000708 <Run_7SEG+0x1d8>)
 80006a0:	6812      	ldr	r2, [r2, #0]
 80006a2:	4611      	mov	r1, r2
 80006a4:	4618      	mov	r0, r3
 80006a6:	f7ff ff07 	bl	80004b8 <updateClockBuffer>
			time1--;
 80006aa:	4b15      	ldr	r3, [pc, #84]	; (8000700 <Run_7SEG+0x1d0>)
 80006ac:	681b      	ldr	r3, [r3, #0]
 80006ae:	3b01      	subs	r3, #1
 80006b0:	4a13      	ldr	r2, [pc, #76]	; (8000700 <Run_7SEG+0x1d0>)
 80006b2:	6013      	str	r3, [r2, #0]
			time2--;
 80006b4:	4b14      	ldr	r3, [pc, #80]	; (8000708 <Run_7SEG+0x1d8>)
 80006b6:	681b      	ldr	r3, [r3, #0]
 80006b8:	3b01      	subs	r3, #1
 80006ba:	4a13      	ldr	r2, [pc, #76]	; (8000708 <Run_7SEG+0x1d8>)
 80006bc:	6013      	str	r3, [r2, #0]
		}
	}


	if (timer3_flag == 1){
 80006be:	4b18      	ldr	r3, [pc, #96]	; (8000720 <Run_7SEG+0x1f0>)
 80006c0:	681b      	ldr	r3, [r3, #0]
 80006c2:	2b01      	cmp	r3, #1
 80006c4:	d114      	bne.n	80006f0 <Run_7SEG+0x1c0>
		//set timer for 1Hz frequency
		setTimer3(250);
 80006c6:	20fa      	movs	r0, #250	; 0xfa
 80006c8:	f000 f866 	bl	8000798 <setTimer3>
		//updated index_led to stay in valid range, which is from 0 to 3
		index_led %= MAX_LED;
 80006cc:	4b15      	ldr	r3, [pc, #84]	; (8000724 <Run_7SEG+0x1f4>)
 80006ce:	681b      	ldr	r3, [r3, #0]
 80006d0:	2204      	movs	r2, #4
 80006d2:	fb93 f1f2 	sdiv	r1, r3, r2
 80006d6:	fb02 f201 	mul.w	r2, r2, r1
 80006da:	1a9b      	subs	r3, r3, r2
 80006dc:	4a11      	ldr	r2, [pc, #68]	; (8000724 <Run_7SEG+0x1f4>)
 80006de:	6013      	str	r3, [r2, #0]
		//update 7seg leds
		update7SEG(index_led++);
 80006e0:	4b10      	ldr	r3, [pc, #64]	; (8000724 <Run_7SEG+0x1f4>)
 80006e2:	681b      	ldr	r3, [r3, #0]
 80006e4:	1c5a      	adds	r2, r3, #1
 80006e6:	490f      	ldr	r1, [pc, #60]	; (8000724 <Run_7SEG+0x1f4>)
 80006e8:	600a      	str	r2, [r1, #0]
 80006ea:	4618      	mov	r0, r3
 80006ec:	f7ff fe66 	bl	80003bc <update7SEG>
	}
}
 80006f0:	bf00      	nop
 80006f2:	bd80      	pop	{r7, pc}
 80006f4:	200000cc 	.word	0x200000cc
 80006f8:	2000003c 	.word	0x2000003c
 80006fc:	10624dd3 	.word	0x10624dd3
 8000700:	2000008c 	.word	0x2000008c
 8000704:	20000040 	.word	0x20000040
 8000708:	20000090 	.word	0x20000090
 800070c:	20000084 	.word	0x20000084
 8000710:	20000044 	.word	0x20000044
 8000714:	55555556 	.word	0x55555556
 8000718:	20000088 	.word	0x20000088
 800071c:	200000a0 	.word	0x200000a0
 8000720:	200000a8 	.word	0x200000a8
 8000724:	20000070 	.word	0x20000070

08000728 <setTimer1>:
int timer4_flag = 0;

int timer5_counter = 0;
int timer5_flag = 0;

void setTimer1(int duration){
 8000728:	b480      	push	{r7}
 800072a:	b083      	sub	sp, #12
 800072c:	af00      	add	r7, sp, #0
 800072e:	6078      	str	r0, [r7, #4]
	timer1_counter = duration/TICK;
 8000730:	687b      	ldr	r3, [r7, #4]
 8000732:	4a08      	ldr	r2, [pc, #32]	; (8000754 <setTimer1+0x2c>)
 8000734:	fb82 1203 	smull	r1, r2, r2, r3
 8000738:	1092      	asrs	r2, r2, #2
 800073a:	17db      	asrs	r3, r3, #31
 800073c:	1ad3      	subs	r3, r2, r3
 800073e:	4a06      	ldr	r2, [pc, #24]	; (8000758 <setTimer1+0x30>)
 8000740:	6013      	str	r3, [r2, #0]
	timer1_flag = 0;
 8000742:	4b06      	ldr	r3, [pc, #24]	; (800075c <setTimer1+0x34>)
 8000744:	2200      	movs	r2, #0
 8000746:	601a      	str	r2, [r3, #0]
}
 8000748:	bf00      	nop
 800074a:	370c      	adds	r7, #12
 800074c:	46bd      	mov	sp, r7
 800074e:	bc80      	pop	{r7}
 8000750:	4770      	bx	lr
 8000752:	bf00      	nop
 8000754:	66666667 	.word	0x66666667
 8000758:	20000094 	.word	0x20000094
 800075c:	20000098 	.word	0x20000098

08000760 <setTimer2>:

void setTimer2(int duration){
 8000760:	b480      	push	{r7}
 8000762:	b083      	sub	sp, #12
 8000764:	af00      	add	r7, sp, #0
 8000766:	6078      	str	r0, [r7, #4]
	timer2_counter = duration/TICK;
 8000768:	687b      	ldr	r3, [r7, #4]
 800076a:	4a08      	ldr	r2, [pc, #32]	; (800078c <setTimer2+0x2c>)
 800076c:	fb82 1203 	smull	r1, r2, r2, r3
 8000770:	1092      	asrs	r2, r2, #2
 8000772:	17db      	asrs	r3, r3, #31
 8000774:	1ad3      	subs	r3, r2, r3
 8000776:	4a06      	ldr	r2, [pc, #24]	; (8000790 <setTimer2+0x30>)
 8000778:	6013      	str	r3, [r2, #0]
	timer2_flag = 0;
 800077a:	4b06      	ldr	r3, [pc, #24]	; (8000794 <setTimer2+0x34>)
 800077c:	2200      	movs	r2, #0
 800077e:	601a      	str	r2, [r3, #0]
}
 8000780:	bf00      	nop
 8000782:	370c      	adds	r7, #12
 8000784:	46bd      	mov	sp, r7
 8000786:	bc80      	pop	{r7}
 8000788:	4770      	bx	lr
 800078a:	bf00      	nop
 800078c:	66666667 	.word	0x66666667
 8000790:	2000009c 	.word	0x2000009c
 8000794:	200000a0 	.word	0x200000a0

08000798 <setTimer3>:

void setTimer3(int duration){
 8000798:	b480      	push	{r7}
 800079a:	b083      	sub	sp, #12
 800079c:	af00      	add	r7, sp, #0
 800079e:	6078      	str	r0, [r7, #4]
	timer3_counter = duration/TICK;
 80007a0:	687b      	ldr	r3, [r7, #4]
 80007a2:	4a08      	ldr	r2, [pc, #32]	; (80007c4 <setTimer3+0x2c>)
 80007a4:	fb82 1203 	smull	r1, r2, r2, r3
 80007a8:	1092      	asrs	r2, r2, #2
 80007aa:	17db      	asrs	r3, r3, #31
 80007ac:	1ad3      	subs	r3, r2, r3
 80007ae:	4a06      	ldr	r2, [pc, #24]	; (80007c8 <setTimer3+0x30>)
 80007b0:	6013      	str	r3, [r2, #0]
	timer3_flag = 0;
 80007b2:	4b06      	ldr	r3, [pc, #24]	; (80007cc <setTimer3+0x34>)
 80007b4:	2200      	movs	r2, #0
 80007b6:	601a      	str	r2, [r3, #0]
}
 80007b8:	bf00      	nop
 80007ba:	370c      	adds	r7, #12
 80007bc:	46bd      	mov	sp, r7
 80007be:	bc80      	pop	{r7}
 80007c0:	4770      	bx	lr
 80007c2:	bf00      	nop
 80007c4:	66666667 	.word	0x66666667
 80007c8:	200000a4 	.word	0x200000a4
 80007cc:	200000a8 	.word	0x200000a8

080007d0 <setTimer4>:

void setTimer4(int duration){
 80007d0:	b480      	push	{r7}
 80007d2:	b083      	sub	sp, #12
 80007d4:	af00      	add	r7, sp, #0
 80007d6:	6078      	str	r0, [r7, #4]
	timer4_counter = duration/TICK;
 80007d8:	687b      	ldr	r3, [r7, #4]
 80007da:	4a08      	ldr	r2, [pc, #32]	; (80007fc <setTimer4+0x2c>)
 80007dc:	fb82 1203 	smull	r1, r2, r2, r3
 80007e0:	1092      	asrs	r2, r2, #2
 80007e2:	17db      	asrs	r3, r3, #31
 80007e4:	1ad3      	subs	r3, r2, r3
 80007e6:	4a06      	ldr	r2, [pc, #24]	; (8000800 <setTimer4+0x30>)
 80007e8:	6013      	str	r3, [r2, #0]
	timer4_flag = 0;
 80007ea:	4b06      	ldr	r3, [pc, #24]	; (8000804 <setTimer4+0x34>)
 80007ec:	2200      	movs	r2, #0
 80007ee:	601a      	str	r2, [r3, #0]
}
 80007f0:	bf00      	nop
 80007f2:	370c      	adds	r7, #12
 80007f4:	46bd      	mov	sp, r7
 80007f6:	bc80      	pop	{r7}
 80007f8:	4770      	bx	lr
 80007fa:	bf00      	nop
 80007fc:	66666667 	.word	0x66666667
 8000800:	200000ac 	.word	0x200000ac
 8000804:	200000b0 	.word	0x200000b0

08000808 <setTimer5>:

void setTimer5(int duration){
 8000808:	b480      	push	{r7}
 800080a:	b083      	sub	sp, #12
 800080c:	af00      	add	r7, sp, #0
 800080e:	6078      	str	r0, [r7, #4]
	timer5_counter = duration/TICK;
 8000810:	687b      	ldr	r3, [r7, #4]
 8000812:	4a08      	ldr	r2, [pc, #32]	; (8000834 <setTimer5+0x2c>)
 8000814:	fb82 1203 	smull	r1, r2, r2, r3
 8000818:	1092      	asrs	r2, r2, #2
 800081a:	17db      	asrs	r3, r3, #31
 800081c:	1ad3      	subs	r3, r2, r3
 800081e:	4a06      	ldr	r2, [pc, #24]	; (8000838 <setTimer5+0x30>)
 8000820:	6013      	str	r3, [r2, #0]
	timer5_flag = 0;
 8000822:	4b06      	ldr	r3, [pc, #24]	; (800083c <setTimer5+0x34>)
 8000824:	2200      	movs	r2, #0
 8000826:	601a      	str	r2, [r3, #0]
}
 8000828:	bf00      	nop
 800082a:	370c      	adds	r7, #12
 800082c:	46bd      	mov	sp, r7
 800082e:	bc80      	pop	{r7}
 8000830:	4770      	bx	lr
 8000832:	bf00      	nop
 8000834:	66666667 	.word	0x66666667
 8000838:	200000b4 	.word	0x200000b4
 800083c:	200000b8 	.word	0x200000b8

08000840 <timerRun>:

void timerRun(){
 8000840:	b480      	push	{r7}
 8000842:	af00      	add	r7, sp, #0
	if(timer1_counter > 0){
 8000844:	4b29      	ldr	r3, [pc, #164]	; (80008ec <timerRun+0xac>)
 8000846:	681b      	ldr	r3, [r3, #0]
 8000848:	2b00      	cmp	r3, #0
 800084a:	dd0b      	ble.n	8000864 <timerRun+0x24>
		timer1_counter--;
 800084c:	4b27      	ldr	r3, [pc, #156]	; (80008ec <timerRun+0xac>)
 800084e:	681b      	ldr	r3, [r3, #0]
 8000850:	3b01      	subs	r3, #1
 8000852:	4a26      	ldr	r2, [pc, #152]	; (80008ec <timerRun+0xac>)
 8000854:	6013      	str	r3, [r2, #0]
		if(timer1_counter == 0){
 8000856:	4b25      	ldr	r3, [pc, #148]	; (80008ec <timerRun+0xac>)
 8000858:	681b      	ldr	r3, [r3, #0]
 800085a:	2b00      	cmp	r3, #0
 800085c:	d102      	bne.n	8000864 <timerRun+0x24>
			timer1_flag = 1;
 800085e:	4b24      	ldr	r3, [pc, #144]	; (80008f0 <timerRun+0xb0>)
 8000860:	2201      	movs	r2, #1
 8000862:	601a      	str	r2, [r3, #0]
		}
	}
	if(timer2_counter > 0){
 8000864:	4b23      	ldr	r3, [pc, #140]	; (80008f4 <timerRun+0xb4>)
 8000866:	681b      	ldr	r3, [r3, #0]
 8000868:	2b00      	cmp	r3, #0
 800086a:	dd0b      	ble.n	8000884 <timerRun+0x44>
		timer2_counter--;
 800086c:	4b21      	ldr	r3, [pc, #132]	; (80008f4 <timerRun+0xb4>)
 800086e:	681b      	ldr	r3, [r3, #0]
 8000870:	3b01      	subs	r3, #1
 8000872:	4a20      	ldr	r2, [pc, #128]	; (80008f4 <timerRun+0xb4>)
 8000874:	6013      	str	r3, [r2, #0]
		if(timer2_counter == 0){
 8000876:	4b1f      	ldr	r3, [pc, #124]	; (80008f4 <timerRun+0xb4>)
 8000878:	681b      	ldr	r3, [r3, #0]
 800087a:	2b00      	cmp	r3, #0
 800087c:	d102      	bne.n	8000884 <timerRun+0x44>
			timer2_flag = 1;
 800087e:	4b1e      	ldr	r3, [pc, #120]	; (80008f8 <timerRun+0xb8>)
 8000880:	2201      	movs	r2, #1
 8000882:	601a      	str	r2, [r3, #0]
		}
	}
	if(timer3_counter > 0){
 8000884:	4b1d      	ldr	r3, [pc, #116]	; (80008fc <timerRun+0xbc>)
 8000886:	681b      	ldr	r3, [r3, #0]
 8000888:	2b00      	cmp	r3, #0
 800088a:	dd0b      	ble.n	80008a4 <timerRun+0x64>
		timer3_counter--;
 800088c:	4b1b      	ldr	r3, [pc, #108]	; (80008fc <timerRun+0xbc>)
 800088e:	681b      	ldr	r3, [r3, #0]
 8000890:	3b01      	subs	r3, #1
 8000892:	4a1a      	ldr	r2, [pc, #104]	; (80008fc <timerRun+0xbc>)
 8000894:	6013      	str	r3, [r2, #0]
		if(timer3_counter == 0){
 8000896:	4b19      	ldr	r3, [pc, #100]	; (80008fc <timerRun+0xbc>)
 8000898:	681b      	ldr	r3, [r3, #0]
 800089a:	2b00      	cmp	r3, #0
 800089c:	d102      	bne.n	80008a4 <timerRun+0x64>
			timer3_flag = 1;
 800089e:	4b18      	ldr	r3, [pc, #96]	; (8000900 <timerRun+0xc0>)
 80008a0:	2201      	movs	r2, #1
 80008a2:	601a      	str	r2, [r3, #0]
		}
	}
	if(timer4_counter > 0){
 80008a4:	4b17      	ldr	r3, [pc, #92]	; (8000904 <timerRun+0xc4>)
 80008a6:	681b      	ldr	r3, [r3, #0]
 80008a8:	2b00      	cmp	r3, #0
 80008aa:	dd0b      	ble.n	80008c4 <timerRun+0x84>
		timer4_counter--;
 80008ac:	4b15      	ldr	r3, [pc, #84]	; (8000904 <timerRun+0xc4>)
 80008ae:	681b      	ldr	r3, [r3, #0]
 80008b0:	3b01      	subs	r3, #1
 80008b2:	4a14      	ldr	r2, [pc, #80]	; (8000904 <timerRun+0xc4>)
 80008b4:	6013      	str	r3, [r2, #0]
		if(timer4_counter == 0){
 80008b6:	4b13      	ldr	r3, [pc, #76]	; (8000904 <timerRun+0xc4>)
 80008b8:	681b      	ldr	r3, [r3, #0]
 80008ba:	2b00      	cmp	r3, #0
 80008bc:	d102      	bne.n	80008c4 <timerRun+0x84>
			timer4_flag = 1;
 80008be:	4b12      	ldr	r3, [pc, #72]	; (8000908 <timerRun+0xc8>)
 80008c0:	2201      	movs	r2, #1
 80008c2:	601a      	str	r2, [r3, #0]
		}
	}
	if(timer5_counter > 0){
 80008c4:	4b11      	ldr	r3, [pc, #68]	; (800090c <timerRun+0xcc>)
 80008c6:	681b      	ldr	r3, [r3, #0]
 80008c8:	2b00      	cmp	r3, #0
 80008ca:	dd0b      	ble.n	80008e4 <timerRun+0xa4>
		timer5_counter--;
 80008cc:	4b0f      	ldr	r3, [pc, #60]	; (800090c <timerRun+0xcc>)
 80008ce:	681b      	ldr	r3, [r3, #0]
 80008d0:	3b01      	subs	r3, #1
 80008d2:	4a0e      	ldr	r2, [pc, #56]	; (800090c <timerRun+0xcc>)
 80008d4:	6013      	str	r3, [r2, #0]
		if(timer5_counter == 0){
 80008d6:	4b0d      	ldr	r3, [pc, #52]	; (800090c <timerRun+0xcc>)
 80008d8:	681b      	ldr	r3, [r3, #0]
 80008da:	2b00      	cmp	r3, #0
 80008dc:	d102      	bne.n	80008e4 <timerRun+0xa4>
			timer5_flag = 1;
 80008de:	4b0c      	ldr	r3, [pc, #48]	; (8000910 <timerRun+0xd0>)
 80008e0:	2201      	movs	r2, #1
 80008e2:	601a      	str	r2, [r3, #0]
		}
	}
}
 80008e4:	bf00      	nop
 80008e6:	46bd      	mov	sp, r7
 80008e8:	bc80      	pop	{r7}
 80008ea:	4770      	bx	lr
 80008ec:	20000094 	.word	0x20000094
 80008f0:	20000098 	.word	0x20000098
 80008f4:	2000009c 	.word	0x2000009c
 80008f8:	200000a0 	.word	0x200000a0
 80008fc:	200000a4 	.word	0x200000a4
 8000900:	200000a8 	.word	0x200000a8
 8000904:	200000ac 	.word	0x200000ac
 8000908:	200000b0 	.word	0x200000b0
 800090c:	200000b4 	.word	0x200000b4
 8000910:	200000b8 	.word	0x200000b8

08000914 <subKey1Process>:
 8000914:	b480      	push	{r7}
 8000916:	af00      	add	r7, sp, #0
 8000918:	4b03      	ldr	r3, [pc, #12]	; (8000928 <subKey1Process+0x14>)
 800091a:	2201      	movs	r2, #1
 800091c:	601a      	str	r2, [r3, #0]
 800091e:	bf00      	nop
 8000920:	46bd      	mov	sp, r7
 8000922:	bc80      	pop	{r7}
 8000924:	4770      	bx	lr
 8000926:	bf00      	nop
 8000928:	200000bc 	.word	0x200000bc

0800092c <subKey2Process>:
 800092c:	b480      	push	{r7}
 800092e:	af00      	add	r7, sp, #0
 8000930:	4b03      	ldr	r3, [pc, #12]	; (8000940 <subKey2Process+0x14>)
 8000932:	2201      	movs	r2, #1
 8000934:	601a      	str	r2, [r3, #0]
 8000936:	bf00      	nop
 8000938:	46bd      	mov	sp, r7
 800093a:	bc80      	pop	{r7}
 800093c:	4770      	bx	lr
 800093e:	bf00      	nop
 8000940:	200000c0 	.word	0x200000c0

08000944 <subKey3Process>:
 8000944:	b480      	push	{r7}
 8000946:	af00      	add	r7, sp, #0
 8000948:	4b03      	ldr	r3, [pc, #12]	; (8000958 <subKey3Process+0x14>)
 800094a:	2201      	movs	r2, #1
 800094c:	601a      	str	r2, [r3, #0]
 800094e:	bf00      	nop
 8000950:	46bd      	mov	sp, r7
 8000952:	bc80      	pop	{r7}
 8000954:	4770      	bx	lr
 8000956:	bf00      	nop
 8000958:	200000c4 	.word	0x200000c4

0800095c <isButton1Pressed>:
 800095c:	b480      	push	{r7}
 800095e:	af00      	add	r7, sp, #0
 8000960:	4b06      	ldr	r3, [pc, #24]	; (800097c <isButton1Pressed+0x20>)
 8000962:	681b      	ldr	r3, [r3, #0]
 8000964:	2b01      	cmp	r3, #1
 8000966:	d104      	bne.n	8000972 <isButton1Pressed+0x16>
 8000968:	4b04      	ldr	r3, [pc, #16]	; (800097c <isButton1Pressed+0x20>)
 800096a:	2200      	movs	r2, #0
 800096c:	601a      	str	r2, [r3, #0]
 800096e:	2301      	movs	r3, #1
 8000970:	e000      	b.n	8000974 <isButton1Pressed+0x18>
 8000972:	2300      	movs	r3, #0
 8000974:	4618      	mov	r0, r3
 8000976:	46bd      	mov	sp, r7
 8000978:	bc80      	pop	{r7}
 800097a:	4770      	bx	lr
 800097c:	200000bc 	.word	0x200000bc

08000980 <isButton2Pressed>:
 8000980:	b480      	push	{r7}
 8000982:	af00      	add	r7, sp, #0
 8000984:	4b06      	ldr	r3, [pc, #24]	; (80009a0 <isButton2Pressed+0x20>)
 8000986:	681b      	ldr	r3, [r3, #0]
 8000988:	2b01      	cmp	r3, #1
 800098a:	d104      	bne.n	8000996 <isButton2Pressed+0x16>
 800098c:	4b04      	ldr	r3, [pc, #16]	; (80009a0 <isButton2Pressed+0x20>)
 800098e:	2200      	movs	r2, #0
 8000990:	601a      	str	r2, [r3, #0]
 8000992:	2301      	movs	r3, #1
 8000994:	e000      	b.n	8000998 <isButton2Pressed+0x18>
 8000996:	2300      	movs	r3, #0
 8000998:	4618      	mov	r0, r3
 800099a:	46bd      	mov	sp, r7
 800099c:	bc80      	pop	{r7}
 800099e:	4770      	bx	lr
 80009a0:	200000c0 	.word	0x200000c0

080009a4 <isButton3Pressed>:
 80009a4:	b480      	push	{r7}
 80009a6:	af00      	add	r7, sp, #0
 80009a8:	4b06      	ldr	r3, [pc, #24]	; (80009c4 <isButton3Pressed+0x20>)
 80009aa:	681b      	ldr	r3, [r3, #0]
 80009ac:	2b01      	cmp	r3, #1
 80009ae:	d104      	bne.n	80009ba <isButton3Pressed+0x16>
 80009b0:	4b04      	ldr	r3, [pc, #16]	; (80009c4 <isButton3Pressed+0x20>)
 80009b2:	2200      	movs	r2, #0
 80009b4:	601a      	str	r2, [r3, #0]
 80009b6:	2301      	movs	r3, #1
 80009b8:	e000      	b.n	80009bc <isButton3Pressed+0x18>
 80009ba:	2300      	movs	r3, #0
 80009bc:	4618      	mov	r0, r3
 80009be:	46bd      	mov	sp, r7
 80009c0:	bc80      	pop	{r7}
 80009c2:	4770      	bx	lr
 80009c4:	200000c4 	.word	0x200000c4

080009c8 <getKeyInput1>:
 80009c8:	b580      	push	{r7, lr}
 80009ca:	af00      	add	r7, sp, #0
 80009cc:	4b1f      	ldr	r3, [pc, #124]	; (8000a4c <getKeyInput1+0x84>)
 80009ce:	681b      	ldr	r3, [r3, #0]
 80009d0:	4a1f      	ldr	r2, [pc, #124]	; (8000a50 <getKeyInput1+0x88>)
 80009d2:	6013      	str	r3, [r2, #0]
 80009d4:	4b1f      	ldr	r3, [pc, #124]	; (8000a54 <getKeyInput1+0x8c>)
 80009d6:	681b      	ldr	r3, [r3, #0]
 80009d8:	4a1c      	ldr	r2, [pc, #112]	; (8000a4c <getKeyInput1+0x84>)
 80009da:	6013      	str	r3, [r2, #0]
 80009dc:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 80009e0:	481d      	ldr	r0, [pc, #116]	; (8000a58 <getKeyInput1+0x90>)
 80009e2:	f000 fffb 	bl	80019dc <HAL_GPIO_ReadPin>
 80009e6:	4603      	mov	r3, r0
 80009e8:	461a      	mov	r2, r3
 80009ea:	4b1a      	ldr	r3, [pc, #104]	; (8000a54 <getKeyInput1+0x8c>)
 80009ec:	601a      	str	r2, [r3, #0]
 80009ee:	4b17      	ldr	r3, [pc, #92]	; (8000a4c <getKeyInput1+0x84>)
 80009f0:	681a      	ldr	r2, [r3, #0]
 80009f2:	4b17      	ldr	r3, [pc, #92]	; (8000a50 <getKeyInput1+0x88>)
 80009f4:	681b      	ldr	r3, [r3, #0]
 80009f6:	429a      	cmp	r2, r3
 80009f8:	d125      	bne.n	8000a46 <getKeyInput1+0x7e>
 80009fa:	4b14      	ldr	r3, [pc, #80]	; (8000a4c <getKeyInput1+0x84>)
 80009fc:	681a      	ldr	r2, [r3, #0]
 80009fe:	4b15      	ldr	r3, [pc, #84]	; (8000a54 <getKeyInput1+0x8c>)
 8000a00:	681b      	ldr	r3, [r3, #0]
 8000a02:	429a      	cmp	r2, r3
 8000a04:	d11f      	bne.n	8000a46 <getKeyInput1+0x7e>
 8000a06:	4b15      	ldr	r3, [pc, #84]	; (8000a5c <getKeyInput1+0x94>)
 8000a08:	681a      	ldr	r2, [r3, #0]
 8000a0a:	4b12      	ldr	r3, [pc, #72]	; (8000a54 <getKeyInput1+0x8c>)
 8000a0c:	681b      	ldr	r3, [r3, #0]
 8000a0e:	429a      	cmp	r2, r3
 8000a10:	d00d      	beq.n	8000a2e <getKeyInput1+0x66>
 8000a12:	4b10      	ldr	r3, [pc, #64]	; (8000a54 <getKeyInput1+0x8c>)
 8000a14:	681b      	ldr	r3, [r3, #0]
 8000a16:	4a11      	ldr	r2, [pc, #68]	; (8000a5c <getKeyInput1+0x94>)
 8000a18:	6013      	str	r3, [r2, #0]
 8000a1a:	4b0e      	ldr	r3, [pc, #56]	; (8000a54 <getKeyInput1+0x8c>)
 8000a1c:	681b      	ldr	r3, [r3, #0]
 8000a1e:	2b00      	cmp	r3, #0
 8000a20:	d111      	bne.n	8000a46 <getKeyInput1+0x7e>
 8000a22:	4b0f      	ldr	r3, [pc, #60]	; (8000a60 <getKeyInput1+0x98>)
 8000a24:	22c8      	movs	r2, #200	; 0xc8
 8000a26:	601a      	str	r2, [r3, #0]
 8000a28:	f7ff ff74 	bl	8000914 <subKey1Process>
 8000a2c:	e00b      	b.n	8000a46 <getKeyInput1+0x7e>
 8000a2e:	4b0c      	ldr	r3, [pc, #48]	; (8000a60 <getKeyInput1+0x98>)
 8000a30:	681b      	ldr	r3, [r3, #0]
 8000a32:	3b01      	subs	r3, #1
 8000a34:	4a0a      	ldr	r2, [pc, #40]	; (8000a60 <getKeyInput1+0x98>)
 8000a36:	6013      	str	r3, [r2, #0]
 8000a38:	4b09      	ldr	r3, [pc, #36]	; (8000a60 <getKeyInput1+0x98>)
 8000a3a:	681b      	ldr	r3, [r3, #0]
 8000a3c:	2b00      	cmp	r3, #0
 8000a3e:	d102      	bne.n	8000a46 <getKeyInput1+0x7e>
 8000a40:	4b06      	ldr	r3, [pc, #24]	; (8000a5c <getKeyInput1+0x94>)
 8000a42:	2201      	movs	r2, #1
 8000a44:	601a      	str	r2, [r3, #0]
 8000a46:	bf00      	nop
 8000a48:	bd80      	pop	{r7, pc}
 8000a4a:	bf00      	nop
 8000a4c:	20000004 	.word	0x20000004
 8000a50:	20000000 	.word	0x20000000
 8000a54:	20000008 	.word	0x20000008
 8000a58:	40010c00 	.word	0x40010c00
 8000a5c:	2000000c 	.word	0x2000000c
 8000a60:	20000010 	.word	0x20000010

08000a64 <getKeyInput2>:
 8000a64:	b580      	push	{r7, lr}
 8000a66:	af00      	add	r7, sp, #0
 8000a68:	4b1f      	ldr	r3, [pc, #124]	; (8000ae8 <getKeyInput2+0x84>)
 8000a6a:	681b      	ldr	r3, [r3, #0]
 8000a6c:	4a1f      	ldr	r2, [pc, #124]	; (8000aec <getKeyInput2+0x88>)
 8000a6e:	6013      	str	r3, [r2, #0]
 8000a70:	4b1f      	ldr	r3, [pc, #124]	; (8000af0 <getKeyInput2+0x8c>)
 8000a72:	681b      	ldr	r3, [r3, #0]
 8000a74:	4a1c      	ldr	r2, [pc, #112]	; (8000ae8 <getKeyInput2+0x84>)
 8000a76:	6013      	str	r3, [r2, #0]
 8000a78:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8000a7c:	481d      	ldr	r0, [pc, #116]	; (8000af4 <getKeyInput2+0x90>)
 8000a7e:	f000 ffad 	bl	80019dc <HAL_GPIO_ReadPin>
 8000a82:	4603      	mov	r3, r0
 8000a84:	461a      	mov	r2, r3
 8000a86:	4b1a      	ldr	r3, [pc, #104]	; (8000af0 <getKeyInput2+0x8c>)
 8000a88:	601a      	str	r2, [r3, #0]
 8000a8a:	4b17      	ldr	r3, [pc, #92]	; (8000ae8 <getKeyInput2+0x84>)
 8000a8c:	681a      	ldr	r2, [r3, #0]
 8000a8e:	4b17      	ldr	r3, [pc, #92]	; (8000aec <getKeyInput2+0x88>)
 8000a90:	681b      	ldr	r3, [r3, #0]
 8000a92:	429a      	cmp	r2, r3
 8000a94:	d125      	bne.n	8000ae2 <getKeyInput2+0x7e>
 8000a96:	4b14      	ldr	r3, [pc, #80]	; (8000ae8 <getKeyInput2+0x84>)
 8000a98:	681a      	ldr	r2, [r3, #0]
 8000a9a:	4b15      	ldr	r3, [pc, #84]	; (8000af0 <getKeyInput2+0x8c>)
 8000a9c:	681b      	ldr	r3, [r3, #0]
 8000a9e:	429a      	cmp	r2, r3
 8000aa0:	d11f      	bne.n	8000ae2 <getKeyInput2+0x7e>
 8000aa2:	4b15      	ldr	r3, [pc, #84]	; (8000af8 <getKeyInput2+0x94>)
 8000aa4:	681a      	ldr	r2, [r3, #0]
 8000aa6:	4b12      	ldr	r3, [pc, #72]	; (8000af0 <getKeyInput2+0x8c>)
 8000aa8:	681b      	ldr	r3, [r3, #0]
 8000aaa:	429a      	cmp	r2, r3
 8000aac:	d00d      	beq.n	8000aca <getKeyInput2+0x66>
 8000aae:	4b10      	ldr	r3, [pc, #64]	; (8000af0 <getKeyInput2+0x8c>)
 8000ab0:	681b      	ldr	r3, [r3, #0]
 8000ab2:	4a11      	ldr	r2, [pc, #68]	; (8000af8 <getKeyInput2+0x94>)
 8000ab4:	6013      	str	r3, [r2, #0]
 8000ab6:	4b0e      	ldr	r3, [pc, #56]	; (8000af0 <getKeyInput2+0x8c>)
 8000ab8:	681b      	ldr	r3, [r3, #0]
 8000aba:	2b00      	cmp	r3, #0
 8000abc:	d111      	bne.n	8000ae2 <getKeyInput2+0x7e>
 8000abe:	4b0f      	ldr	r3, [pc, #60]	; (8000afc <getKeyInput2+0x98>)
 8000ac0:	22c8      	movs	r2, #200	; 0xc8
 8000ac2:	601a      	str	r2, [r3, #0]
 8000ac4:	f7ff ff32 	bl	800092c <subKey2Process>
 8000ac8:	e00b      	b.n	8000ae2 <getKeyInput2+0x7e>
 8000aca:	4b0c      	ldr	r3, [pc, #48]	; (8000afc <getKeyInput2+0x98>)
 8000acc:	681b      	ldr	r3, [r3, #0]
 8000ace:	3b01      	subs	r3, #1
 8000ad0:	4a0a      	ldr	r2, [pc, #40]	; (8000afc <getKeyInput2+0x98>)
 8000ad2:	6013      	str	r3, [r2, #0]
 8000ad4:	4b09      	ldr	r3, [pc, #36]	; (8000afc <getKeyInput2+0x98>)
 8000ad6:	681b      	ldr	r3, [r3, #0]
 8000ad8:	2b00      	cmp	r3, #0
 8000ada:	d102      	bne.n	8000ae2 <getKeyInput2+0x7e>
 8000adc:	4b06      	ldr	r3, [pc, #24]	; (8000af8 <getKeyInput2+0x94>)
 8000ade:	2201      	movs	r2, #1
 8000ae0:	601a      	str	r2, [r3, #0]
 8000ae2:	bf00      	nop
 8000ae4:	bd80      	pop	{r7, pc}
 8000ae6:	bf00      	nop
 8000ae8:	20000018 	.word	0x20000018
 8000aec:	20000014 	.word	0x20000014
 8000af0:	2000001c 	.word	0x2000001c
 8000af4:	40010c00 	.word	0x40010c00
 8000af8:	20000020 	.word	0x20000020
 8000afc:	20000024 	.word	0x20000024

08000b00 <getKeyInput3>:
 8000b00:	b580      	push	{r7, lr}
 8000b02:	af00      	add	r7, sp, #0
 8000b04:	4b1f      	ldr	r3, [pc, #124]	; (8000b84 <getKeyInput3+0x84>)
 8000b06:	681b      	ldr	r3, [r3, #0]
 8000b08:	4a1f      	ldr	r2, [pc, #124]	; (8000b88 <getKeyInput3+0x88>)
 8000b0a:	6013      	str	r3, [r2, #0]
 8000b0c:	4b1f      	ldr	r3, [pc, #124]	; (8000b8c <getKeyInput3+0x8c>)
 8000b0e:	681b      	ldr	r3, [r3, #0]
 8000b10:	4a1c      	ldr	r2, [pc, #112]	; (8000b84 <getKeyInput3+0x84>)
 8000b12:	6013      	str	r3, [r2, #0]
 8000b14:	f44f 4180 	mov.w	r1, #16384	; 0x4000
 8000b18:	481d      	ldr	r0, [pc, #116]	; (8000b90 <getKeyInput3+0x90>)
 8000b1a:	f000 ff5f 	bl	80019dc <HAL_GPIO_ReadPin>
 8000b1e:	4603      	mov	r3, r0
 8000b20:	461a      	mov	r2, r3
 8000b22:	4b1a      	ldr	r3, [pc, #104]	; (8000b8c <getKeyInput3+0x8c>)
 8000b24:	601a      	str	r2, [r3, #0]
 8000b26:	4b17      	ldr	r3, [pc, #92]	; (8000b84 <getKeyInput3+0x84>)
 8000b28:	681a      	ldr	r2, [r3, #0]
 8000b2a:	4b17      	ldr	r3, [pc, #92]	; (8000b88 <getKeyInput3+0x88>)
 8000b2c:	681b      	ldr	r3, [r3, #0]
 8000b2e:	429a      	cmp	r2, r3
 8000b30:	d125      	bne.n	8000b7e <getKeyInput3+0x7e>
 8000b32:	4b14      	ldr	r3, [pc, #80]	; (8000b84 <getKeyInput3+0x84>)
 8000b34:	681a      	ldr	r2, [r3, #0]
 8000b36:	4b15      	ldr	r3, [pc, #84]	; (8000b8c <getKeyInput3+0x8c>)
 8000b38:	681b      	ldr	r3, [r3, #0]
 8000b3a:	429a      	cmp	r2, r3
 8000b3c:	d11f      	bne.n	8000b7e <getKeyInput3+0x7e>
 8000b3e:	4b15      	ldr	r3, [pc, #84]	; (8000b94 <getKeyInput3+0x94>)
 8000b40:	681a      	ldr	r2, [r3, #0]
 8000b42:	4b12      	ldr	r3, [pc, #72]	; (8000b8c <getKeyInput3+0x8c>)
 8000b44:	681b      	ldr	r3, [r3, #0]
 8000b46:	429a      	cmp	r2, r3
 8000b48:	d00d      	beq.n	8000b66 <getKeyInput3+0x66>
 8000b4a:	4b10      	ldr	r3, [pc, #64]	; (8000b8c <getKeyInput3+0x8c>)
 8000b4c:	681b      	ldr	r3, [r3, #0]
 8000b4e:	4a11      	ldr	r2, [pc, #68]	; (8000b94 <getKeyInput3+0x94>)
 8000b50:	6013      	str	r3, [r2, #0]
 8000b52:	4b0e      	ldr	r3, [pc, #56]	; (8000b8c <getKeyInput3+0x8c>)
 8000b54:	681b      	ldr	r3, [r3, #0]
 8000b56:	2b00      	cmp	r3, #0
 8000b58:	d111      	bne.n	8000b7e <getKeyInput3+0x7e>
 8000b5a:	4b0f      	ldr	r3, [pc, #60]	; (8000b98 <getKeyInput3+0x98>)
 8000b5c:	22c8      	movs	r2, #200	; 0xc8
 8000b5e:	601a      	str	r2, [r3, #0]
 8000b60:	f7ff fef0 	bl	8000944 <subKey3Process>
 8000b64:	e00b      	b.n	8000b7e <getKeyInput3+0x7e>
 8000b66:	4b0c      	ldr	r3, [pc, #48]	; (8000b98 <getKeyInput3+0x98>)
 8000b68:	681b      	ldr	r3, [r3, #0]
 8000b6a:	3b01      	subs	r3, #1
 8000b6c:	4a0a      	ldr	r2, [pc, #40]	; (8000b98 <getKeyInput3+0x98>)
 8000b6e:	6013      	str	r3, [r2, #0]
 8000b70:	4b09      	ldr	r3, [pc, #36]	; (8000b98 <getKeyInput3+0x98>)
 8000b72:	681b      	ldr	r3, [r3, #0]
 8000b74:	2b00      	cmp	r3, #0
 8000b76:	d102      	bne.n	8000b7e <getKeyInput3+0x7e>
 8000b78:	4b06      	ldr	r3, [pc, #24]	; (8000b94 <getKeyInput3+0x94>)
 8000b7a:	2201      	movs	r2, #1
 8000b7c:	601a      	str	r2, [r3, #0]
 8000b7e:	bf00      	nop
 8000b80:	bd80      	pop	{r7, pc}
 8000b82:	bf00      	nop
 8000b84:	2000002c 	.word	0x2000002c
 8000b88:	20000028 	.word	0x20000028
 8000b8c:	20000030 	.word	0x20000030
 8000b90:	40010c00 	.word	0x40010c00
 8000b94:	20000034 	.word	0x20000034
 8000b98:	20000038 	.word	0x20000038

08000b9c <getKeyInput>:
 8000b9c:	b580      	push	{r7, lr}
 8000b9e:	af00      	add	r7, sp, #0
 8000ba0:	f7ff ff12 	bl	80009c8 <getKeyInput1>
 8000ba4:	f7ff ff5e 	bl	8000a64 <getKeyInput2>
 8000ba8:	f7ff ffaa 	bl	8000b00 <getKeyInput3>
 8000bac:	bf00      	nop
 8000bae:	bd80      	pop	{r7, pc}

08000bb0 <fsm_automatic_run>:

#include "global.h"
#include "fsm_automatic.h"
#include "Display.h"

void fsm_automatic_run(){
 8000bb0:	b580      	push	{r7, lr}
 8000bb2:	af00      	add	r7, sp, #0
	//quan ly den tin hieu hang doc
	//cac mode duoc hien thuc tren den tin hieu hang doc(thong qua cac button)
	switch(status_col){
 8000bb4:	4b66      	ldr	r3, [pc, #408]	; (8000d50 <fsm_automatic_run+0x1a0>)
 8000bb6:	681b      	ldr	r3, [r3, #0]
 8000bb8:	3b01      	subs	r3, #1
 8000bba:	2b03      	cmp	r3, #3
 8000bbc:	d86f      	bhi.n	8000c9e <fsm_automatic_run+0xee>
 8000bbe:	a201      	add	r2, pc, #4	; (adr r2, 8000bc4 <fsm_automatic_run+0x14>)
 8000bc0:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8000bc4:	08000bd5 	.word	0x08000bd5
 8000bc8:	08000beb 	.word	0x08000beb
 8000bcc:	08000c27 	.word	0x08000c27
 8000bd0:	08000c63 	.word	0x08000c63
		case INIT:
			Display_Init();
 8000bd4:	f7ff faba 	bl	800014c <Display_Init>

			//chuyen trang thai ko dk
			status_col=AUTO_RED;
 8000bd8:	4b5d      	ldr	r3, [pc, #372]	; (8000d50 <fsm_automatic_run+0x1a0>)
 8000bda:	2202      	movs	r2, #2
 8000bdc:	601a      	str	r2, [r3, #0]
			setTimer1(Time_Auto_Red);
 8000bde:	4b5d      	ldr	r3, [pc, #372]	; (8000d54 <fsm_automatic_run+0x1a4>)
 8000be0:	681b      	ldr	r3, [r3, #0]
 8000be2:	4618      	mov	r0, r3
 8000be4:	f7ff fda0 	bl	8000728 <setTimer1>
			break;
 8000be8:	e060      	b.n	8000cac <fsm_automatic_run+0xfc>
		case AUTO_RED:
			Display_Led_Red1();
 8000bea:	f7ff fad3 	bl	8000194 <Display_Led_Red1>

			//chuyen trang thai co dk
			if(timer1_flag==1){
 8000bee:	4b5a      	ldr	r3, [pc, #360]	; (8000d58 <fsm_automatic_run+0x1a8>)
 8000bf0:	681b      	ldr	r3, [r3, #0]
 8000bf2:	2b01      	cmp	r3, #1
 8000bf4:	d107      	bne.n	8000c06 <fsm_automatic_run+0x56>
				status_col=AUTO_GREEN;
 8000bf6:	4b56      	ldr	r3, [pc, #344]	; (8000d50 <fsm_automatic_run+0x1a0>)
 8000bf8:	2203      	movs	r2, #3
 8000bfa:	601a      	str	r2, [r3, #0]
				setTimer1(Time_Auto_Green);
 8000bfc:	4b57      	ldr	r3, [pc, #348]	; (8000d5c <fsm_automatic_run+0x1ac>)
 8000bfe:	681b      	ldr	r3, [r3, #0]
 8000c00:	4618      	mov	r0, r3
 8000c02:	f7ff fd91 	bl	8000728 <setTimer1>
			}
			//trang thai mode 2
			if(isButton1Pressed()==1){
 8000c06:	f7ff fea9 	bl	800095c <isButton1Pressed>
 8000c0a:	4603      	mov	r3, r0
 8000c0c:	2b01      	cmp	r3, #1
 8000c0e:	d148      	bne.n	8000ca2 <fsm_automatic_run+0xf2>
				status_col=MAN_RED;
 8000c10:	4b4f      	ldr	r3, [pc, #316]	; (8000d50 <fsm_automatic_run+0x1a0>)
 8000c12:	220c      	movs	r2, #12
 8000c14:	601a      	str	r2, [r3, #0]
				//trong trang thai mode, chi co Red_Led hang ngang se luon duoc bat
				status_row=MAN_RED;
 8000c16:	4b52      	ldr	r3, [pc, #328]	; (8000d60 <fsm_automatic_run+0x1b0>)
 8000c18:	220c      	movs	r2, #12
 8000c1a:	601a      	str	r2, [r3, #0]
				setTimer1(MODE_TIME);
 8000c1c:	f643 2098 	movw	r0, #15000	; 0x3a98
 8000c20:	f7ff fd82 	bl	8000728 <setTimer1>
			}
			break;
 8000c24:	e03d      	b.n	8000ca2 <fsm_automatic_run+0xf2>
		case AUTO_GREEN:
			Display_Led_Green1();
 8000c26:	f7ff facb 	bl	80001c0 <Display_Led_Green1>

			//chuyen trang thai co dk
			if(timer1_flag==1){
 8000c2a:	4b4b      	ldr	r3, [pc, #300]	; (8000d58 <fsm_automatic_run+0x1a8>)
 8000c2c:	681b      	ldr	r3, [r3, #0]
 8000c2e:	2b01      	cmp	r3, #1
 8000c30:	d107      	bne.n	8000c42 <fsm_automatic_run+0x92>
				status_col=AUTO_YELLOW;
 8000c32:	4b47      	ldr	r3, [pc, #284]	; (8000d50 <fsm_automatic_run+0x1a0>)
 8000c34:	2204      	movs	r2, #4
 8000c36:	601a      	str	r2, [r3, #0]
				setTimer1(Time_Auto_Yellow);
 8000c38:	4b4a      	ldr	r3, [pc, #296]	; (8000d64 <fsm_automatic_run+0x1b4>)
 8000c3a:	681b      	ldr	r3, [r3, #0]
 8000c3c:	4618      	mov	r0, r3
 8000c3e:	f7ff fd73 	bl	8000728 <setTimer1>
			}
			if(isButton1Pressed()==1){
 8000c42:	f7ff fe8b 	bl	800095c <isButton1Pressed>
 8000c46:	4603      	mov	r3, r0
 8000c48:	2b01      	cmp	r3, #1
 8000c4a:	d12c      	bne.n	8000ca6 <fsm_automatic_run+0xf6>
				status_col=MAN_GREEN;
 8000c4c:	4b40      	ldr	r3, [pc, #256]	; (8000d50 <fsm_automatic_run+0x1a0>)
 8000c4e:	220d      	movs	r2, #13
 8000c50:	601a      	str	r2, [r3, #0]
				//trong trang thai mode, chi co Red_Led hang ngang se luon duoc bat
				status_row=MAN_GREEN;
 8000c52:	4b43      	ldr	r3, [pc, #268]	; (8000d60 <fsm_automatic_run+0x1b0>)
 8000c54:	220d      	movs	r2, #13
 8000c56:	601a      	str	r2, [r3, #0]

				setTimer1(MODE_TIME);
 8000c58:	f643 2098 	movw	r0, #15000	; 0x3a98
 8000c5c:	f7ff fd64 	bl	8000728 <setTimer1>
			}
			break;
 8000c60:	e021      	b.n	8000ca6 <fsm_automatic_run+0xf6>
		case AUTO_YELLOW:
			Display_Led_Yellow1();
 8000c62:	f7ff fac3 	bl	80001ec <Display_Led_Yellow1>

			//chuyen trang thai co dk
			if(timer1_flag==1){
 8000c66:	4b3c      	ldr	r3, [pc, #240]	; (8000d58 <fsm_automatic_run+0x1a8>)
 8000c68:	681b      	ldr	r3, [r3, #0]
 8000c6a:	2b01      	cmp	r3, #1
 8000c6c:	d107      	bne.n	8000c7e <fsm_automatic_run+0xce>
				status_col=AUTO_RED;
 8000c6e:	4b38      	ldr	r3, [pc, #224]	; (8000d50 <fsm_automatic_run+0x1a0>)
 8000c70:	2202      	movs	r2, #2
 8000c72:	601a      	str	r2, [r3, #0]
				setTimer1(Time_Auto_Red);
 8000c74:	4b37      	ldr	r3, [pc, #220]	; (8000d54 <fsm_automatic_run+0x1a4>)
 8000c76:	681b      	ldr	r3, [r3, #0]
 8000c78:	4618      	mov	r0, r3
 8000c7a:	f7ff fd55 	bl	8000728 <setTimer1>
			}
			if(isButton1Pressed()==1){
 8000c7e:	f7ff fe6d 	bl	800095c <isButton1Pressed>
 8000c82:	4603      	mov	r3, r0
 8000c84:	2b01      	cmp	r3, #1
 8000c86:	d110      	bne.n	8000caa <fsm_automatic_run+0xfa>
				status_col=MAN_YELLOW;
 8000c88:	4b31      	ldr	r3, [pc, #196]	; (8000d50 <fsm_automatic_run+0x1a0>)
 8000c8a:	220e      	movs	r2, #14
 8000c8c:	601a      	str	r2, [r3, #0]
				//trong trang thai mode, chi co Red_Led hang ngang se luon duoc bat
				status_row=MAN_YELLOW;
 8000c8e:	4b34      	ldr	r3, [pc, #208]	; (8000d60 <fsm_automatic_run+0x1b0>)
 8000c90:	220e      	movs	r2, #14
 8000c92:	601a      	str	r2, [r3, #0]

				setTimer1(MODE_TIME);
 8000c94:	f643 2098 	movw	r0, #15000	; 0x3a98
 8000c98:	f7ff fd46 	bl	8000728 <setTimer1>
			}
			break;
 8000c9c:	e005      	b.n	8000caa <fsm_automatic_run+0xfa>
		default:
			break;
 8000c9e:	bf00      	nop
 8000ca0:	e004      	b.n	8000cac <fsm_automatic_run+0xfc>
			break;
 8000ca2:	bf00      	nop
 8000ca4:	e002      	b.n	8000cac <fsm_automatic_run+0xfc>
			break;
 8000ca6:	bf00      	nop
 8000ca8:	e000      	b.n	8000cac <fsm_automatic_run+0xfc>
			break;
 8000caa:	bf00      	nop
	}

	//quan ly den tin hieu hang ngang
	//trong time_mode, cac den hang ngang se chi doi den khi hoan tat mode
	switch(status_row){
 8000cac:	4b2c      	ldr	r3, [pc, #176]	; (8000d60 <fsm_automatic_run+0x1b0>)
 8000cae:	681b      	ldr	r3, [r3, #0]
 8000cb0:	3b01      	subs	r3, #1
 8000cb2:	2b03      	cmp	r3, #3
 8000cb4:	d842      	bhi.n	8000d3c <fsm_automatic_run+0x18c>
 8000cb6:	a201      	add	r2, pc, #4	; (adr r2, 8000cbc <fsm_automatic_run+0x10c>)
 8000cb8:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8000cbc:	08000ccd 	.word	0x08000ccd
 8000cc0:	08000ce3 	.word	0x08000ce3
 8000cc4:	08000d01 	.word	0x08000d01
 8000cc8:	08000d1f 	.word	0x08000d1f
		case INIT:
			Display_Init();
 8000ccc:	f7ff fa3e 	bl	800014c <Display_Init>

			//chuyen trang thai ko dk
			status_row=AUTO_GREEN;
 8000cd0:	4b23      	ldr	r3, [pc, #140]	; (8000d60 <fsm_automatic_run+0x1b0>)
 8000cd2:	2203      	movs	r2, #3
 8000cd4:	601a      	str	r2, [r3, #0]
			setTimer4(Time_Auto_Green);
 8000cd6:	4b21      	ldr	r3, [pc, #132]	; (8000d5c <fsm_automatic_run+0x1ac>)
 8000cd8:	681b      	ldr	r3, [r3, #0]
 8000cda:	4618      	mov	r0, r3
 8000cdc:	f7ff fd78 	bl	80007d0 <setTimer4>
			break;
 8000ce0:	e033      	b.n	8000d4a <fsm_automatic_run+0x19a>
		case AUTO_RED:
			Display_Led_Red2();
 8000ce2:	f7ff fa99 	bl	8000218 <Display_Led_Red2>

			//chuyen trang thai co dk
			if(timer4_flag==1){
 8000ce6:	4b20      	ldr	r3, [pc, #128]	; (8000d68 <fsm_automatic_run+0x1b8>)
 8000ce8:	681b      	ldr	r3, [r3, #0]
 8000cea:	2b01      	cmp	r3, #1
 8000cec:	d128      	bne.n	8000d40 <fsm_automatic_run+0x190>
				status_row=AUTO_GREEN;
 8000cee:	4b1c      	ldr	r3, [pc, #112]	; (8000d60 <fsm_automatic_run+0x1b0>)
 8000cf0:	2203      	movs	r2, #3
 8000cf2:	601a      	str	r2, [r3, #0]
				setTimer4(Time_Auto_Green);
 8000cf4:	4b19      	ldr	r3, [pc, #100]	; (8000d5c <fsm_automatic_run+0x1ac>)
 8000cf6:	681b      	ldr	r3, [r3, #0]
 8000cf8:	4618      	mov	r0, r3
 8000cfa:	f7ff fd69 	bl	80007d0 <setTimer4>
			}
			break;
 8000cfe:	e01f      	b.n	8000d40 <fsm_automatic_run+0x190>
		case AUTO_GREEN:
			Display_Led_Green2();
 8000d00:	f7ff faa0 	bl	8000244 <Display_Led_Green2>

			//chuyen trang thai co dk
			if(timer4_flag==1){
 8000d04:	4b18      	ldr	r3, [pc, #96]	; (8000d68 <fsm_automatic_run+0x1b8>)
 8000d06:	681b      	ldr	r3, [r3, #0]
 8000d08:	2b01      	cmp	r3, #1
 8000d0a:	d11b      	bne.n	8000d44 <fsm_automatic_run+0x194>
				status_row=AUTO_YELLOW;
 8000d0c:	4b14      	ldr	r3, [pc, #80]	; (8000d60 <fsm_automatic_run+0x1b0>)
 8000d0e:	2204      	movs	r2, #4
 8000d10:	601a      	str	r2, [r3, #0]
				setTimer4(Time_Auto_Yellow);
 8000d12:	4b14      	ldr	r3, [pc, #80]	; (8000d64 <fsm_automatic_run+0x1b4>)
 8000d14:	681b      	ldr	r3, [r3, #0]
 8000d16:	4618      	mov	r0, r3
 8000d18:	f7ff fd5a 	bl	80007d0 <setTimer4>
			}
			break;
 8000d1c:	e012      	b.n	8000d44 <fsm_automatic_run+0x194>
		case AUTO_YELLOW:
			Display_Led_Yellow2();
 8000d1e:	f7ff faa7 	bl	8000270 <Display_Led_Yellow2>

			//chuyen trang thai co dk
			if(timer4_flag==1){
 8000d22:	4b11      	ldr	r3, [pc, #68]	; (8000d68 <fsm_automatic_run+0x1b8>)
 8000d24:	681b      	ldr	r3, [r3, #0]
 8000d26:	2b01      	cmp	r3, #1
 8000d28:	d10e      	bne.n	8000d48 <fsm_automatic_run+0x198>
				status_row=AUTO_RED;
 8000d2a:	4b0d      	ldr	r3, [pc, #52]	; (8000d60 <fsm_automatic_run+0x1b0>)
 8000d2c:	2202      	movs	r2, #2
 8000d2e:	601a      	str	r2, [r3, #0]
				setTimer4(Time_Auto_Red);
 8000d30:	4b08      	ldr	r3, [pc, #32]	; (8000d54 <fsm_automatic_run+0x1a4>)
 8000d32:	681b      	ldr	r3, [r3, #0]
 8000d34:	4618      	mov	r0, r3
 8000d36:	f7ff fd4b 	bl	80007d0 <setTimer4>
			}
			break;
 8000d3a:	e005      	b.n	8000d48 <fsm_automatic_run+0x198>
		default:
			break;
 8000d3c:	bf00      	nop
 8000d3e:	e004      	b.n	8000d4a <fsm_automatic_run+0x19a>
			break;
 8000d40:	bf00      	nop
 8000d42:	e002      	b.n	8000d4a <fsm_automatic_run+0x19a>
			break;
 8000d44:	bf00      	nop
 8000d46:	e000      	b.n	8000d4a <fsm_automatic_run+0x19a>
			break;
 8000d48:	bf00      	nop
	}
}
 8000d4a:	bf00      	nop
 8000d4c:	bd80      	pop	{r7, pc}
 8000d4e:	bf00      	nop
 8000d50:	200000cc 	.word	0x200000cc
 8000d54:	2000003c 	.word	0x2000003c
 8000d58:	20000098 	.word	0x20000098
 8000d5c:	20000040 	.word	0x20000040
 8000d60:	200000d0 	.word	0x200000d0
 8000d64:	20000044 	.word	0x20000044
 8000d68:	200000b0 	.word	0x200000b0

08000d6c <BlinkLed>:
#include "modification_mode.h"

int status1=0;
enum TypeLed {Red, Green, Yellow};

void BlinkLed(enum TypeLed L){
 8000d6c:	b580      	push	{r7, lr}
 8000d6e:	b082      	sub	sp, #8
 8000d70:	af00      	add	r7, sp, #0
 8000d72:	4603      	mov	r3, r0
 8000d74:	71fb      	strb	r3, [r7, #7]
	if(timer5_flag==1){
 8000d76:	4b17      	ldr	r3, [pc, #92]	; (8000dd4 <BlinkLed+0x68>)
 8000d78:	681b      	ldr	r3, [r3, #0]
 8000d7a:	2b01      	cmp	r3, #1
 8000d7c:	d126      	bne.n	8000dcc <BlinkLed+0x60>
		setTimer5(250);
 8000d7e:	20fa      	movs	r0, #250	; 0xfa
 8000d80:	f7ff fd42 	bl	8000808 <setTimer5>
		if(status1==1){
 8000d84:	4b14      	ldr	r3, [pc, #80]	; (8000dd8 <BlinkLed+0x6c>)
 8000d86:	681b      	ldr	r3, [r3, #0]
 8000d88:	2b01      	cmp	r3, #1
 8000d8a:	d117      	bne.n	8000dbc <BlinkLed+0x50>
			if(L == Red){
 8000d8c:	79fb      	ldrb	r3, [r7, #7]
 8000d8e:	2b00      	cmp	r3, #0
 8000d90:	d104      	bne.n	8000d9c <BlinkLed+0x30>
				Display_Led_Red1();
 8000d92:	f7ff f9ff 	bl	8000194 <Display_Led_Red1>
				Display_Led_Red2();
 8000d96:	f7ff fa3f 	bl	8000218 <Display_Led_Red2>
 8000d9a:	e011      	b.n	8000dc0 <BlinkLed+0x54>
			}
			else if(L == Green){
 8000d9c:	79fb      	ldrb	r3, [r7, #7]
 8000d9e:	2b01      	cmp	r3, #1
 8000da0:	d104      	bne.n	8000dac <BlinkLed+0x40>
				Display_Led_Green1();
 8000da2:	f7ff fa0d 	bl	80001c0 <Display_Led_Green1>
				Display_Led_Green2();
 8000da6:	f7ff fa4d 	bl	8000244 <Display_Led_Green2>
 8000daa:	e009      	b.n	8000dc0 <BlinkLed+0x54>
			}
			else if(L == Yellow){
 8000dac:	79fb      	ldrb	r3, [r7, #7]
 8000dae:	2b02      	cmp	r3, #2
 8000db0:	d106      	bne.n	8000dc0 <BlinkLed+0x54>
				Display_Led_Yellow1();
 8000db2:	f7ff fa1b 	bl	80001ec <Display_Led_Yellow1>
				Display_Led_Yellow2();
 8000db6:	f7ff fa5b 	bl	8000270 <Display_Led_Yellow2>
 8000dba:	e001      	b.n	8000dc0 <BlinkLed+0x54>
			}
		}
		else{
			Display_Init();
 8000dbc:	f7ff f9c6 	bl	800014c <Display_Init>
		}
		status1=1 - status1;
 8000dc0:	4b05      	ldr	r3, [pc, #20]	; (8000dd8 <BlinkLed+0x6c>)
 8000dc2:	681b      	ldr	r3, [r3, #0]
 8000dc4:	f1c3 0301 	rsb	r3, r3, #1
 8000dc8:	4a03      	ldr	r2, [pc, #12]	; (8000dd8 <BlinkLed+0x6c>)
 8000dca:	6013      	str	r3, [r2, #0]
	}
}
 8000dcc:	bf00      	nop
 8000dce:	3708      	adds	r7, #8
 8000dd0:	46bd      	mov	sp, r7
 8000dd2:	bd80      	pop	{r7, pc}
 8000dd4:	200000b8 	.word	0x200000b8
 8000dd8:	200000c8 	.word	0x200000c8

08000ddc <fsm_manial_run>:

void fsm_manial_run(){
 8000ddc:	b580      	push	{r7, lr}
 8000dde:	af00      	add	r7, sp, #0
	//quan ly va chinh sua thu cong tren cac den duoc the hien tren hang doc
	switch(status_col){
 8000de0:	4b33      	ldr	r3, [pc, #204]	; (8000eb0 <fsm_manial_run+0xd4>)
 8000de2:	681b      	ldr	r3, [r3, #0]
 8000de4:	2b0e      	cmp	r3, #14
 8000de6:	d03e      	beq.n	8000e66 <fsm_manial_run+0x8a>
 8000de8:	2b0e      	cmp	r3, #14
 8000dea:	dc58      	bgt.n	8000e9e <fsm_manial_run+0xc2>
 8000dec:	2b0c      	cmp	r3, #12
 8000dee:	d002      	beq.n	8000df6 <fsm_manial_run+0x1a>
 8000df0:	2b0d      	cmp	r3, #13
 8000df2:	d01c      	beq.n	8000e2e <fsm_manial_run+0x52>
				status_col=MAN_RED;
				setTimer1(MODE_TIME);
			}
			break;
		default:
			break;
 8000df4:	e053      	b.n	8000e9e <fsm_manial_run+0xc2>
			BlinkLed(Red);
 8000df6:	2000      	movs	r0, #0
 8000df8:	f7ff ffb8 	bl	8000d6c <BlinkLed>
			modification_mode();
 8000dfc:	f000 f9b0 	bl	8001160 <modification_mode>
			if(timer1_flag==1){
 8000e00:	4b2c      	ldr	r3, [pc, #176]	; (8000eb4 <fsm_manial_run+0xd8>)
 8000e02:	681b      	ldr	r3, [r3, #0]
 8000e04:	2b01      	cmp	r3, #1
 8000e06:	d105      	bne.n	8000e14 <fsm_manial_run+0x38>
				status_col=INIT;
 8000e08:	4b29      	ldr	r3, [pc, #164]	; (8000eb0 <fsm_manial_run+0xd4>)
 8000e0a:	2201      	movs	r2, #1
 8000e0c:	601a      	str	r2, [r3, #0]
				status_row=INIT;
 8000e0e:	4b2a      	ldr	r3, [pc, #168]	; (8000eb8 <fsm_manial_run+0xdc>)
 8000e10:	2201      	movs	r2, #1
 8000e12:	601a      	str	r2, [r3, #0]
			if(isButton1Pressed()==1){
 8000e14:	f7ff fda2 	bl	800095c <isButton1Pressed>
 8000e18:	4603      	mov	r3, r0
 8000e1a:	2b01      	cmp	r3, #1
 8000e1c:	d141      	bne.n	8000ea2 <fsm_manial_run+0xc6>
				status_col=MAN_GREEN;
 8000e1e:	4b24      	ldr	r3, [pc, #144]	; (8000eb0 <fsm_manial_run+0xd4>)
 8000e20:	220d      	movs	r2, #13
 8000e22:	601a      	str	r2, [r3, #0]
				setTimer1(MODE_TIME);
 8000e24:	f643 2098 	movw	r0, #15000	; 0x3a98
 8000e28:	f7ff fc7e 	bl	8000728 <setTimer1>
			break;
 8000e2c:	e039      	b.n	8000ea2 <fsm_manial_run+0xc6>
			BlinkLed(Green);
 8000e2e:	2001      	movs	r0, #1
 8000e30:	f7ff ff9c 	bl	8000d6c <BlinkLed>
			modification_mode();
 8000e34:	f000 f994 	bl	8001160 <modification_mode>
			if(timer1_flag==1){
 8000e38:	4b1e      	ldr	r3, [pc, #120]	; (8000eb4 <fsm_manial_run+0xd8>)
 8000e3a:	681b      	ldr	r3, [r3, #0]
 8000e3c:	2b01      	cmp	r3, #1
 8000e3e:	d105      	bne.n	8000e4c <fsm_manial_run+0x70>
				status_col=INIT;
 8000e40:	4b1b      	ldr	r3, [pc, #108]	; (8000eb0 <fsm_manial_run+0xd4>)
 8000e42:	2201      	movs	r2, #1
 8000e44:	601a      	str	r2, [r3, #0]
				status_row=INIT;
 8000e46:	4b1c      	ldr	r3, [pc, #112]	; (8000eb8 <fsm_manial_run+0xdc>)
 8000e48:	2201      	movs	r2, #1
 8000e4a:	601a      	str	r2, [r3, #0]
			if(isButton1Pressed()==1){
 8000e4c:	f7ff fd86 	bl	800095c <isButton1Pressed>
 8000e50:	4603      	mov	r3, r0
 8000e52:	2b01      	cmp	r3, #1
 8000e54:	d127      	bne.n	8000ea6 <fsm_manial_run+0xca>
				status_col=MAN_YELLOW;
 8000e56:	4b16      	ldr	r3, [pc, #88]	; (8000eb0 <fsm_manial_run+0xd4>)
 8000e58:	220e      	movs	r2, #14
 8000e5a:	601a      	str	r2, [r3, #0]
				setTimer1(MODE_TIME);
 8000e5c:	f643 2098 	movw	r0, #15000	; 0x3a98
 8000e60:	f7ff fc62 	bl	8000728 <setTimer1>
			break;
 8000e64:	e01f      	b.n	8000ea6 <fsm_manial_run+0xca>
			BlinkLed(Yellow);
 8000e66:	2002      	movs	r0, #2
 8000e68:	f7ff ff80 	bl	8000d6c <BlinkLed>
			modification_mode();
 8000e6c:	f000 f978 	bl	8001160 <modification_mode>
			if(timer1_flag==1){
 8000e70:	4b10      	ldr	r3, [pc, #64]	; (8000eb4 <fsm_manial_run+0xd8>)
 8000e72:	681b      	ldr	r3, [r3, #0]
 8000e74:	2b01      	cmp	r3, #1
 8000e76:	d105      	bne.n	8000e84 <fsm_manial_run+0xa8>
				status_col=INIT;
 8000e78:	4b0d      	ldr	r3, [pc, #52]	; (8000eb0 <fsm_manial_run+0xd4>)
 8000e7a:	2201      	movs	r2, #1
 8000e7c:	601a      	str	r2, [r3, #0]
				status_row=INIT;
 8000e7e:	4b0e      	ldr	r3, [pc, #56]	; (8000eb8 <fsm_manial_run+0xdc>)
 8000e80:	2201      	movs	r2, #1
 8000e82:	601a      	str	r2, [r3, #0]
			if(isButton1Pressed()==1){
 8000e84:	f7ff fd6a 	bl	800095c <isButton1Pressed>
 8000e88:	4603      	mov	r3, r0
 8000e8a:	2b01      	cmp	r3, #1
 8000e8c:	d10d      	bne.n	8000eaa <fsm_manial_run+0xce>
				status_col=MAN_RED;
 8000e8e:	4b08      	ldr	r3, [pc, #32]	; (8000eb0 <fsm_manial_run+0xd4>)
 8000e90:	220c      	movs	r2, #12
 8000e92:	601a      	str	r2, [r3, #0]
				setTimer1(MODE_TIME);
 8000e94:	f643 2098 	movw	r0, #15000	; 0x3a98
 8000e98:	f7ff fc46 	bl	8000728 <setTimer1>
			break;
 8000e9c:	e005      	b.n	8000eaa <fsm_manial_run+0xce>
			break;
 8000e9e:	bf00      	nop
 8000ea0:	e004      	b.n	8000eac <fsm_manial_run+0xd0>
			break;
 8000ea2:	bf00      	nop
 8000ea4:	e002      	b.n	8000eac <fsm_manial_run+0xd0>
			break;
 8000ea6:	bf00      	nop
 8000ea8:	e000      	b.n	8000eac <fsm_manial_run+0xd0>
			break;
 8000eaa:	bf00      	nop
	}

}
 8000eac:	bf00      	nop
 8000eae:	bd80      	pop	{r7, pc}
 8000eb0:	200000cc 	.word	0x200000cc
 8000eb4:	20000098 	.word	0x20000098
 8000eb8:	200000d0 	.word	0x200000d0

08000ebc <set_Time_Auto_Red>:
int Time_Auto_Red = 5000;
int Time_Auto_Green = 3000;
int Time_Auto_Yellow = 2000;


void set_Time_Auto_Red(int duration){
 8000ebc:	b480      	push	{r7}
 8000ebe:	b083      	sub	sp, #12
 8000ec0:	af00      	add	r7, sp, #0
 8000ec2:	6078      	str	r0, [r7, #4]
	Time_Auto_Red = duration;
 8000ec4:	4a03      	ldr	r2, [pc, #12]	; (8000ed4 <set_Time_Auto_Red+0x18>)
 8000ec6:	687b      	ldr	r3, [r7, #4]
 8000ec8:	6013      	str	r3, [r2, #0]
}
 8000eca:	bf00      	nop
 8000ecc:	370c      	adds	r7, #12
 8000ece:	46bd      	mov	sp, r7
 8000ed0:	bc80      	pop	{r7}
 8000ed2:	4770      	bx	lr
 8000ed4:	2000003c 	.word	0x2000003c

08000ed8 <set_Time_Auto_Green>:
void set_Time_Auto_Green(int duration){
 8000ed8:	b480      	push	{r7}
 8000eda:	b083      	sub	sp, #12
 8000edc:	af00      	add	r7, sp, #0
 8000ede:	6078      	str	r0, [r7, #4]
	Time_Auto_Green = duration;
 8000ee0:	4a03      	ldr	r2, [pc, #12]	; (8000ef0 <set_Time_Auto_Green+0x18>)
 8000ee2:	687b      	ldr	r3, [r7, #4]
 8000ee4:	6013      	str	r3, [r2, #0]
}
 8000ee6:	bf00      	nop
 8000ee8:	370c      	adds	r7, #12
 8000eea:	46bd      	mov	sp, r7
 8000eec:	bc80      	pop	{r7}
 8000eee:	4770      	bx	lr
 8000ef0:	20000040 	.word	0x20000040

08000ef4 <set_Time_Auto_Yellow>:
void set_Time_Auto_Yellow(int duration){
 8000ef4:	b480      	push	{r7}
 8000ef6:	b083      	sub	sp, #12
 8000ef8:	af00      	add	r7, sp, #0
 8000efa:	6078      	str	r0, [r7, #4]
	Time_Auto_Yellow = duration;
 8000efc:	4a03      	ldr	r2, [pc, #12]	; (8000f0c <set_Time_Auto_Yellow+0x18>)
 8000efe:	687b      	ldr	r3, [r7, #4]
 8000f00:	6013      	str	r3, [r2, #0]
}
 8000f02:	bf00      	nop
 8000f04:	370c      	adds	r7, #12
 8000f06:	46bd      	mov	sp, r7
 8000f08:	bc80      	pop	{r7}
 8000f0a:	4770      	bx	lr
 8000f0c:	20000044 	.word	0x20000044

08000f10 <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 8000f10:	b580      	push	{r7, lr}
 8000f12:	af00      	add	r7, sp, #0
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 8000f14:	f000 fa78 	bl	8001408 <HAL_Init>
  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 8000f18:	f000 f826 	bl	8000f68 <SystemClock_Config>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 8000f1c:	f000 f8ac 	bl	8001078 <MX_GPIO_Init>
  MX_TIM2_Init();
 8000f20:	f000 f85e 	bl	8000fe0 <MX_TIM2_Init>
  /* USER CODE BEGIN 2 */
  HAL_TIM_Base_Start_IT (&htim2);
 8000f24:	480d      	ldr	r0, [pc, #52]	; (8000f5c <main+0x4c>)
 8000f26:	f001 f9c1 	bl	80022ac <HAL_TIM_Base_Start_IT>
  /* USER CODE END 2 */

  /* Infinite loop */
  /* USER CODE BEGIN WHILE */
  status_col=INIT;
 8000f2a:	4b0d      	ldr	r3, [pc, #52]	; (8000f60 <main+0x50>)
 8000f2c:	2201      	movs	r2, #1
 8000f2e:	601a      	str	r2, [r3, #0]
  status_row=INIT;
 8000f30:	4b0c      	ldr	r3, [pc, #48]	; (8000f64 <main+0x54>)
 8000f32:	2201      	movs	r2, #1
 8000f34:	601a      	str	r2, [r3, #0]

  setTimer1(10);
 8000f36:	200a      	movs	r0, #10
 8000f38:	f7ff fbf6 	bl	8000728 <setTimer1>
  setTimer2(10);
 8000f3c:	200a      	movs	r0, #10
 8000f3e:	f7ff fc0f 	bl	8000760 <setTimer2>
  setTimer3(10);
 8000f42:	200a      	movs	r0, #10
 8000f44:	f7ff fc28 	bl	8000798 <setTimer3>
  setTimer5(10);
 8000f48:	200a      	movs	r0, #10
 8000f4a:	f7ff fc5d 	bl	8000808 <setTimer5>
  while (1)
  {
	  Run_7SEG();
 8000f4e:	f7ff faef 	bl	8000530 <Run_7SEG>
	  fsm_automatic_run();
 8000f52:	f7ff fe2d 	bl	8000bb0 <fsm_automatic_run>
	  fsm_manial_run();
 8000f56:	f7ff ff41 	bl	8000ddc <fsm_manial_run>
  {
 8000f5a:	e7f8      	b.n	8000f4e <main+0x3e>
 8000f5c:	200000d4 	.word	0x200000d4
 8000f60:	200000cc 	.word	0x200000cc
 8000f64:	200000d0 	.word	0x200000d0

08000f68 <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 8000f68:	b580      	push	{r7, lr}
 8000f6a:	b090      	sub	sp, #64	; 0x40
 8000f6c:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8000f6e:	f107 0318 	add.w	r3, r7, #24
 8000f72:	2228      	movs	r2, #40	; 0x28
 8000f74:	2100      	movs	r1, #0
 8000f76:	4618      	mov	r0, r3
 8000f78:	f001 fd50 	bl	8002a1c <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8000f7c:	1d3b      	adds	r3, r7, #4
 8000f7e:	2200      	movs	r2, #0
 8000f80:	601a      	str	r2, [r3, #0]
 8000f82:	605a      	str	r2, [r3, #4]
 8000f84:	609a      	str	r2, [r3, #8]
 8000f86:	60da      	str	r2, [r3, #12]
 8000f88:	611a      	str	r2, [r3, #16]

  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 8000f8a:	2302      	movs	r3, #2
 8000f8c:	61bb      	str	r3, [r7, #24]
  RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 8000f8e:	2301      	movs	r3, #1
 8000f90:	62bb      	str	r3, [r7, #40]	; 0x28
  RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 8000f92:	2310      	movs	r3, #16
 8000f94:	62fb      	str	r3, [r7, #44]	; 0x2c
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 8000f96:	2300      	movs	r3, #0
 8000f98:	637b      	str	r3, [r7, #52]	; 0x34
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8000f9a:	f107 0318 	add.w	r3, r7, #24
 8000f9e:	4618      	mov	r0, r3
 8000fa0:	f000 fd4c 	bl	8001a3c <HAL_RCC_OscConfig>
 8000fa4:	4603      	mov	r3, r0
 8000fa6:	2b00      	cmp	r3, #0
 8000fa8:	d001      	beq.n	8000fae <SystemClock_Config+0x46>
  {
    Error_Handler();
 8000faa:	f000 f8d3 	bl	8001154 <Error_Handler>
  }
  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8000fae:	230f      	movs	r3, #15
 8000fb0:	607b      	str	r3, [r7, #4]
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
 8000fb2:	2300      	movs	r3, #0
 8000fb4:	60bb      	str	r3, [r7, #8]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 8000fb6:	2300      	movs	r3, #0
 8000fb8:	60fb      	str	r3, [r7, #12]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 8000fba:	2300      	movs	r3, #0
 8000fbc:	613b      	str	r3, [r7, #16]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 8000fbe:	2300      	movs	r3, #0
 8000fc0:	617b      	str	r3, [r7, #20]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 8000fc2:	1d3b      	adds	r3, r7, #4
 8000fc4:	2100      	movs	r1, #0
 8000fc6:	4618      	mov	r0, r3
 8000fc8:	f000 ffb8 	bl	8001f3c <HAL_RCC_ClockConfig>
 8000fcc:	4603      	mov	r3, r0
 8000fce:	2b00      	cmp	r3, #0
 8000fd0:	d001      	beq.n	8000fd6 <SystemClock_Config+0x6e>
  {
    Error_Handler();
 8000fd2:	f000 f8bf 	bl	8001154 <Error_Handler>
  }
}
 8000fd6:	bf00      	nop
 8000fd8:	3740      	adds	r7, #64	; 0x40
 8000fda:	46bd      	mov	sp, r7
 8000fdc:	bd80      	pop	{r7, pc}
	...

08000fe0 <MX_TIM2_Init>:
  * @brief TIM2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM2_Init(void)
{
 8000fe0:	b580      	push	{r7, lr}
 8000fe2:	b086      	sub	sp, #24
 8000fe4:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM2_Init 0 */

  /* USER CODE END TIM2_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 8000fe6:	f107 0308 	add.w	r3, r7, #8
 8000fea:	2200      	movs	r2, #0
 8000fec:	601a      	str	r2, [r3, #0]
 8000fee:	605a      	str	r2, [r3, #4]
 8000ff0:	609a      	str	r2, [r3, #8]
 8000ff2:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8000ff4:	463b      	mov	r3, r7
 8000ff6:	2200      	movs	r2, #0
 8000ff8:	601a      	str	r2, [r3, #0]
 8000ffa:	605a      	str	r2, [r3, #4]

  /* USER CODE BEGIN TIM2_Init 1 */

  /* USER CODE END TIM2_Init 1 */
  htim2.Instance = TIM2;
 8000ffc:	4b1d      	ldr	r3, [pc, #116]	; (8001074 <MX_TIM2_Init+0x94>)
 8000ffe:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8001002:	601a      	str	r2, [r3, #0]
  htim2.Init.Prescaler = 7999;
 8001004:	4b1b      	ldr	r3, [pc, #108]	; (8001074 <MX_TIM2_Init+0x94>)
 8001006:	f641 723f 	movw	r2, #7999	; 0x1f3f
 800100a:	605a      	str	r2, [r3, #4]
  htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 800100c:	4b19      	ldr	r3, [pc, #100]	; (8001074 <MX_TIM2_Init+0x94>)
 800100e:	2200      	movs	r2, #0
 8001010:	609a      	str	r2, [r3, #8]
  htim2.Init.Period = 9;
 8001012:	4b18      	ldr	r3, [pc, #96]	; (8001074 <MX_TIM2_Init+0x94>)
 8001014:	2209      	movs	r2, #9
 8001016:	60da      	str	r2, [r3, #12]
  htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8001018:	4b16      	ldr	r3, [pc, #88]	; (8001074 <MX_TIM2_Init+0x94>)
 800101a:	2200      	movs	r2, #0
 800101c:	611a      	str	r2, [r3, #16]
  htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 800101e:	4b15      	ldr	r3, [pc, #84]	; (8001074 <MX_TIM2_Init+0x94>)
 8001020:	2200      	movs	r2, #0
 8001022:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 8001024:	4813      	ldr	r0, [pc, #76]	; (8001074 <MX_TIM2_Init+0x94>)
 8001026:	f001 f8f1 	bl	800220c <HAL_TIM_Base_Init>
 800102a:	4603      	mov	r3, r0
 800102c:	2b00      	cmp	r3, #0
 800102e:	d001      	beq.n	8001034 <MX_TIM2_Init+0x54>
  {
    Error_Handler();
 8001030:	f000 f890 	bl	8001154 <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8001034:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8001038:	60bb      	str	r3, [r7, #8]
  if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 800103a:	f107 0308 	add.w	r3, r7, #8
 800103e:	4619      	mov	r1, r3
 8001040:	480c      	ldr	r0, [pc, #48]	; (8001074 <MX_TIM2_Init+0x94>)
 8001042:	f001 fa87 	bl	8002554 <HAL_TIM_ConfigClockSource>
 8001046:	4603      	mov	r3, r0
 8001048:	2b00      	cmp	r3, #0
 800104a:	d001      	beq.n	8001050 <MX_TIM2_Init+0x70>
  {
    Error_Handler();
 800104c:	f000 f882 	bl	8001154 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 8001050:	2300      	movs	r3, #0
 8001052:	603b      	str	r3, [r7, #0]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8001054:	2300      	movs	r3, #0
 8001056:	607b      	str	r3, [r7, #4]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 8001058:	463b      	mov	r3, r7
 800105a:	4619      	mov	r1, r3
 800105c:	4805      	ldr	r0, [pc, #20]	; (8001074 <MX_TIM2_Init+0x94>)
 800105e:	f001 fc4f 	bl	8002900 <HAL_TIMEx_MasterConfigSynchronization>
 8001062:	4603      	mov	r3, r0
 8001064:	2b00      	cmp	r3, #0
 8001066:	d001      	beq.n	800106c <MX_TIM2_Init+0x8c>
  {
    Error_Handler();
 8001068:	f000 f874 	bl	8001154 <Error_Handler>
  }
  /* USER CODE BEGIN TIM2_Init 2 */

  /* USER CODE END TIM2_Init 2 */

}
 800106c:	bf00      	nop
 800106e:	3718      	adds	r7, #24
 8001070:	46bd      	mov	sp, r7
 8001072:	bd80      	pop	{r7, pc}
 8001074:	200000d4 	.word	0x200000d4

08001078 <MX_GPIO_Init>:
  * @brief GPIO Initialization Function
  * @param None
  * @retval None
  */
static void MX_GPIO_Init(void)
{
 8001078:	b580      	push	{r7, lr}
 800107a:	b086      	sub	sp, #24
 800107c:	af00      	add	r7, sp, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 800107e:	f107 0308 	add.w	r3, r7, #8
 8001082:	2200      	movs	r2, #0
 8001084:	601a      	str	r2, [r3, #0]
 8001086:	605a      	str	r2, [r3, #4]
 8001088:	609a      	str	r2, [r3, #8]
 800108a:	60da      	str	r2, [r3, #12]

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOA_CLK_ENABLE();
 800108c:	4b28      	ldr	r3, [pc, #160]	; (8001130 <MX_GPIO_Init+0xb8>)
 800108e:	699b      	ldr	r3, [r3, #24]
 8001090:	4a27      	ldr	r2, [pc, #156]	; (8001130 <MX_GPIO_Init+0xb8>)
 8001092:	f043 0304 	orr.w	r3, r3, #4
 8001096:	6193      	str	r3, [r2, #24]
 8001098:	4b25      	ldr	r3, [pc, #148]	; (8001130 <MX_GPIO_Init+0xb8>)
 800109a:	699b      	ldr	r3, [r3, #24]
 800109c:	f003 0304 	and.w	r3, r3, #4
 80010a0:	607b      	str	r3, [r7, #4]
 80010a2:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 80010a4:	4b22      	ldr	r3, [pc, #136]	; (8001130 <MX_GPIO_Init+0xb8>)
 80010a6:	699b      	ldr	r3, [r3, #24]
 80010a8:	4a21      	ldr	r2, [pc, #132]	; (8001130 <MX_GPIO_Init+0xb8>)
 80010aa:	f043 0308 	orr.w	r3, r3, #8
 80010ae:	6193      	str	r3, [r2, #24]
 80010b0:	4b1f      	ldr	r3, [pc, #124]	; (8001130 <MX_GPIO_Init+0xb8>)
 80010b2:	699b      	ldr	r3, [r3, #24]
 80010b4:	f003 0308 	and.w	r3, r3, #8
 80010b8:	603b      	str	r3, [r7, #0]
 80010ba:	683b      	ldr	r3, [r7, #0]

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOA, RED1_Pin|YELLOW1_Pin|GREEN1_Pin|RED2_Pin
 80010bc:	2200      	movs	r2, #0
 80010be:	f240 31ff 	movw	r1, #1023	; 0x3ff
 80010c2:	481c      	ldr	r0, [pc, #112]	; (8001134 <MX_GPIO_Init+0xbc>)
 80010c4:	f000 fca1 	bl	8001a0a <HAL_GPIO_WritePin>
                          |YELLOW2_Pin|GREEN2_Pin|EN0_Pin|EN1_Pin
                          |EN2_Pin|EN3_Pin, GPIO_PIN_RESET);

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOB, SEG0_Pin|SEG1_Pin|SEG2_Pin|SEG3_Pin
 80010c8:	2200      	movs	r2, #0
 80010ca:	217f      	movs	r1, #127	; 0x7f
 80010cc:	481a      	ldr	r0, [pc, #104]	; (8001138 <MX_GPIO_Init+0xc0>)
 80010ce:	f000 fc9c 	bl	8001a0a <HAL_GPIO_WritePin>
                          |SEG4_Pin|SEG5_Pin|SEG6_Pin, GPIO_PIN_RESET);

  /*Configure GPIO pins : RED1_Pin YELLOW1_Pin GREEN1_Pin RED2_Pin
                           YELLOW2_Pin GREEN2_Pin EN0_Pin EN1_Pin
                           EN2_Pin EN3_Pin */
  GPIO_InitStruct.Pin = RED1_Pin|YELLOW1_Pin|GREEN1_Pin|RED2_Pin
 80010d2:	f240 33ff 	movw	r3, #1023	; 0x3ff
 80010d6:	60bb      	str	r3, [r7, #8]
                          |YELLOW2_Pin|GREEN2_Pin|EN0_Pin|EN1_Pin
                          |EN2_Pin|EN3_Pin;
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80010d8:	2301      	movs	r3, #1
 80010da:	60fb      	str	r3, [r7, #12]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80010dc:	2300      	movs	r3, #0
 80010de:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80010e0:	2302      	movs	r3, #2
 80010e2:	617b      	str	r3, [r7, #20]
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80010e4:	f107 0308 	add.w	r3, r7, #8
 80010e8:	4619      	mov	r1, r3
 80010ea:	4812      	ldr	r0, [pc, #72]	; (8001134 <MX_GPIO_Init+0xbc>)
 80010ec:	f000 fafc 	bl	80016e8 <HAL_GPIO_Init>

  /*Configure GPIO pins : SEG0_Pin SEG1_Pin SEG2_Pin SEG3_Pin
                           SEG4_Pin SEG5_Pin SEG6_Pin */
  GPIO_InitStruct.Pin = SEG0_Pin|SEG1_Pin|SEG2_Pin|SEG3_Pin
 80010f0:	237f      	movs	r3, #127	; 0x7f
 80010f2:	60bb      	str	r3, [r7, #8]
                          |SEG4_Pin|SEG5_Pin|SEG6_Pin;
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80010f4:	2301      	movs	r3, #1
 80010f6:	60fb      	str	r3, [r7, #12]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80010f8:	2300      	movs	r3, #0
 80010fa:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80010fc:	2302      	movs	r3, #2
 80010fe:	617b      	str	r3, [r7, #20]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001100:	f107 0308 	add.w	r3, r7, #8
 8001104:	4619      	mov	r1, r3
 8001106:	480c      	ldr	r0, [pc, #48]	; (8001138 <MX_GPIO_Init+0xc0>)
 8001108:	f000 faee 	bl	80016e8 <HAL_GPIO_Init>

  /*Configure GPIO pins : Button1_Pin Button2_Pin Button3_Pin */
  GPIO_InitStruct.Pin = Button1_Pin|Button2_Pin|Button3_Pin;
 800110c:	f44f 43e0 	mov.w	r3, #28672	; 0x7000
 8001110:	60bb      	str	r3, [r7, #8]
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 8001112:	2300      	movs	r3, #0
 8001114:	60fb      	str	r3, [r7, #12]
  GPIO_InitStruct.Pull = GPIO_PULLUP;
 8001116:	2301      	movs	r3, #1
 8001118:	613b      	str	r3, [r7, #16]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800111a:	f107 0308 	add.w	r3, r7, #8
 800111e:	4619      	mov	r1, r3
 8001120:	4805      	ldr	r0, [pc, #20]	; (8001138 <MX_GPIO_Init+0xc0>)
 8001122:	f000 fae1 	bl	80016e8 <HAL_GPIO_Init>

}
 8001126:	bf00      	nop
 8001128:	3718      	adds	r7, #24
 800112a:	46bd      	mov	sp, r7
 800112c:	bd80      	pop	{r7, pc}
 800112e:	bf00      	nop
 8001130:	40021000 	.word	0x40021000
 8001134:	40010800 	.word	0x40010800
 8001138:	40010c00 	.word	0x40010c00

0800113c <HAL_TIM_PeriodElapsedCallback>:

/* USER CODE BEGIN 4 */
void HAL_TIM_PeriodElapsedCallback (TIM_HandleTypeDef * htim)
{
 800113c:	b580      	push	{r7, lr}
 800113e:	b082      	sub	sp, #8
 8001140:	af00      	add	r7, sp, #0
 8001142:	6078      	str	r0, [r7, #4]
	timerRun();
 8001144:	f7ff fb7c 	bl	8000840 <timerRun>
	getKeyInput();
 8001148:	f7ff fd28 	bl	8000b9c <getKeyInput>
}
 800114c:	bf00      	nop
 800114e:	3708      	adds	r7, #8
 8001150:	46bd      	mov	sp, r7
 8001152:	bd80      	pop	{r7, pc}

08001154 <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 8001154:	b480      	push	{r7}
 8001156:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting the I-bit in the CPSR.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 8001158:	b672      	cpsid	i
}
 800115a:	bf00      	nop
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
 800115c:	e7fe      	b.n	800115c <Error_Handler+0x8>
	...

08001160 <modification_mode>:
#include "global.h"
#include "Display.h"
#include "button.h"
// mode duoc the hien qua cac den tin hieu hang doc
//
void modification_mode(){
 8001160:	b580      	push	{r7, lr}
 8001162:	af00      	add	r7, sp, #0
	switch(status_col){
 8001164:	4b46      	ldr	r3, [pc, #280]	; (8001280 <modification_mode+0x120>)
 8001166:	681b      	ldr	r3, [r3, #0]
 8001168:	2b0e      	cmp	r3, #14
 800116a:	d054      	beq.n	8001216 <modification_mode+0xb6>
 800116c:	2b0e      	cmp	r3, #14
 800116e:	dc79      	bgt.n	8001264 <modification_mode+0x104>
 8001170:	2b0c      	cmp	r3, #12
 8001172:	d002      	beq.n	800117a <modification_mode+0x1a>
 8001174:	2b0d      	cmp	r3, #13
 8001176:	d027      	beq.n	80011c8 <modification_mode+0x68>
			}

			updateClockBuffer(Time_Auto_Yellow/1000,4);
			break;
		default:
			break;
 8001178:	e074      	b.n	8001264 <modification_mode+0x104>
			if(isButton2Pressed()==1){
 800117a:	f7ff fc01 	bl	8000980 <isButton2Pressed>
 800117e:	4603      	mov	r3, r0
 8001180:	2b01      	cmp	r3, #1
 8001182:	d114      	bne.n	80011ae <modification_mode+0x4e>
				Time_Auto_Red = (Time_Auto_Red+1000)%100000;//ms
 8001184:	4b3f      	ldr	r3, [pc, #252]	; (8001284 <modification_mode+0x124>)
 8001186:	681b      	ldr	r3, [r3, #0]
 8001188:	f503 727a 	add.w	r2, r3, #1000	; 0x3e8
 800118c:	4b3e      	ldr	r3, [pc, #248]	; (8001288 <modification_mode+0x128>)
 800118e:	fb83 1302 	smull	r1, r3, r3, r2
 8001192:	1359      	asrs	r1, r3, #13
 8001194:	17d3      	asrs	r3, r2, #31
 8001196:	1acb      	subs	r3, r1, r3
 8001198:	493c      	ldr	r1, [pc, #240]	; (800128c <modification_mode+0x12c>)
 800119a:	fb01 f303 	mul.w	r3, r1, r3
 800119e:	1ad3      	subs	r3, r2, r3
 80011a0:	4a38      	ldr	r2, [pc, #224]	; (8001284 <modification_mode+0x124>)
 80011a2:	6013      	str	r3, [r2, #0]
				set_Time_Auto_Red(Time_Auto_Red);
 80011a4:	4b37      	ldr	r3, [pc, #220]	; (8001284 <modification_mode+0x124>)
 80011a6:	681b      	ldr	r3, [r3, #0]
 80011a8:	4618      	mov	r0, r3
 80011aa:	f7ff fe87 	bl	8000ebc <set_Time_Auto_Red>
			updateClockBuffer(Time_Auto_Red/1000,2);
 80011ae:	4b35      	ldr	r3, [pc, #212]	; (8001284 <modification_mode+0x124>)
 80011b0:	681b      	ldr	r3, [r3, #0]
 80011b2:	4a37      	ldr	r2, [pc, #220]	; (8001290 <modification_mode+0x130>)
 80011b4:	fb82 1203 	smull	r1, r2, r2, r3
 80011b8:	1192      	asrs	r2, r2, #6
 80011ba:	17db      	asrs	r3, r3, #31
 80011bc:	1ad3      	subs	r3, r2, r3
 80011be:	2102      	movs	r1, #2
 80011c0:	4618      	mov	r0, r3
 80011c2:	f7ff f979 	bl	80004b8 <updateClockBuffer>
			break;
 80011c6:	e04e      	b.n	8001266 <modification_mode+0x106>
			if(isButton2Pressed()==1){
 80011c8:	f7ff fbda 	bl	8000980 <isButton2Pressed>
 80011cc:	4603      	mov	r3, r0
 80011ce:	2b01      	cmp	r3, #1
 80011d0:	d114      	bne.n	80011fc <modification_mode+0x9c>
				Time_Auto_Green = (Time_Auto_Green+1000)%100000;//ms
 80011d2:	4b30      	ldr	r3, [pc, #192]	; (8001294 <modification_mode+0x134>)
 80011d4:	681b      	ldr	r3, [r3, #0]
 80011d6:	f503 727a 	add.w	r2, r3, #1000	; 0x3e8
 80011da:	4b2b      	ldr	r3, [pc, #172]	; (8001288 <modification_mode+0x128>)
 80011dc:	fb83 1302 	smull	r1, r3, r3, r2
 80011e0:	1359      	asrs	r1, r3, #13
 80011e2:	17d3      	asrs	r3, r2, #31
 80011e4:	1acb      	subs	r3, r1, r3
 80011e6:	4929      	ldr	r1, [pc, #164]	; (800128c <modification_mode+0x12c>)
 80011e8:	fb01 f303 	mul.w	r3, r1, r3
 80011ec:	1ad3      	subs	r3, r2, r3
 80011ee:	4a29      	ldr	r2, [pc, #164]	; (8001294 <modification_mode+0x134>)
 80011f0:	6013      	str	r3, [r2, #0]
				set_Time_Auto_Green(Time_Auto_Green);
 80011f2:	4b28      	ldr	r3, [pc, #160]	; (8001294 <modification_mode+0x134>)
 80011f4:	681b      	ldr	r3, [r3, #0]
 80011f6:	4618      	mov	r0, r3
 80011f8:	f7ff fe6e 	bl	8000ed8 <set_Time_Auto_Green>
			updateClockBuffer(Time_Auto_Green/1000,3);
 80011fc:	4b25      	ldr	r3, [pc, #148]	; (8001294 <modification_mode+0x134>)
 80011fe:	681b      	ldr	r3, [r3, #0]
 8001200:	4a23      	ldr	r2, [pc, #140]	; (8001290 <modification_mode+0x130>)
 8001202:	fb82 1203 	smull	r1, r2, r2, r3
 8001206:	1192      	asrs	r2, r2, #6
 8001208:	17db      	asrs	r3, r3, #31
 800120a:	1ad3      	subs	r3, r2, r3
 800120c:	2103      	movs	r1, #3
 800120e:	4618      	mov	r0, r3
 8001210:	f7ff f952 	bl	80004b8 <updateClockBuffer>
			break;
 8001214:	e027      	b.n	8001266 <modification_mode+0x106>
			if(isButton2Pressed()==1){
 8001216:	f7ff fbb3 	bl	8000980 <isButton2Pressed>
 800121a:	4603      	mov	r3, r0
 800121c:	2b01      	cmp	r3, #1
 800121e:	d114      	bne.n	800124a <modification_mode+0xea>
				Time_Auto_Yellow = (Time_Auto_Yellow+1000)%100000;//ms
 8001220:	4b1d      	ldr	r3, [pc, #116]	; (8001298 <modification_mode+0x138>)
 8001222:	681b      	ldr	r3, [r3, #0]
 8001224:	f503 727a 	add.w	r2, r3, #1000	; 0x3e8
 8001228:	4b17      	ldr	r3, [pc, #92]	; (8001288 <modification_mode+0x128>)
 800122a:	fb83 1302 	smull	r1, r3, r3, r2
 800122e:	1359      	asrs	r1, r3, #13
 8001230:	17d3      	asrs	r3, r2, #31
 8001232:	1acb      	subs	r3, r1, r3
 8001234:	4915      	ldr	r1, [pc, #84]	; (800128c <modification_mode+0x12c>)
 8001236:	fb01 f303 	mul.w	r3, r1, r3
 800123a:	1ad3      	subs	r3, r2, r3
 800123c:	4a16      	ldr	r2, [pc, #88]	; (8001298 <modification_mode+0x138>)
 800123e:	6013      	str	r3, [r2, #0]
				set_Time_Auto_Yellow(Time_Auto_Yellow);
 8001240:	4b15      	ldr	r3, [pc, #84]	; (8001298 <modification_mode+0x138>)
 8001242:	681b      	ldr	r3, [r3, #0]
 8001244:	4618      	mov	r0, r3
 8001246:	f7ff fe55 	bl	8000ef4 <set_Time_Auto_Yellow>
			updateClockBuffer(Time_Auto_Yellow/1000,4);
 800124a:	4b13      	ldr	r3, [pc, #76]	; (8001298 <modification_mode+0x138>)
 800124c:	681b      	ldr	r3, [r3, #0]
 800124e:	4a10      	ldr	r2, [pc, #64]	; (8001290 <modification_mode+0x130>)
 8001250:	fb82 1203 	smull	r1, r2, r2, r3
 8001254:	1192      	asrs	r2, r2, #6
 8001256:	17db      	asrs	r3, r3, #31
 8001258:	1ad3      	subs	r3, r2, r3
 800125a:	2104      	movs	r1, #4
 800125c:	4618      	mov	r0, r3
 800125e:	f7ff f92b 	bl	80004b8 <updateClockBuffer>
			break;
 8001262:	e000      	b.n	8001266 <modification_mode+0x106>
			break;
 8001264:	bf00      	nop
	}
	//nhan button3 de ket thuc mode
	if(isButton3Pressed()==1){
 8001266:	f7ff fb9d 	bl	80009a4 <isButton3Pressed>
 800126a:	4603      	mov	r3, r0
 800126c:	2b01      	cmp	r3, #1
 800126e:	d105      	bne.n	800127c <modification_mode+0x11c>
		status_col=INIT;
 8001270:	4b03      	ldr	r3, [pc, #12]	; (8001280 <modification_mode+0x120>)
 8001272:	2201      	movs	r2, #1
 8001274:	601a      	str	r2, [r3, #0]
		status_row=INIT;
 8001276:	4b09      	ldr	r3, [pc, #36]	; (800129c <modification_mode+0x13c>)
 8001278:	2201      	movs	r2, #1
 800127a:	601a      	str	r2, [r3, #0]
	}
}
 800127c:	bf00      	nop
 800127e:	bd80      	pop	{r7, pc}
 8001280:	200000cc 	.word	0x200000cc
 8001284:	2000003c 	.word	0x2000003c
 8001288:	14f8b589 	.word	0x14f8b589
 800128c:	000186a0 	.word	0x000186a0
 8001290:	10624dd3 	.word	0x10624dd3
 8001294:	20000040 	.word	0x20000040
 8001298:	20000044 	.word	0x20000044
 800129c:	200000d0 	.word	0x200000d0

080012a0 <HAL_MspInit>:
 80012a0:	b480      	push	{r7}
 80012a2:	b085      	sub	sp, #20
 80012a4:	af00      	add	r7, sp, #0
 80012a6:	4b15      	ldr	r3, [pc, #84]	; (80012fc <HAL_MspInit+0x5c>)
 80012a8:	699b      	ldr	r3, [r3, #24]
 80012aa:	4a14      	ldr	r2, [pc, #80]	; (80012fc <HAL_MspInit+0x5c>)
 80012ac:	f043 0301 	orr.w	r3, r3, #1
 80012b0:	6193      	str	r3, [r2, #24]
 80012b2:	4b12      	ldr	r3, [pc, #72]	; (80012fc <HAL_MspInit+0x5c>)
 80012b4:	699b      	ldr	r3, [r3, #24]
 80012b6:	f003 0301 	and.w	r3, r3, #1
 80012ba:	60bb      	str	r3, [r7, #8]
 80012bc:	68bb      	ldr	r3, [r7, #8]
 80012be:	4b0f      	ldr	r3, [pc, #60]	; (80012fc <HAL_MspInit+0x5c>)
 80012c0:	69db      	ldr	r3, [r3, #28]
 80012c2:	4a0e      	ldr	r2, [pc, #56]	; (80012fc <HAL_MspInit+0x5c>)
 80012c4:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 80012c8:	61d3      	str	r3, [r2, #28]
 80012ca:	4b0c      	ldr	r3, [pc, #48]	; (80012fc <HAL_MspInit+0x5c>)
 80012cc:	69db      	ldr	r3, [r3, #28]
 80012ce:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80012d2:	607b      	str	r3, [r7, #4]
 80012d4:	687b      	ldr	r3, [r7, #4]
 80012d6:	4b0a      	ldr	r3, [pc, #40]	; (8001300 <HAL_MspInit+0x60>)
 80012d8:	685b      	ldr	r3, [r3, #4]
 80012da:	60fb      	str	r3, [r7, #12]
 80012dc:	68fb      	ldr	r3, [r7, #12]
 80012de:	f023 63e0 	bic.w	r3, r3, #117440512	; 0x7000000
 80012e2:	60fb      	str	r3, [r7, #12]
 80012e4:	68fb      	ldr	r3, [r7, #12]
 80012e6:	f043 6380 	orr.w	r3, r3, #67108864	; 0x4000000
 80012ea:	60fb      	str	r3, [r7, #12]
 80012ec:	4a04      	ldr	r2, [pc, #16]	; (8001300 <HAL_MspInit+0x60>)
 80012ee:	68fb      	ldr	r3, [r7, #12]
 80012f0:	6053      	str	r3, [r2, #4]
 80012f2:	bf00      	nop
 80012f4:	3714      	adds	r7, #20
 80012f6:	46bd      	mov	sp, r7
 80012f8:	bc80      	pop	{r7}
 80012fa:	4770      	bx	lr
 80012fc:	40021000 	.word	0x40021000
 8001300:	40010000 	.word	0x40010000

08001304 <HAL_TIM_Base_MspInit>:
 8001304:	b580      	push	{r7, lr}
 8001306:	b084      	sub	sp, #16
 8001308:	af00      	add	r7, sp, #0
 800130a:	6078      	str	r0, [r7, #4]
 800130c:	687b      	ldr	r3, [r7, #4]
 800130e:	681b      	ldr	r3, [r3, #0]
 8001310:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8001314:	d113      	bne.n	800133e <HAL_TIM_Base_MspInit+0x3a>
 8001316:	4b0c      	ldr	r3, [pc, #48]	; (8001348 <HAL_TIM_Base_MspInit+0x44>)
 8001318:	69db      	ldr	r3, [r3, #28]
 800131a:	4a0b      	ldr	r2, [pc, #44]	; (8001348 <HAL_TIM_Base_MspInit+0x44>)
 800131c:	f043 0301 	orr.w	r3, r3, #1
 8001320:	61d3      	str	r3, [r2, #28]
 8001322:	4b09      	ldr	r3, [pc, #36]	; (8001348 <HAL_TIM_Base_MspInit+0x44>)
 8001324:	69db      	ldr	r3, [r3, #28]
 8001326:	f003 0301 	and.w	r3, r3, #1
 800132a:	60fb      	str	r3, [r7, #12]
 800132c:	68fb      	ldr	r3, [r7, #12]
 800132e:	2200      	movs	r2, #0
 8001330:	2100      	movs	r1, #0
 8001332:	201c      	movs	r0, #28
 8001334:	f000 f9a1 	bl	800167a <HAL_NVIC_SetPriority>
 8001338:	201c      	movs	r0, #28
 800133a:	f000 f9ba 	bl	80016b2 <HAL_NVIC_EnableIRQ>
 800133e:	bf00      	nop
 8001340:	3710      	adds	r7, #16
 8001342:	46bd      	mov	sp, r7
 8001344:	bd80      	pop	{r7, pc}
 8001346:	bf00      	nop
 8001348:	40021000 	.word	0x40021000

0800134c <NMI_Handler>:
 800134c:	b480      	push	{r7}
 800134e:	af00      	add	r7, sp, #0
 8001350:	e7fe      	b.n	8001350 <NMI_Handler+0x4>

08001352 <HardFault_Handler>:
 8001352:	b480      	push	{r7}
 8001354:	af00      	add	r7, sp, #0
 8001356:	e7fe      	b.n	8001356 <HardFault_Handler+0x4>

08001358 <MemManage_Handler>:
 8001358:	b480      	push	{r7}
 800135a:	af00      	add	r7, sp, #0
 800135c:	e7fe      	b.n	800135c <MemManage_Handler+0x4>

0800135e <BusFault_Handler>:
 800135e:	b480      	push	{r7}
 8001360:	af00      	add	r7, sp, #0
 8001362:	e7fe      	b.n	8001362 <BusFault_Handler+0x4>

08001364 <UsageFault_Handler>:
 8001364:	b480      	push	{r7}
 8001366:	af00      	add	r7, sp, #0
 8001368:	e7fe      	b.n	8001368 <UsageFault_Handler+0x4>

0800136a <SVC_Handler>:
 800136a:	b480      	push	{r7}
 800136c:	af00      	add	r7, sp, #0
 800136e:	bf00      	nop
 8001370:	46bd      	mov	sp, r7
 8001372:	bc80      	pop	{r7}
 8001374:	4770      	bx	lr

08001376 <DebugMon_Handler>:
 8001376:	b480      	push	{r7}
 8001378:	af00      	add	r7, sp, #0
 800137a:	bf00      	nop
 800137c:	46bd      	mov	sp, r7
 800137e:	bc80      	pop	{r7}
 8001380:	4770      	bx	lr

08001382 <PendSV_Handler>:
 8001382:	b480      	push	{r7}
 8001384:	af00      	add	r7, sp, #0
 8001386:	bf00      	nop
 8001388:	46bd      	mov	sp, r7
 800138a:	bc80      	pop	{r7}
 800138c:	4770      	bx	lr

0800138e <SysTick_Handler>:
 800138e:	b580      	push	{r7, lr}
 8001390:	af00      	add	r7, sp, #0
 8001392:	f000 f87f 	bl	8001494 <HAL_IncTick>
 8001396:	bf00      	nop
 8001398:	bd80      	pop	{r7, pc}
	...

0800139c <TIM2_IRQHandler>:
 800139c:	b580      	push	{r7, lr}
 800139e:	af00      	add	r7, sp, #0
 80013a0:	4802      	ldr	r0, [pc, #8]	; (80013ac <TIM2_IRQHandler+0x10>)
 80013a2:	f000 ffcf 	bl	8002344 <HAL_TIM_IRQHandler>
 80013a6:	bf00      	nop
 80013a8:	bd80      	pop	{r7, pc}
 80013aa:	bf00      	nop
 80013ac:	200000d4 	.word	0x200000d4

080013b0 <SystemInit>:
 80013b0:	b480      	push	{r7}
 80013b2:	af00      	add	r7, sp, #0
 80013b4:	bf00      	nop
 80013b6:	46bd      	mov	sp, r7
 80013b8:	bc80      	pop	{r7}
 80013ba:	4770      	bx	lr

080013bc <Reset_Handler>:
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80013bc:	480c      	ldr	r0, [pc, #48]	; (80013f0 <LoopFillZerobss+0x12>)
  ldr r1, =_edata
 80013be:	490d      	ldr	r1, [pc, #52]	; (80013f4 <LoopFillZerobss+0x16>)
  ldr r2, =_sidata
 80013c0:	4a0d      	ldr	r2, [pc, #52]	; (80013f8 <LoopFillZerobss+0x1a>)
  movs r3, #0
 80013c2:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80013c4:	e002      	b.n	80013cc <LoopCopyDataInit>

080013c6 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80013c6:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80013c8:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80013ca:	3304      	adds	r3, #4

080013cc <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80013cc:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80013ce:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80013d0:	d3f9      	bcc.n	80013c6 <CopyDataInit>
  
/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80013d2:	4a0a      	ldr	r2, [pc, #40]	; (80013fc <LoopFillZerobss+0x1e>)
  ldr r4, =_ebss
 80013d4:	4c0a      	ldr	r4, [pc, #40]	; (8001400 <LoopFillZerobss+0x22>)
  movs r3, #0
 80013d6:	2300      	movs	r3, #0
  b LoopFillZerobss
 80013d8:	e001      	b.n	80013de <LoopFillZerobss>

080013da <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80013da:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80013dc:	3204      	adds	r2, #4

080013de <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80013de:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80013e0:	d3fb      	bcc.n	80013da <FillZerobss>

/* Call the clock system intitialization function.*/
    bl  SystemInit
 80013e2:	f7ff ffe5 	bl	80013b0 <SystemInit>
/* Call static constructors */
    bl __libc_init_array
 80013e6:	f001 faf5 	bl	80029d4 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80013ea:	f7ff fd91 	bl	8000f10 <main>
  bx lr
 80013ee:	4770      	bx	lr
  ldr r0, =_sdata
 80013f0:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80013f4:	20000054 	.word	0x20000054
  ldr r2, =_sidata
 80013f8:	08002a6c 	.word	0x08002a6c
  ldr r2, =_sbss
 80013fc:	20000054 	.word	0x20000054
  ldr r4, =_ebss
 8001400:	20000120 	.word	0x20000120

08001404 <ADC1_2_IRQHandler>:
 * @retval : None
*/
    .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8001404:	e7fe      	b.n	8001404 <ADC1_2_IRQHandler>
	...

08001408 <HAL_Init>:
 8001408:	b580      	push	{r7, lr}
 800140a:	af00      	add	r7, sp, #0
 800140c:	4b08      	ldr	r3, [pc, #32]	; (8001430 <HAL_Init+0x28>)
 800140e:	681b      	ldr	r3, [r3, #0]
 8001410:	4a07      	ldr	r2, [pc, #28]	; (8001430 <HAL_Init+0x28>)
 8001412:	f043 0310 	orr.w	r3, r3, #16
 8001416:	6013      	str	r3, [r2, #0]
 8001418:	2003      	movs	r0, #3
 800141a:	f000 f923 	bl	8001664 <HAL_NVIC_SetPriorityGrouping>
 800141e:	200f      	movs	r0, #15
 8001420:	f000 f808 	bl	8001434 <HAL_InitTick>
 8001424:	f7ff ff3c 	bl	80012a0 <HAL_MspInit>
 8001428:	2300      	movs	r3, #0
 800142a:	4618      	mov	r0, r3
 800142c:	bd80      	pop	{r7, pc}
 800142e:	bf00      	nop
 8001430:	40022000 	.word	0x40022000

08001434 <HAL_InitTick>:
 8001434:	b580      	push	{r7, lr}
 8001436:	b082      	sub	sp, #8
 8001438:	af00      	add	r7, sp, #0
 800143a:	6078      	str	r0, [r7, #4]
 800143c:	4b12      	ldr	r3, [pc, #72]	; (8001488 <HAL_InitTick+0x54>)
 800143e:	681a      	ldr	r2, [r3, #0]
 8001440:	4b12      	ldr	r3, [pc, #72]	; (800148c <HAL_InitTick+0x58>)
 8001442:	781b      	ldrb	r3, [r3, #0]
 8001444:	4619      	mov	r1, r3
 8001446:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 800144a:	fbb3 f3f1 	udiv	r3, r3, r1
 800144e:	fbb2 f3f3 	udiv	r3, r2, r3
 8001452:	4618      	mov	r0, r3
 8001454:	f000 f93b 	bl	80016ce <HAL_SYSTICK_Config>
 8001458:	4603      	mov	r3, r0
 800145a:	2b00      	cmp	r3, #0
 800145c:	d001      	beq.n	8001462 <HAL_InitTick+0x2e>
 800145e:	2301      	movs	r3, #1
 8001460:	e00e      	b.n	8001480 <HAL_InitTick+0x4c>
 8001462:	687b      	ldr	r3, [r7, #4]
 8001464:	2b0f      	cmp	r3, #15
 8001466:	d80a      	bhi.n	800147e <HAL_InitTick+0x4a>
 8001468:	2200      	movs	r2, #0
 800146a:	6879      	ldr	r1, [r7, #4]
 800146c:	f04f 30ff 	mov.w	r0, #4294967295
 8001470:	f000 f903 	bl	800167a <HAL_NVIC_SetPriority>
 8001474:	4a06      	ldr	r2, [pc, #24]	; (8001490 <HAL_InitTick+0x5c>)
 8001476:	687b      	ldr	r3, [r7, #4]
 8001478:	6013      	str	r3, [r2, #0]
 800147a:	2300      	movs	r3, #0
 800147c:	e000      	b.n	8001480 <HAL_InitTick+0x4c>
 800147e:	2301      	movs	r3, #1
 8001480:	4618      	mov	r0, r3
 8001482:	3708      	adds	r7, #8
 8001484:	46bd      	mov	sp, r7
 8001486:	bd80      	pop	{r7, pc}
 8001488:	20000048 	.word	0x20000048
 800148c:	20000050 	.word	0x20000050
 8001490:	2000004c 	.word	0x2000004c

08001494 <HAL_IncTick>:
 8001494:	b480      	push	{r7}
 8001496:	af00      	add	r7, sp, #0
 8001498:	4b05      	ldr	r3, [pc, #20]	; (80014b0 <HAL_IncTick+0x1c>)
 800149a:	781b      	ldrb	r3, [r3, #0]
 800149c:	461a      	mov	r2, r3
 800149e:	4b05      	ldr	r3, [pc, #20]	; (80014b4 <HAL_IncTick+0x20>)
 80014a0:	681b      	ldr	r3, [r3, #0]
 80014a2:	4413      	add	r3, r2
 80014a4:	4a03      	ldr	r2, [pc, #12]	; (80014b4 <HAL_IncTick+0x20>)
 80014a6:	6013      	str	r3, [r2, #0]
 80014a8:	bf00      	nop
 80014aa:	46bd      	mov	sp, r7
 80014ac:	bc80      	pop	{r7}
 80014ae:	4770      	bx	lr
 80014b0:	20000050 	.word	0x20000050
 80014b4:	2000011c 	.word	0x2000011c

080014b8 <HAL_GetTick>:
 80014b8:	b480      	push	{r7}
 80014ba:	af00      	add	r7, sp, #0
 80014bc:	4b02      	ldr	r3, [pc, #8]	; (80014c8 <HAL_GetTick+0x10>)
 80014be:	681b      	ldr	r3, [r3, #0]
 80014c0:	4618      	mov	r0, r3
 80014c2:	46bd      	mov	sp, r7
 80014c4:	bc80      	pop	{r7}
 80014c6:	4770      	bx	lr
 80014c8:	2000011c 	.word	0x2000011c

080014cc <__NVIC_SetPriorityGrouping>:
 80014cc:	b480      	push	{r7}
 80014ce:	b085      	sub	sp, #20
 80014d0:	af00      	add	r7, sp, #0
 80014d2:	6078      	str	r0, [r7, #4]
 80014d4:	687b      	ldr	r3, [r7, #4]
 80014d6:	f003 0307 	and.w	r3, r3, #7
 80014da:	60fb      	str	r3, [r7, #12]
 80014dc:	4b0c      	ldr	r3, [pc, #48]	; (8001510 <__NVIC_SetPriorityGrouping+0x44>)
 80014de:	68db      	ldr	r3, [r3, #12]
 80014e0:	60bb      	str	r3, [r7, #8]
 80014e2:	68ba      	ldr	r2, [r7, #8]
 80014e4:	f64f 03ff 	movw	r3, #63743	; 0xf8ff
 80014e8:	4013      	ands	r3, r2
 80014ea:	60bb      	str	r3, [r7, #8]
 80014ec:	68fb      	ldr	r3, [r7, #12]
 80014ee:	021a      	lsls	r2, r3, #8
 80014f0:	68bb      	ldr	r3, [r7, #8]
 80014f2:	4313      	orrs	r3, r2
 80014f4:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 80014f8:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 80014fc:	60bb      	str	r3, [r7, #8]
 80014fe:	4a04      	ldr	r2, [pc, #16]	; (8001510 <__NVIC_SetPriorityGrouping+0x44>)
 8001500:	68bb      	ldr	r3, [r7, #8]
 8001502:	60d3      	str	r3, [r2, #12]
 8001504:	bf00      	nop
 8001506:	3714      	adds	r7, #20
 8001508:	46bd      	mov	sp, r7
 800150a:	bc80      	pop	{r7}
 800150c:	4770      	bx	lr
 800150e:	bf00      	nop
 8001510:	e000ed00 	.word	0xe000ed00

08001514 <__NVIC_GetPriorityGrouping>:
 8001514:	b480      	push	{r7}
 8001516:	af00      	add	r7, sp, #0
 8001518:	4b04      	ldr	r3, [pc, #16]	; (800152c <__NVIC_GetPriorityGrouping+0x18>)
 800151a:	68db      	ldr	r3, [r3, #12]
 800151c:	0a1b      	lsrs	r3, r3, #8
 800151e:	f003 0307 	and.w	r3, r3, #7
 8001522:	4618      	mov	r0, r3
 8001524:	46bd      	mov	sp, r7
 8001526:	bc80      	pop	{r7}
 8001528:	4770      	bx	lr
 800152a:	bf00      	nop
 800152c:	e000ed00 	.word	0xe000ed00

08001530 <__NVIC_EnableIRQ>:
 8001530:	b480      	push	{r7}
 8001532:	b083      	sub	sp, #12
 8001534:	af00      	add	r7, sp, #0
 8001536:	4603      	mov	r3, r0
 8001538:	71fb      	strb	r3, [r7, #7]
 800153a:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800153e:	2b00      	cmp	r3, #0
 8001540:	db0b      	blt.n	800155a <__NVIC_EnableIRQ+0x2a>
 8001542:	79fb      	ldrb	r3, [r7, #7]
 8001544:	f003 021f 	and.w	r2, r3, #31
 8001548:	4906      	ldr	r1, [pc, #24]	; (8001564 <__NVIC_EnableIRQ+0x34>)
 800154a:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800154e:	095b      	lsrs	r3, r3, #5
 8001550:	2001      	movs	r0, #1
 8001552:	fa00 f202 	lsl.w	r2, r0, r2
 8001556:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 800155a:	bf00      	nop
 800155c:	370c      	adds	r7, #12
 800155e:	46bd      	mov	sp, r7
 8001560:	bc80      	pop	{r7}
 8001562:	4770      	bx	lr
 8001564:	e000e100 	.word	0xe000e100

08001568 <__NVIC_SetPriority>:
 8001568:	b480      	push	{r7}
 800156a:	b083      	sub	sp, #12
 800156c:	af00      	add	r7, sp, #0
 800156e:	4603      	mov	r3, r0
 8001570:	6039      	str	r1, [r7, #0]
 8001572:	71fb      	strb	r3, [r7, #7]
 8001574:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001578:	2b00      	cmp	r3, #0
 800157a:	db0a      	blt.n	8001592 <__NVIC_SetPriority+0x2a>
 800157c:	683b      	ldr	r3, [r7, #0]
 800157e:	b2da      	uxtb	r2, r3
 8001580:	490c      	ldr	r1, [pc, #48]	; (80015b4 <__NVIC_SetPriority+0x4c>)
 8001582:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001586:	0112      	lsls	r2, r2, #4
 8001588:	b2d2      	uxtb	r2, r2
 800158a:	440b      	add	r3, r1
 800158c:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
 8001590:	e00a      	b.n	80015a8 <__NVIC_SetPriority+0x40>
 8001592:	683b      	ldr	r3, [r7, #0]
 8001594:	b2da      	uxtb	r2, r3
 8001596:	4908      	ldr	r1, [pc, #32]	; (80015b8 <__NVIC_SetPriority+0x50>)
 8001598:	79fb      	ldrb	r3, [r7, #7]
 800159a:	f003 030f 	and.w	r3, r3, #15
 800159e:	3b04      	subs	r3, #4
 80015a0:	0112      	lsls	r2, r2, #4
 80015a2:	b2d2      	uxtb	r2, r2
 80015a4:	440b      	add	r3, r1
 80015a6:	761a      	strb	r2, [r3, #24]
 80015a8:	bf00      	nop
 80015aa:	370c      	adds	r7, #12
 80015ac:	46bd      	mov	sp, r7
 80015ae:	bc80      	pop	{r7}
 80015b0:	4770      	bx	lr
 80015b2:	bf00      	nop
 80015b4:	e000e100 	.word	0xe000e100
 80015b8:	e000ed00 	.word	0xe000ed00

080015bc <NVIC_EncodePriority>:
 80015bc:	b480      	push	{r7}
 80015be:	b089      	sub	sp, #36	; 0x24
 80015c0:	af00      	add	r7, sp, #0
 80015c2:	60f8      	str	r0, [r7, #12]
 80015c4:	60b9      	str	r1, [r7, #8]
 80015c6:	607a      	str	r2, [r7, #4]
 80015c8:	68fb      	ldr	r3, [r7, #12]
 80015ca:	f003 0307 	and.w	r3, r3, #7
 80015ce:	61fb      	str	r3, [r7, #28]
 80015d0:	69fb      	ldr	r3, [r7, #28]
 80015d2:	f1c3 0307 	rsb	r3, r3, #7
 80015d6:	2b04      	cmp	r3, #4
 80015d8:	bf28      	it	cs
 80015da:	2304      	movcs	r3, #4
 80015dc:	61bb      	str	r3, [r7, #24]
 80015de:	69fb      	ldr	r3, [r7, #28]
 80015e0:	3304      	adds	r3, #4
 80015e2:	2b06      	cmp	r3, #6
 80015e4:	d902      	bls.n	80015ec <NVIC_EncodePriority+0x30>
 80015e6:	69fb      	ldr	r3, [r7, #28]
 80015e8:	3b03      	subs	r3, #3
 80015ea:	e000      	b.n	80015ee <NVIC_EncodePriority+0x32>
 80015ec:	2300      	movs	r3, #0
 80015ee:	617b      	str	r3, [r7, #20]
 80015f0:	f04f 32ff 	mov.w	r2, #4294967295
 80015f4:	69bb      	ldr	r3, [r7, #24]
 80015f6:	fa02 f303 	lsl.w	r3, r2, r3
 80015fa:	43da      	mvns	r2, r3
 80015fc:	68bb      	ldr	r3, [r7, #8]
 80015fe:	401a      	ands	r2, r3
 8001600:	697b      	ldr	r3, [r7, #20]
 8001602:	409a      	lsls	r2, r3
 8001604:	f04f 31ff 	mov.w	r1, #4294967295
 8001608:	697b      	ldr	r3, [r7, #20]
 800160a:	fa01 f303 	lsl.w	r3, r1, r3
 800160e:	43d9      	mvns	r1, r3
 8001610:	687b      	ldr	r3, [r7, #4]
 8001612:	400b      	ands	r3, r1
 8001614:	4313      	orrs	r3, r2
 8001616:	4618      	mov	r0, r3
 8001618:	3724      	adds	r7, #36	; 0x24
 800161a:	46bd      	mov	sp, r7
 800161c:	bc80      	pop	{r7}
 800161e:	4770      	bx	lr

08001620 <SysTick_Config>:
 8001620:	b580      	push	{r7, lr}
 8001622:	b082      	sub	sp, #8
 8001624:	af00      	add	r7, sp, #0
 8001626:	6078      	str	r0, [r7, #4]
 8001628:	687b      	ldr	r3, [r7, #4]
 800162a:	3b01      	subs	r3, #1
 800162c:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 8001630:	d301      	bcc.n	8001636 <SysTick_Config+0x16>
 8001632:	2301      	movs	r3, #1
 8001634:	e00f      	b.n	8001656 <SysTick_Config+0x36>
 8001636:	4a0a      	ldr	r2, [pc, #40]	; (8001660 <SysTick_Config+0x40>)
 8001638:	687b      	ldr	r3, [r7, #4]
 800163a:	3b01      	subs	r3, #1
 800163c:	6053      	str	r3, [r2, #4]
 800163e:	210f      	movs	r1, #15
 8001640:	f04f 30ff 	mov.w	r0, #4294967295
 8001644:	f7ff ff90 	bl	8001568 <__NVIC_SetPriority>
 8001648:	4b05      	ldr	r3, [pc, #20]	; (8001660 <SysTick_Config+0x40>)
 800164a:	2200      	movs	r2, #0
 800164c:	609a      	str	r2, [r3, #8]
 800164e:	4b04      	ldr	r3, [pc, #16]	; (8001660 <SysTick_Config+0x40>)
 8001650:	2207      	movs	r2, #7
 8001652:	601a      	str	r2, [r3, #0]
 8001654:	2300      	movs	r3, #0
 8001656:	4618      	mov	r0, r3
 8001658:	3708      	adds	r7, #8
 800165a:	46bd      	mov	sp, r7
 800165c:	bd80      	pop	{r7, pc}
 800165e:	bf00      	nop
 8001660:	e000e010 	.word	0xe000e010

08001664 <HAL_NVIC_SetPriorityGrouping>:
 8001664:	b580      	push	{r7, lr}
 8001666:	b082      	sub	sp, #8
 8001668:	af00      	add	r7, sp, #0
 800166a:	6078      	str	r0, [r7, #4]
 800166c:	6878      	ldr	r0, [r7, #4]
 800166e:	f7ff ff2d 	bl	80014cc <__NVIC_SetPriorityGrouping>
 8001672:	bf00      	nop
 8001674:	3708      	adds	r7, #8
 8001676:	46bd      	mov	sp, r7
 8001678:	bd80      	pop	{r7, pc}

0800167a <HAL_NVIC_SetPriority>:
 800167a:	b580      	push	{r7, lr}
 800167c:	b086      	sub	sp, #24
 800167e:	af00      	add	r7, sp, #0
 8001680:	4603      	mov	r3, r0
 8001682:	60b9      	str	r1, [r7, #8]
 8001684:	607a      	str	r2, [r7, #4]
 8001686:	73fb      	strb	r3, [r7, #15]
 8001688:	2300      	movs	r3, #0
 800168a:	617b      	str	r3, [r7, #20]
 800168c:	f7ff ff42 	bl	8001514 <__NVIC_GetPriorityGrouping>
 8001690:	6178      	str	r0, [r7, #20]
 8001692:	687a      	ldr	r2, [r7, #4]
 8001694:	68b9      	ldr	r1, [r7, #8]
 8001696:	6978      	ldr	r0, [r7, #20]
 8001698:	f7ff ff90 	bl	80015bc <NVIC_EncodePriority>
 800169c:	4602      	mov	r2, r0
 800169e:	f997 300f 	ldrsb.w	r3, [r7, #15]
 80016a2:	4611      	mov	r1, r2
 80016a4:	4618      	mov	r0, r3
 80016a6:	f7ff ff5f 	bl	8001568 <__NVIC_SetPriority>
 80016aa:	bf00      	nop
 80016ac:	3718      	adds	r7, #24
 80016ae:	46bd      	mov	sp, r7
 80016b0:	bd80      	pop	{r7, pc}

080016b2 <HAL_NVIC_EnableIRQ>:
 80016b2:	b580      	push	{r7, lr}
 80016b4:	b082      	sub	sp, #8
 80016b6:	af00      	add	r7, sp, #0
 80016b8:	4603      	mov	r3, r0
 80016ba:	71fb      	strb	r3, [r7, #7]
 80016bc:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80016c0:	4618      	mov	r0, r3
 80016c2:	f7ff ff35 	bl	8001530 <__NVIC_EnableIRQ>
 80016c6:	bf00      	nop
 80016c8:	3708      	adds	r7, #8
 80016ca:	46bd      	mov	sp, r7
 80016cc:	bd80      	pop	{r7, pc}

080016ce <HAL_SYSTICK_Config>:
 80016ce:	b580      	push	{r7, lr}
 80016d0:	b082      	sub	sp, #8
 80016d2:	af00      	add	r7, sp, #0
 80016d4:	6078      	str	r0, [r7, #4]
 80016d6:	6878      	ldr	r0, [r7, #4]
 80016d8:	f7ff ffa2 	bl	8001620 <SysTick_Config>
 80016dc:	4603      	mov	r3, r0
 80016de:	4618      	mov	r0, r3
 80016e0:	3708      	adds	r7, #8
 80016e2:	46bd      	mov	sp, r7
 80016e4:	bd80      	pop	{r7, pc}
	...

080016e8 <HAL_GPIO_Init>:
 80016e8:	b480      	push	{r7}
 80016ea:	b08b      	sub	sp, #44	; 0x2c
 80016ec:	af00      	add	r7, sp, #0
 80016ee:	6078      	str	r0, [r7, #4]
 80016f0:	6039      	str	r1, [r7, #0]
 80016f2:	2300      	movs	r3, #0
 80016f4:	627b      	str	r3, [r7, #36]	; 0x24
 80016f6:	2300      	movs	r3, #0
 80016f8:	623b      	str	r3, [r7, #32]
 80016fa:	e148      	b.n	800198e <HAL_GPIO_Init+0x2a6>
 80016fc:	2201      	movs	r2, #1
 80016fe:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001700:	fa02 f303 	lsl.w	r3, r2, r3
 8001704:	61fb      	str	r3, [r7, #28]
 8001706:	683b      	ldr	r3, [r7, #0]
 8001708:	681b      	ldr	r3, [r3, #0]
 800170a:	69fa      	ldr	r2, [r7, #28]
 800170c:	4013      	ands	r3, r2
 800170e:	61bb      	str	r3, [r7, #24]
 8001710:	69ba      	ldr	r2, [r7, #24]
 8001712:	69fb      	ldr	r3, [r7, #28]
 8001714:	429a      	cmp	r2, r3
 8001716:	f040 8137 	bne.w	8001988 <HAL_GPIO_Init+0x2a0>
 800171a:	683b      	ldr	r3, [r7, #0]
 800171c:	685b      	ldr	r3, [r3, #4]
 800171e:	4aa3      	ldr	r2, [pc, #652]	; (80019ac <HAL_GPIO_Init+0x2c4>)
 8001720:	4293      	cmp	r3, r2
 8001722:	d05e      	beq.n	80017e2 <HAL_GPIO_Init+0xfa>
 8001724:	4aa1      	ldr	r2, [pc, #644]	; (80019ac <HAL_GPIO_Init+0x2c4>)
 8001726:	4293      	cmp	r3, r2
 8001728:	d875      	bhi.n	8001816 <HAL_GPIO_Init+0x12e>
 800172a:	4aa1      	ldr	r2, [pc, #644]	; (80019b0 <HAL_GPIO_Init+0x2c8>)
 800172c:	4293      	cmp	r3, r2
 800172e:	d058      	beq.n	80017e2 <HAL_GPIO_Init+0xfa>
 8001730:	4a9f      	ldr	r2, [pc, #636]	; (80019b0 <HAL_GPIO_Init+0x2c8>)
 8001732:	4293      	cmp	r3, r2
 8001734:	d86f      	bhi.n	8001816 <HAL_GPIO_Init+0x12e>
 8001736:	4a9f      	ldr	r2, [pc, #636]	; (80019b4 <HAL_GPIO_Init+0x2cc>)
 8001738:	4293      	cmp	r3, r2
 800173a:	d052      	beq.n	80017e2 <HAL_GPIO_Init+0xfa>
 800173c:	4a9d      	ldr	r2, [pc, #628]	; (80019b4 <HAL_GPIO_Init+0x2cc>)
 800173e:	4293      	cmp	r3, r2
 8001740:	d869      	bhi.n	8001816 <HAL_GPIO_Init+0x12e>
 8001742:	4a9d      	ldr	r2, [pc, #628]	; (80019b8 <HAL_GPIO_Init+0x2d0>)
 8001744:	4293      	cmp	r3, r2
 8001746:	d04c      	beq.n	80017e2 <HAL_GPIO_Init+0xfa>
 8001748:	4a9b      	ldr	r2, [pc, #620]	; (80019b8 <HAL_GPIO_Init+0x2d0>)
 800174a:	4293      	cmp	r3, r2
 800174c:	d863      	bhi.n	8001816 <HAL_GPIO_Init+0x12e>
 800174e:	4a9b      	ldr	r2, [pc, #620]	; (80019bc <HAL_GPIO_Init+0x2d4>)
 8001750:	4293      	cmp	r3, r2
 8001752:	d046      	beq.n	80017e2 <HAL_GPIO_Init+0xfa>
 8001754:	4a99      	ldr	r2, [pc, #612]	; (80019bc <HAL_GPIO_Init+0x2d4>)
 8001756:	4293      	cmp	r3, r2
 8001758:	d85d      	bhi.n	8001816 <HAL_GPIO_Init+0x12e>
 800175a:	2b12      	cmp	r3, #18
 800175c:	d82a      	bhi.n	80017b4 <HAL_GPIO_Init+0xcc>
 800175e:	2b12      	cmp	r3, #18
 8001760:	d859      	bhi.n	8001816 <HAL_GPIO_Init+0x12e>
 8001762:	a201      	add	r2, pc, #4	; (adr r2, 8001768 <HAL_GPIO_Init+0x80>)
 8001764:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8001768:	080017e3 	.word	0x080017e3
 800176c:	080017bd 	.word	0x080017bd
 8001770:	080017cf 	.word	0x080017cf
 8001774:	08001811 	.word	0x08001811
 8001778:	08001817 	.word	0x08001817
 800177c:	08001817 	.word	0x08001817
 8001780:	08001817 	.word	0x08001817
 8001784:	08001817 	.word	0x08001817
 8001788:	08001817 	.word	0x08001817
 800178c:	08001817 	.word	0x08001817
 8001790:	08001817 	.word	0x08001817
 8001794:	08001817 	.word	0x08001817
 8001798:	08001817 	.word	0x08001817
 800179c:	08001817 	.word	0x08001817
 80017a0:	08001817 	.word	0x08001817
 80017a4:	08001817 	.word	0x08001817
 80017a8:	08001817 	.word	0x08001817
 80017ac:	080017c5 	.word	0x080017c5
 80017b0:	080017d9 	.word	0x080017d9
 80017b4:	4a82      	ldr	r2, [pc, #520]	; (80019c0 <HAL_GPIO_Init+0x2d8>)
 80017b6:	4293      	cmp	r3, r2
 80017b8:	d013      	beq.n	80017e2 <HAL_GPIO_Init+0xfa>
 80017ba:	e02c      	b.n	8001816 <HAL_GPIO_Init+0x12e>
 80017bc:	683b      	ldr	r3, [r7, #0]
 80017be:	68db      	ldr	r3, [r3, #12]
 80017c0:	623b      	str	r3, [r7, #32]
 80017c2:	e029      	b.n	8001818 <HAL_GPIO_Init+0x130>
 80017c4:	683b      	ldr	r3, [r7, #0]
 80017c6:	68db      	ldr	r3, [r3, #12]
 80017c8:	3304      	adds	r3, #4
 80017ca:	623b      	str	r3, [r7, #32]
 80017cc:	e024      	b.n	8001818 <HAL_GPIO_Init+0x130>
 80017ce:	683b      	ldr	r3, [r7, #0]
 80017d0:	68db      	ldr	r3, [r3, #12]
 80017d2:	3308      	adds	r3, #8
 80017d4:	623b      	str	r3, [r7, #32]
 80017d6:	e01f      	b.n	8001818 <HAL_GPIO_Init+0x130>
 80017d8:	683b      	ldr	r3, [r7, #0]
 80017da:	68db      	ldr	r3, [r3, #12]
 80017dc:	330c      	adds	r3, #12
 80017de:	623b      	str	r3, [r7, #32]
 80017e0:	e01a      	b.n	8001818 <HAL_GPIO_Init+0x130>
 80017e2:	683b      	ldr	r3, [r7, #0]
 80017e4:	689b      	ldr	r3, [r3, #8]
 80017e6:	2b00      	cmp	r3, #0
 80017e8:	d102      	bne.n	80017f0 <HAL_GPIO_Init+0x108>
 80017ea:	2304      	movs	r3, #4
 80017ec:	623b      	str	r3, [r7, #32]
 80017ee:	e013      	b.n	8001818 <HAL_GPIO_Init+0x130>
 80017f0:	683b      	ldr	r3, [r7, #0]
 80017f2:	689b      	ldr	r3, [r3, #8]
 80017f4:	2b01      	cmp	r3, #1
 80017f6:	d105      	bne.n	8001804 <HAL_GPIO_Init+0x11c>
 80017f8:	2308      	movs	r3, #8
 80017fa:	623b      	str	r3, [r7, #32]
 80017fc:	687b      	ldr	r3, [r7, #4]
 80017fe:	69fa      	ldr	r2, [r7, #28]
 8001800:	611a      	str	r2, [r3, #16]
 8001802:	e009      	b.n	8001818 <HAL_GPIO_Init+0x130>
 8001804:	2308      	movs	r3, #8
 8001806:	623b      	str	r3, [r7, #32]
 8001808:	687b      	ldr	r3, [r7, #4]
 800180a:	69fa      	ldr	r2, [r7, #28]
 800180c:	615a      	str	r2, [r3, #20]
 800180e:	e003      	b.n	8001818 <HAL_GPIO_Init+0x130>
 8001810:	2300      	movs	r3, #0
 8001812:	623b      	str	r3, [r7, #32]
 8001814:	e000      	b.n	8001818 <HAL_GPIO_Init+0x130>
 8001816:	bf00      	nop
 8001818:	69bb      	ldr	r3, [r7, #24]
 800181a:	2bff      	cmp	r3, #255	; 0xff
 800181c:	d801      	bhi.n	8001822 <HAL_GPIO_Init+0x13a>
 800181e:	687b      	ldr	r3, [r7, #4]
 8001820:	e001      	b.n	8001826 <HAL_GPIO_Init+0x13e>
 8001822:	687b      	ldr	r3, [r7, #4]
 8001824:	3304      	adds	r3, #4
 8001826:	617b      	str	r3, [r7, #20]
 8001828:	69bb      	ldr	r3, [r7, #24]
 800182a:	2bff      	cmp	r3, #255	; 0xff
 800182c:	d802      	bhi.n	8001834 <HAL_GPIO_Init+0x14c>
 800182e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001830:	009b      	lsls	r3, r3, #2
 8001832:	e002      	b.n	800183a <HAL_GPIO_Init+0x152>
 8001834:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001836:	3b08      	subs	r3, #8
 8001838:	009b      	lsls	r3, r3, #2
 800183a:	613b      	str	r3, [r7, #16]
 800183c:	697b      	ldr	r3, [r7, #20]
 800183e:	681a      	ldr	r2, [r3, #0]
 8001840:	210f      	movs	r1, #15
 8001842:	693b      	ldr	r3, [r7, #16]
 8001844:	fa01 f303 	lsl.w	r3, r1, r3
 8001848:	43db      	mvns	r3, r3
 800184a:	401a      	ands	r2, r3
 800184c:	6a39      	ldr	r1, [r7, #32]
 800184e:	693b      	ldr	r3, [r7, #16]
 8001850:	fa01 f303 	lsl.w	r3, r1, r3
 8001854:	431a      	orrs	r2, r3
 8001856:	697b      	ldr	r3, [r7, #20]
 8001858:	601a      	str	r2, [r3, #0]
 800185a:	683b      	ldr	r3, [r7, #0]
 800185c:	685b      	ldr	r3, [r3, #4]
 800185e:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8001862:	2b00      	cmp	r3, #0
 8001864:	f000 8090 	beq.w	8001988 <HAL_GPIO_Init+0x2a0>
 8001868:	4b56      	ldr	r3, [pc, #344]	; (80019c4 <HAL_GPIO_Init+0x2dc>)
 800186a:	699b      	ldr	r3, [r3, #24]
 800186c:	4a55      	ldr	r2, [pc, #340]	; (80019c4 <HAL_GPIO_Init+0x2dc>)
 800186e:	f043 0301 	orr.w	r3, r3, #1
 8001872:	6193      	str	r3, [r2, #24]
 8001874:	4b53      	ldr	r3, [pc, #332]	; (80019c4 <HAL_GPIO_Init+0x2dc>)
 8001876:	699b      	ldr	r3, [r3, #24]
 8001878:	f003 0301 	and.w	r3, r3, #1
 800187c:	60bb      	str	r3, [r7, #8]
 800187e:	68bb      	ldr	r3, [r7, #8]
 8001880:	4a51      	ldr	r2, [pc, #324]	; (80019c8 <HAL_GPIO_Init+0x2e0>)
 8001882:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001884:	089b      	lsrs	r3, r3, #2
 8001886:	3302      	adds	r3, #2
 8001888:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 800188c:	60fb      	str	r3, [r7, #12]
 800188e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001890:	f003 0303 	and.w	r3, r3, #3
 8001894:	009b      	lsls	r3, r3, #2
 8001896:	220f      	movs	r2, #15
 8001898:	fa02 f303 	lsl.w	r3, r2, r3
 800189c:	43db      	mvns	r3, r3
 800189e:	68fa      	ldr	r2, [r7, #12]
 80018a0:	4013      	ands	r3, r2
 80018a2:	60fb      	str	r3, [r7, #12]
 80018a4:	687b      	ldr	r3, [r7, #4]
 80018a6:	4a49      	ldr	r2, [pc, #292]	; (80019cc <HAL_GPIO_Init+0x2e4>)
 80018a8:	4293      	cmp	r3, r2
 80018aa:	d00d      	beq.n	80018c8 <HAL_GPIO_Init+0x1e0>
 80018ac:	687b      	ldr	r3, [r7, #4]
 80018ae:	4a48      	ldr	r2, [pc, #288]	; (80019d0 <HAL_GPIO_Init+0x2e8>)
 80018b0:	4293      	cmp	r3, r2
 80018b2:	d007      	beq.n	80018c4 <HAL_GPIO_Init+0x1dc>
 80018b4:	687b      	ldr	r3, [r7, #4]
 80018b6:	4a47      	ldr	r2, [pc, #284]	; (80019d4 <HAL_GPIO_Init+0x2ec>)
 80018b8:	4293      	cmp	r3, r2
 80018ba:	d101      	bne.n	80018c0 <HAL_GPIO_Init+0x1d8>
 80018bc:	2302      	movs	r3, #2
 80018be:	e004      	b.n	80018ca <HAL_GPIO_Init+0x1e2>
 80018c0:	2303      	movs	r3, #3
 80018c2:	e002      	b.n	80018ca <HAL_GPIO_Init+0x1e2>
 80018c4:	2301      	movs	r3, #1
 80018c6:	e000      	b.n	80018ca <HAL_GPIO_Init+0x1e2>
 80018c8:	2300      	movs	r3, #0
 80018ca:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 80018cc:	f002 0203 	and.w	r2, r2, #3
 80018d0:	0092      	lsls	r2, r2, #2
 80018d2:	4093      	lsls	r3, r2
 80018d4:	68fa      	ldr	r2, [r7, #12]
 80018d6:	4313      	orrs	r3, r2
 80018d8:	60fb      	str	r3, [r7, #12]
 80018da:	493b      	ldr	r1, [pc, #236]	; (80019c8 <HAL_GPIO_Init+0x2e0>)
 80018dc:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80018de:	089b      	lsrs	r3, r3, #2
 80018e0:	3302      	adds	r3, #2
 80018e2:	68fa      	ldr	r2, [r7, #12]
 80018e4:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 80018e8:	683b      	ldr	r3, [r7, #0]
 80018ea:	685b      	ldr	r3, [r3, #4]
 80018ec:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 80018f0:	2b00      	cmp	r3, #0
 80018f2:	d006      	beq.n	8001902 <HAL_GPIO_Init+0x21a>
 80018f4:	4b38      	ldr	r3, [pc, #224]	; (80019d8 <HAL_GPIO_Init+0x2f0>)
 80018f6:	681a      	ldr	r2, [r3, #0]
 80018f8:	4937      	ldr	r1, [pc, #220]	; (80019d8 <HAL_GPIO_Init+0x2f0>)
 80018fa:	69bb      	ldr	r3, [r7, #24]
 80018fc:	4313      	orrs	r3, r2
 80018fe:	600b      	str	r3, [r1, #0]
 8001900:	e006      	b.n	8001910 <HAL_GPIO_Init+0x228>
 8001902:	4b35      	ldr	r3, [pc, #212]	; (80019d8 <HAL_GPIO_Init+0x2f0>)
 8001904:	681a      	ldr	r2, [r3, #0]
 8001906:	69bb      	ldr	r3, [r7, #24]
 8001908:	43db      	mvns	r3, r3
 800190a:	4933      	ldr	r1, [pc, #204]	; (80019d8 <HAL_GPIO_Init+0x2f0>)
 800190c:	4013      	ands	r3, r2
 800190e:	600b      	str	r3, [r1, #0]
 8001910:	683b      	ldr	r3, [r7, #0]
 8001912:	685b      	ldr	r3, [r3, #4]
 8001914:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8001918:	2b00      	cmp	r3, #0
 800191a:	d006      	beq.n	800192a <HAL_GPIO_Init+0x242>
 800191c:	4b2e      	ldr	r3, [pc, #184]	; (80019d8 <HAL_GPIO_Init+0x2f0>)
 800191e:	685a      	ldr	r2, [r3, #4]
 8001920:	492d      	ldr	r1, [pc, #180]	; (80019d8 <HAL_GPIO_Init+0x2f0>)
 8001922:	69bb      	ldr	r3, [r7, #24]
 8001924:	4313      	orrs	r3, r2
 8001926:	604b      	str	r3, [r1, #4]
 8001928:	e006      	b.n	8001938 <HAL_GPIO_Init+0x250>
 800192a:	4b2b      	ldr	r3, [pc, #172]	; (80019d8 <HAL_GPIO_Init+0x2f0>)
 800192c:	685a      	ldr	r2, [r3, #4]
 800192e:	69bb      	ldr	r3, [r7, #24]
 8001930:	43db      	mvns	r3, r3
 8001932:	4929      	ldr	r1, [pc, #164]	; (80019d8 <HAL_GPIO_Init+0x2f0>)
 8001934:	4013      	ands	r3, r2
 8001936:	604b      	str	r3, [r1, #4]
 8001938:	683b      	ldr	r3, [r7, #0]
 800193a:	685b      	ldr	r3, [r3, #4]
 800193c:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 8001940:	2b00      	cmp	r3, #0
 8001942:	d006      	beq.n	8001952 <HAL_GPIO_Init+0x26a>
 8001944:	4b24      	ldr	r3, [pc, #144]	; (80019d8 <HAL_GPIO_Init+0x2f0>)
 8001946:	689a      	ldr	r2, [r3, #8]
 8001948:	4923      	ldr	r1, [pc, #140]	; (80019d8 <HAL_GPIO_Init+0x2f0>)
 800194a:	69bb      	ldr	r3, [r7, #24]
 800194c:	4313      	orrs	r3, r2
 800194e:	608b      	str	r3, [r1, #8]
 8001950:	e006      	b.n	8001960 <HAL_GPIO_Init+0x278>
 8001952:	4b21      	ldr	r3, [pc, #132]	; (80019d8 <HAL_GPIO_Init+0x2f0>)
 8001954:	689a      	ldr	r2, [r3, #8]
 8001956:	69bb      	ldr	r3, [r7, #24]
 8001958:	43db      	mvns	r3, r3
 800195a:	491f      	ldr	r1, [pc, #124]	; (80019d8 <HAL_GPIO_Init+0x2f0>)
 800195c:	4013      	ands	r3, r2
 800195e:	608b      	str	r3, [r1, #8]
 8001960:	683b      	ldr	r3, [r7, #0]
 8001962:	685b      	ldr	r3, [r3, #4]
 8001964:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 8001968:	2b00      	cmp	r3, #0
 800196a:	d006      	beq.n	800197a <HAL_GPIO_Init+0x292>
 800196c:	4b1a      	ldr	r3, [pc, #104]	; (80019d8 <HAL_GPIO_Init+0x2f0>)
 800196e:	68da      	ldr	r2, [r3, #12]
 8001970:	4919      	ldr	r1, [pc, #100]	; (80019d8 <HAL_GPIO_Init+0x2f0>)
 8001972:	69bb      	ldr	r3, [r7, #24]
 8001974:	4313      	orrs	r3, r2
 8001976:	60cb      	str	r3, [r1, #12]
 8001978:	e006      	b.n	8001988 <HAL_GPIO_Init+0x2a0>
 800197a:	4b17      	ldr	r3, [pc, #92]	; (80019d8 <HAL_GPIO_Init+0x2f0>)
 800197c:	68da      	ldr	r2, [r3, #12]
 800197e:	69bb      	ldr	r3, [r7, #24]
 8001980:	43db      	mvns	r3, r3
 8001982:	4915      	ldr	r1, [pc, #84]	; (80019d8 <HAL_GPIO_Init+0x2f0>)
 8001984:	4013      	ands	r3, r2
 8001986:	60cb      	str	r3, [r1, #12]
 8001988:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800198a:	3301      	adds	r3, #1
 800198c:	627b      	str	r3, [r7, #36]	; 0x24
 800198e:	683b      	ldr	r3, [r7, #0]
 8001990:	681a      	ldr	r2, [r3, #0]
 8001992:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001994:	fa22 f303 	lsr.w	r3, r2, r3
 8001998:	2b00      	cmp	r3, #0
 800199a:	f47f aeaf 	bne.w	80016fc <HAL_GPIO_Init+0x14>
 800199e:	bf00      	nop
 80019a0:	bf00      	nop
 80019a2:	372c      	adds	r7, #44	; 0x2c
 80019a4:	46bd      	mov	sp, r7
 80019a6:	bc80      	pop	{r7}
 80019a8:	4770      	bx	lr
 80019aa:	bf00      	nop
 80019ac:	10320000 	.word	0x10320000
 80019b0:	10310000 	.word	0x10310000
 80019b4:	10220000 	.word	0x10220000
 80019b8:	10210000 	.word	0x10210000
 80019bc:	10120000 	.word	0x10120000
 80019c0:	10110000 	.word	0x10110000
 80019c4:	40021000 	.word	0x40021000
 80019c8:	40010000 	.word	0x40010000
 80019cc:	40010800 	.word	0x40010800
 80019d0:	40010c00 	.word	0x40010c00
 80019d4:	40011000 	.word	0x40011000
 80019d8:	40010400 	.word	0x40010400

080019dc <HAL_GPIO_ReadPin>:
 80019dc:	b480      	push	{r7}
 80019de:	b085      	sub	sp, #20
 80019e0:	af00      	add	r7, sp, #0
 80019e2:	6078      	str	r0, [r7, #4]
 80019e4:	460b      	mov	r3, r1
 80019e6:	807b      	strh	r3, [r7, #2]
 80019e8:	687b      	ldr	r3, [r7, #4]
 80019ea:	689a      	ldr	r2, [r3, #8]
 80019ec:	887b      	ldrh	r3, [r7, #2]
 80019ee:	4013      	ands	r3, r2
 80019f0:	2b00      	cmp	r3, #0
 80019f2:	d002      	beq.n	80019fa <HAL_GPIO_ReadPin+0x1e>
 80019f4:	2301      	movs	r3, #1
 80019f6:	73fb      	strb	r3, [r7, #15]
 80019f8:	e001      	b.n	80019fe <HAL_GPIO_ReadPin+0x22>
 80019fa:	2300      	movs	r3, #0
 80019fc:	73fb      	strb	r3, [r7, #15]
 80019fe:	7bfb      	ldrb	r3, [r7, #15]
 8001a00:	4618      	mov	r0, r3
 8001a02:	3714      	adds	r7, #20
 8001a04:	46bd      	mov	sp, r7
 8001a06:	bc80      	pop	{r7}
 8001a08:	4770      	bx	lr

08001a0a <HAL_GPIO_WritePin>:
 8001a0a:	b480      	push	{r7}
 8001a0c:	b083      	sub	sp, #12
 8001a0e:	af00      	add	r7, sp, #0
 8001a10:	6078      	str	r0, [r7, #4]
 8001a12:	460b      	mov	r3, r1
 8001a14:	807b      	strh	r3, [r7, #2]
 8001a16:	4613      	mov	r3, r2
 8001a18:	707b      	strb	r3, [r7, #1]
 8001a1a:	787b      	ldrb	r3, [r7, #1]
 8001a1c:	2b00      	cmp	r3, #0
 8001a1e:	d003      	beq.n	8001a28 <HAL_GPIO_WritePin+0x1e>
 8001a20:	887a      	ldrh	r2, [r7, #2]
 8001a22:	687b      	ldr	r3, [r7, #4]
 8001a24:	611a      	str	r2, [r3, #16]
 8001a26:	e003      	b.n	8001a30 <HAL_GPIO_WritePin+0x26>
 8001a28:	887b      	ldrh	r3, [r7, #2]
 8001a2a:	041a      	lsls	r2, r3, #16
 8001a2c:	687b      	ldr	r3, [r7, #4]
 8001a2e:	611a      	str	r2, [r3, #16]
 8001a30:	bf00      	nop
 8001a32:	370c      	adds	r7, #12
 8001a34:	46bd      	mov	sp, r7
 8001a36:	bc80      	pop	{r7}
 8001a38:	4770      	bx	lr
	...

08001a3c <HAL_RCC_OscConfig>:
 8001a3c:	b580      	push	{r7, lr}
 8001a3e:	b086      	sub	sp, #24
 8001a40:	af00      	add	r7, sp, #0
 8001a42:	6078      	str	r0, [r7, #4]
 8001a44:	687b      	ldr	r3, [r7, #4]
 8001a46:	2b00      	cmp	r3, #0
 8001a48:	d101      	bne.n	8001a4e <HAL_RCC_OscConfig+0x12>
 8001a4a:	2301      	movs	r3, #1
 8001a4c:	e26c      	b.n	8001f28 <HAL_RCC_OscConfig+0x4ec>
 8001a4e:	687b      	ldr	r3, [r7, #4]
 8001a50:	681b      	ldr	r3, [r3, #0]
 8001a52:	f003 0301 	and.w	r3, r3, #1
 8001a56:	2b00      	cmp	r3, #0
 8001a58:	f000 8087 	beq.w	8001b6a <HAL_RCC_OscConfig+0x12e>
 8001a5c:	4b92      	ldr	r3, [pc, #584]	; (8001ca8 <HAL_RCC_OscConfig+0x26c>)
 8001a5e:	685b      	ldr	r3, [r3, #4]
 8001a60:	f003 030c 	and.w	r3, r3, #12
 8001a64:	2b04      	cmp	r3, #4
 8001a66:	d00c      	beq.n	8001a82 <HAL_RCC_OscConfig+0x46>
 8001a68:	4b8f      	ldr	r3, [pc, #572]	; (8001ca8 <HAL_RCC_OscConfig+0x26c>)
 8001a6a:	685b      	ldr	r3, [r3, #4]
 8001a6c:	f003 030c 	and.w	r3, r3, #12
 8001a70:	2b08      	cmp	r3, #8
 8001a72:	d112      	bne.n	8001a9a <HAL_RCC_OscConfig+0x5e>
 8001a74:	4b8c      	ldr	r3, [pc, #560]	; (8001ca8 <HAL_RCC_OscConfig+0x26c>)
 8001a76:	685b      	ldr	r3, [r3, #4]
 8001a78:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8001a7c:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8001a80:	d10b      	bne.n	8001a9a <HAL_RCC_OscConfig+0x5e>
 8001a82:	4b89      	ldr	r3, [pc, #548]	; (8001ca8 <HAL_RCC_OscConfig+0x26c>)
 8001a84:	681b      	ldr	r3, [r3, #0]
 8001a86:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8001a8a:	2b00      	cmp	r3, #0
 8001a8c:	d06c      	beq.n	8001b68 <HAL_RCC_OscConfig+0x12c>
 8001a8e:	687b      	ldr	r3, [r7, #4]
 8001a90:	685b      	ldr	r3, [r3, #4]
 8001a92:	2b00      	cmp	r3, #0
 8001a94:	d168      	bne.n	8001b68 <HAL_RCC_OscConfig+0x12c>
 8001a96:	2301      	movs	r3, #1
 8001a98:	e246      	b.n	8001f28 <HAL_RCC_OscConfig+0x4ec>
 8001a9a:	687b      	ldr	r3, [r7, #4]
 8001a9c:	685b      	ldr	r3, [r3, #4]
 8001a9e:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8001aa2:	d106      	bne.n	8001ab2 <HAL_RCC_OscConfig+0x76>
 8001aa4:	4b80      	ldr	r3, [pc, #512]	; (8001ca8 <HAL_RCC_OscConfig+0x26c>)
 8001aa6:	681b      	ldr	r3, [r3, #0]
 8001aa8:	4a7f      	ldr	r2, [pc, #508]	; (8001ca8 <HAL_RCC_OscConfig+0x26c>)
 8001aaa:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8001aae:	6013      	str	r3, [r2, #0]
 8001ab0:	e02e      	b.n	8001b10 <HAL_RCC_OscConfig+0xd4>
 8001ab2:	687b      	ldr	r3, [r7, #4]
 8001ab4:	685b      	ldr	r3, [r3, #4]
 8001ab6:	2b00      	cmp	r3, #0
 8001ab8:	d10c      	bne.n	8001ad4 <HAL_RCC_OscConfig+0x98>
 8001aba:	4b7b      	ldr	r3, [pc, #492]	; (8001ca8 <HAL_RCC_OscConfig+0x26c>)
 8001abc:	681b      	ldr	r3, [r3, #0]
 8001abe:	4a7a      	ldr	r2, [pc, #488]	; (8001ca8 <HAL_RCC_OscConfig+0x26c>)
 8001ac0:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8001ac4:	6013      	str	r3, [r2, #0]
 8001ac6:	4b78      	ldr	r3, [pc, #480]	; (8001ca8 <HAL_RCC_OscConfig+0x26c>)
 8001ac8:	681b      	ldr	r3, [r3, #0]
 8001aca:	4a77      	ldr	r2, [pc, #476]	; (8001ca8 <HAL_RCC_OscConfig+0x26c>)
 8001acc:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8001ad0:	6013      	str	r3, [r2, #0]
 8001ad2:	e01d      	b.n	8001b10 <HAL_RCC_OscConfig+0xd4>
 8001ad4:	687b      	ldr	r3, [r7, #4]
 8001ad6:	685b      	ldr	r3, [r3, #4]
 8001ad8:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 8001adc:	d10c      	bne.n	8001af8 <HAL_RCC_OscConfig+0xbc>
 8001ade:	4b72      	ldr	r3, [pc, #456]	; (8001ca8 <HAL_RCC_OscConfig+0x26c>)
 8001ae0:	681b      	ldr	r3, [r3, #0]
 8001ae2:	4a71      	ldr	r2, [pc, #452]	; (8001ca8 <HAL_RCC_OscConfig+0x26c>)
 8001ae4:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 8001ae8:	6013      	str	r3, [r2, #0]
 8001aea:	4b6f      	ldr	r3, [pc, #444]	; (8001ca8 <HAL_RCC_OscConfig+0x26c>)
 8001aec:	681b      	ldr	r3, [r3, #0]
 8001aee:	4a6e      	ldr	r2, [pc, #440]	; (8001ca8 <HAL_RCC_OscConfig+0x26c>)
 8001af0:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8001af4:	6013      	str	r3, [r2, #0]
 8001af6:	e00b      	b.n	8001b10 <HAL_RCC_OscConfig+0xd4>
 8001af8:	4b6b      	ldr	r3, [pc, #428]	; (8001ca8 <HAL_RCC_OscConfig+0x26c>)
 8001afa:	681b      	ldr	r3, [r3, #0]
 8001afc:	4a6a      	ldr	r2, [pc, #424]	; (8001ca8 <HAL_RCC_OscConfig+0x26c>)
 8001afe:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8001b02:	6013      	str	r3, [r2, #0]
 8001b04:	4b68      	ldr	r3, [pc, #416]	; (8001ca8 <HAL_RCC_OscConfig+0x26c>)
 8001b06:	681b      	ldr	r3, [r3, #0]
 8001b08:	4a67      	ldr	r2, [pc, #412]	; (8001ca8 <HAL_RCC_OscConfig+0x26c>)
 8001b0a:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8001b0e:	6013      	str	r3, [r2, #0]
 8001b10:	687b      	ldr	r3, [r7, #4]
 8001b12:	685b      	ldr	r3, [r3, #4]
 8001b14:	2b00      	cmp	r3, #0
 8001b16:	d013      	beq.n	8001b40 <HAL_RCC_OscConfig+0x104>
 8001b18:	f7ff fcce 	bl	80014b8 <HAL_GetTick>
 8001b1c:	6138      	str	r0, [r7, #16]
 8001b1e:	e008      	b.n	8001b32 <HAL_RCC_OscConfig+0xf6>
 8001b20:	f7ff fcca 	bl	80014b8 <HAL_GetTick>
 8001b24:	4602      	mov	r2, r0
 8001b26:	693b      	ldr	r3, [r7, #16]
 8001b28:	1ad3      	subs	r3, r2, r3
 8001b2a:	2b64      	cmp	r3, #100	; 0x64
 8001b2c:	d901      	bls.n	8001b32 <HAL_RCC_OscConfig+0xf6>
 8001b2e:	2303      	movs	r3, #3
 8001b30:	e1fa      	b.n	8001f28 <HAL_RCC_OscConfig+0x4ec>
 8001b32:	4b5d      	ldr	r3, [pc, #372]	; (8001ca8 <HAL_RCC_OscConfig+0x26c>)
 8001b34:	681b      	ldr	r3, [r3, #0]
 8001b36:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8001b3a:	2b00      	cmp	r3, #0
 8001b3c:	d0f0      	beq.n	8001b20 <HAL_RCC_OscConfig+0xe4>
 8001b3e:	e014      	b.n	8001b6a <HAL_RCC_OscConfig+0x12e>
 8001b40:	f7ff fcba 	bl	80014b8 <HAL_GetTick>
 8001b44:	6138      	str	r0, [r7, #16]
 8001b46:	e008      	b.n	8001b5a <HAL_RCC_OscConfig+0x11e>
 8001b48:	f7ff fcb6 	bl	80014b8 <HAL_GetTick>
 8001b4c:	4602      	mov	r2, r0
 8001b4e:	693b      	ldr	r3, [r7, #16]
 8001b50:	1ad3      	subs	r3, r2, r3
 8001b52:	2b64      	cmp	r3, #100	; 0x64
 8001b54:	d901      	bls.n	8001b5a <HAL_RCC_OscConfig+0x11e>
 8001b56:	2303      	movs	r3, #3
 8001b58:	e1e6      	b.n	8001f28 <HAL_RCC_OscConfig+0x4ec>
 8001b5a:	4b53      	ldr	r3, [pc, #332]	; (8001ca8 <HAL_RCC_OscConfig+0x26c>)
 8001b5c:	681b      	ldr	r3, [r3, #0]
 8001b5e:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8001b62:	2b00      	cmp	r3, #0
 8001b64:	d1f0      	bne.n	8001b48 <HAL_RCC_OscConfig+0x10c>
 8001b66:	e000      	b.n	8001b6a <HAL_RCC_OscConfig+0x12e>
 8001b68:	bf00      	nop
 8001b6a:	687b      	ldr	r3, [r7, #4]
 8001b6c:	681b      	ldr	r3, [r3, #0]
 8001b6e:	f003 0302 	and.w	r3, r3, #2
 8001b72:	2b00      	cmp	r3, #0
 8001b74:	d063      	beq.n	8001c3e <HAL_RCC_OscConfig+0x202>
 8001b76:	4b4c      	ldr	r3, [pc, #304]	; (8001ca8 <HAL_RCC_OscConfig+0x26c>)
 8001b78:	685b      	ldr	r3, [r3, #4]
 8001b7a:	f003 030c 	and.w	r3, r3, #12
 8001b7e:	2b00      	cmp	r3, #0
 8001b80:	d00b      	beq.n	8001b9a <HAL_RCC_OscConfig+0x15e>
 8001b82:	4b49      	ldr	r3, [pc, #292]	; (8001ca8 <HAL_RCC_OscConfig+0x26c>)
 8001b84:	685b      	ldr	r3, [r3, #4]
 8001b86:	f003 030c 	and.w	r3, r3, #12
 8001b8a:	2b08      	cmp	r3, #8
 8001b8c:	d11c      	bne.n	8001bc8 <HAL_RCC_OscConfig+0x18c>
 8001b8e:	4b46      	ldr	r3, [pc, #280]	; (8001ca8 <HAL_RCC_OscConfig+0x26c>)
 8001b90:	685b      	ldr	r3, [r3, #4]
 8001b92:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8001b96:	2b00      	cmp	r3, #0
 8001b98:	d116      	bne.n	8001bc8 <HAL_RCC_OscConfig+0x18c>
 8001b9a:	4b43      	ldr	r3, [pc, #268]	; (8001ca8 <HAL_RCC_OscConfig+0x26c>)
 8001b9c:	681b      	ldr	r3, [r3, #0]
 8001b9e:	f003 0302 	and.w	r3, r3, #2
 8001ba2:	2b00      	cmp	r3, #0
 8001ba4:	d005      	beq.n	8001bb2 <HAL_RCC_OscConfig+0x176>
 8001ba6:	687b      	ldr	r3, [r7, #4]
 8001ba8:	691b      	ldr	r3, [r3, #16]
 8001baa:	2b01      	cmp	r3, #1
 8001bac:	d001      	beq.n	8001bb2 <HAL_RCC_OscConfig+0x176>
 8001bae:	2301      	movs	r3, #1
 8001bb0:	e1ba      	b.n	8001f28 <HAL_RCC_OscConfig+0x4ec>
 8001bb2:	4b3d      	ldr	r3, [pc, #244]	; (8001ca8 <HAL_RCC_OscConfig+0x26c>)
 8001bb4:	681b      	ldr	r3, [r3, #0]
 8001bb6:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 8001bba:	687b      	ldr	r3, [r7, #4]
 8001bbc:	695b      	ldr	r3, [r3, #20]
 8001bbe:	00db      	lsls	r3, r3, #3
 8001bc0:	4939      	ldr	r1, [pc, #228]	; (8001ca8 <HAL_RCC_OscConfig+0x26c>)
 8001bc2:	4313      	orrs	r3, r2
 8001bc4:	600b      	str	r3, [r1, #0]
 8001bc6:	e03a      	b.n	8001c3e <HAL_RCC_OscConfig+0x202>
 8001bc8:	687b      	ldr	r3, [r7, #4]
 8001bca:	691b      	ldr	r3, [r3, #16]
 8001bcc:	2b00      	cmp	r3, #0
 8001bce:	d020      	beq.n	8001c12 <HAL_RCC_OscConfig+0x1d6>
 8001bd0:	4b36      	ldr	r3, [pc, #216]	; (8001cac <HAL_RCC_OscConfig+0x270>)
 8001bd2:	2201      	movs	r2, #1
 8001bd4:	601a      	str	r2, [r3, #0]
 8001bd6:	f7ff fc6f 	bl	80014b8 <HAL_GetTick>
 8001bda:	6138      	str	r0, [r7, #16]
 8001bdc:	e008      	b.n	8001bf0 <HAL_RCC_OscConfig+0x1b4>
 8001bde:	f7ff fc6b 	bl	80014b8 <HAL_GetTick>
 8001be2:	4602      	mov	r2, r0
 8001be4:	693b      	ldr	r3, [r7, #16]
 8001be6:	1ad3      	subs	r3, r2, r3
 8001be8:	2b02      	cmp	r3, #2
 8001bea:	d901      	bls.n	8001bf0 <HAL_RCC_OscConfig+0x1b4>
 8001bec:	2303      	movs	r3, #3
 8001bee:	e19b      	b.n	8001f28 <HAL_RCC_OscConfig+0x4ec>
 8001bf0:	4b2d      	ldr	r3, [pc, #180]	; (8001ca8 <HAL_RCC_OscConfig+0x26c>)
 8001bf2:	681b      	ldr	r3, [r3, #0]
 8001bf4:	f003 0302 	and.w	r3, r3, #2
 8001bf8:	2b00      	cmp	r3, #0
 8001bfa:	d0f0      	beq.n	8001bde <HAL_RCC_OscConfig+0x1a2>
 8001bfc:	4b2a      	ldr	r3, [pc, #168]	; (8001ca8 <HAL_RCC_OscConfig+0x26c>)
 8001bfe:	681b      	ldr	r3, [r3, #0]
 8001c00:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 8001c04:	687b      	ldr	r3, [r7, #4]
 8001c06:	695b      	ldr	r3, [r3, #20]
 8001c08:	00db      	lsls	r3, r3, #3
 8001c0a:	4927      	ldr	r1, [pc, #156]	; (8001ca8 <HAL_RCC_OscConfig+0x26c>)
 8001c0c:	4313      	orrs	r3, r2
 8001c0e:	600b      	str	r3, [r1, #0]
 8001c10:	e015      	b.n	8001c3e <HAL_RCC_OscConfig+0x202>
 8001c12:	4b26      	ldr	r3, [pc, #152]	; (8001cac <HAL_RCC_OscConfig+0x270>)
 8001c14:	2200      	movs	r2, #0
 8001c16:	601a      	str	r2, [r3, #0]
 8001c18:	f7ff fc4e 	bl	80014b8 <HAL_GetTick>
 8001c1c:	6138      	str	r0, [r7, #16]
 8001c1e:	e008      	b.n	8001c32 <HAL_RCC_OscConfig+0x1f6>
 8001c20:	f7ff fc4a 	bl	80014b8 <HAL_GetTick>
 8001c24:	4602      	mov	r2, r0
 8001c26:	693b      	ldr	r3, [r7, #16]
 8001c28:	1ad3      	subs	r3, r2, r3
 8001c2a:	2b02      	cmp	r3, #2
 8001c2c:	d901      	bls.n	8001c32 <HAL_RCC_OscConfig+0x1f6>
 8001c2e:	2303      	movs	r3, #3
 8001c30:	e17a      	b.n	8001f28 <HAL_RCC_OscConfig+0x4ec>
 8001c32:	4b1d      	ldr	r3, [pc, #116]	; (8001ca8 <HAL_RCC_OscConfig+0x26c>)
 8001c34:	681b      	ldr	r3, [r3, #0]
 8001c36:	f003 0302 	and.w	r3, r3, #2
 8001c3a:	2b00      	cmp	r3, #0
 8001c3c:	d1f0      	bne.n	8001c20 <HAL_RCC_OscConfig+0x1e4>
 8001c3e:	687b      	ldr	r3, [r7, #4]
 8001c40:	681b      	ldr	r3, [r3, #0]
 8001c42:	f003 0308 	and.w	r3, r3, #8
 8001c46:	2b00      	cmp	r3, #0
 8001c48:	d03a      	beq.n	8001cc0 <HAL_RCC_OscConfig+0x284>
 8001c4a:	687b      	ldr	r3, [r7, #4]
 8001c4c:	699b      	ldr	r3, [r3, #24]
 8001c4e:	2b00      	cmp	r3, #0
 8001c50:	d019      	beq.n	8001c86 <HAL_RCC_OscConfig+0x24a>
 8001c52:	4b17      	ldr	r3, [pc, #92]	; (8001cb0 <HAL_RCC_OscConfig+0x274>)
 8001c54:	2201      	movs	r2, #1
 8001c56:	601a      	str	r2, [r3, #0]
 8001c58:	f7ff fc2e 	bl	80014b8 <HAL_GetTick>
 8001c5c:	6138      	str	r0, [r7, #16]
 8001c5e:	e008      	b.n	8001c72 <HAL_RCC_OscConfig+0x236>
 8001c60:	f7ff fc2a 	bl	80014b8 <HAL_GetTick>
 8001c64:	4602      	mov	r2, r0
 8001c66:	693b      	ldr	r3, [r7, #16]
 8001c68:	1ad3      	subs	r3, r2, r3
 8001c6a:	2b02      	cmp	r3, #2
 8001c6c:	d901      	bls.n	8001c72 <HAL_RCC_OscConfig+0x236>
 8001c6e:	2303      	movs	r3, #3
 8001c70:	e15a      	b.n	8001f28 <HAL_RCC_OscConfig+0x4ec>
 8001c72:	4b0d      	ldr	r3, [pc, #52]	; (8001ca8 <HAL_RCC_OscConfig+0x26c>)
 8001c74:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8001c76:	f003 0302 	and.w	r3, r3, #2
 8001c7a:	2b00      	cmp	r3, #0
 8001c7c:	d0f0      	beq.n	8001c60 <HAL_RCC_OscConfig+0x224>
 8001c7e:	2001      	movs	r0, #1
 8001c80:	f000 faa6 	bl	80021d0 <RCC_Delay>
 8001c84:	e01c      	b.n	8001cc0 <HAL_RCC_OscConfig+0x284>
 8001c86:	4b0a      	ldr	r3, [pc, #40]	; (8001cb0 <HAL_RCC_OscConfig+0x274>)
 8001c88:	2200      	movs	r2, #0
 8001c8a:	601a      	str	r2, [r3, #0]
 8001c8c:	f7ff fc14 	bl	80014b8 <HAL_GetTick>
 8001c90:	6138      	str	r0, [r7, #16]
 8001c92:	e00f      	b.n	8001cb4 <HAL_RCC_OscConfig+0x278>
 8001c94:	f7ff fc10 	bl	80014b8 <HAL_GetTick>
 8001c98:	4602      	mov	r2, r0
 8001c9a:	693b      	ldr	r3, [r7, #16]
 8001c9c:	1ad3      	subs	r3, r2, r3
 8001c9e:	2b02      	cmp	r3, #2
 8001ca0:	d908      	bls.n	8001cb4 <HAL_RCC_OscConfig+0x278>
 8001ca2:	2303      	movs	r3, #3
 8001ca4:	e140      	b.n	8001f28 <HAL_RCC_OscConfig+0x4ec>
 8001ca6:	bf00      	nop
 8001ca8:	40021000 	.word	0x40021000
 8001cac:	42420000 	.word	0x42420000
 8001cb0:	42420480 	.word	0x42420480
 8001cb4:	4b9e      	ldr	r3, [pc, #632]	; (8001f30 <HAL_RCC_OscConfig+0x4f4>)
 8001cb6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8001cb8:	f003 0302 	and.w	r3, r3, #2
 8001cbc:	2b00      	cmp	r3, #0
 8001cbe:	d1e9      	bne.n	8001c94 <HAL_RCC_OscConfig+0x258>
 8001cc0:	687b      	ldr	r3, [r7, #4]
 8001cc2:	681b      	ldr	r3, [r3, #0]
 8001cc4:	f003 0304 	and.w	r3, r3, #4
 8001cc8:	2b00      	cmp	r3, #0
 8001cca:	f000 80a6 	beq.w	8001e1a <HAL_RCC_OscConfig+0x3de>
 8001cce:	2300      	movs	r3, #0
 8001cd0:	75fb      	strb	r3, [r7, #23]
 8001cd2:	4b97      	ldr	r3, [pc, #604]	; (8001f30 <HAL_RCC_OscConfig+0x4f4>)
 8001cd4:	69db      	ldr	r3, [r3, #28]
 8001cd6:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8001cda:	2b00      	cmp	r3, #0
 8001cdc:	d10d      	bne.n	8001cfa <HAL_RCC_OscConfig+0x2be>
 8001cde:	4b94      	ldr	r3, [pc, #592]	; (8001f30 <HAL_RCC_OscConfig+0x4f4>)
 8001ce0:	69db      	ldr	r3, [r3, #28]
 8001ce2:	4a93      	ldr	r2, [pc, #588]	; (8001f30 <HAL_RCC_OscConfig+0x4f4>)
 8001ce4:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8001ce8:	61d3      	str	r3, [r2, #28]
 8001cea:	4b91      	ldr	r3, [pc, #580]	; (8001f30 <HAL_RCC_OscConfig+0x4f4>)
 8001cec:	69db      	ldr	r3, [r3, #28]
 8001cee:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8001cf2:	60bb      	str	r3, [r7, #8]
 8001cf4:	68bb      	ldr	r3, [r7, #8]
 8001cf6:	2301      	movs	r3, #1
 8001cf8:	75fb      	strb	r3, [r7, #23]
 8001cfa:	4b8e      	ldr	r3, [pc, #568]	; (8001f34 <HAL_RCC_OscConfig+0x4f8>)
 8001cfc:	681b      	ldr	r3, [r3, #0]
 8001cfe:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8001d02:	2b00      	cmp	r3, #0
 8001d04:	d118      	bne.n	8001d38 <HAL_RCC_OscConfig+0x2fc>
 8001d06:	4b8b      	ldr	r3, [pc, #556]	; (8001f34 <HAL_RCC_OscConfig+0x4f8>)
 8001d08:	681b      	ldr	r3, [r3, #0]
 8001d0a:	4a8a      	ldr	r2, [pc, #552]	; (8001f34 <HAL_RCC_OscConfig+0x4f8>)
 8001d0c:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8001d10:	6013      	str	r3, [r2, #0]
 8001d12:	f7ff fbd1 	bl	80014b8 <HAL_GetTick>
 8001d16:	6138      	str	r0, [r7, #16]
 8001d18:	e008      	b.n	8001d2c <HAL_RCC_OscConfig+0x2f0>
 8001d1a:	f7ff fbcd 	bl	80014b8 <HAL_GetTick>
 8001d1e:	4602      	mov	r2, r0
 8001d20:	693b      	ldr	r3, [r7, #16]
 8001d22:	1ad3      	subs	r3, r2, r3
 8001d24:	2b64      	cmp	r3, #100	; 0x64
 8001d26:	d901      	bls.n	8001d2c <HAL_RCC_OscConfig+0x2f0>
 8001d28:	2303      	movs	r3, #3
 8001d2a:	e0fd      	b.n	8001f28 <HAL_RCC_OscConfig+0x4ec>
 8001d2c:	4b81      	ldr	r3, [pc, #516]	; (8001f34 <HAL_RCC_OscConfig+0x4f8>)
 8001d2e:	681b      	ldr	r3, [r3, #0]
 8001d30:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8001d34:	2b00      	cmp	r3, #0
 8001d36:	d0f0      	beq.n	8001d1a <HAL_RCC_OscConfig+0x2de>
 8001d38:	687b      	ldr	r3, [r7, #4]
 8001d3a:	68db      	ldr	r3, [r3, #12]
 8001d3c:	2b01      	cmp	r3, #1
 8001d3e:	d106      	bne.n	8001d4e <HAL_RCC_OscConfig+0x312>
 8001d40:	4b7b      	ldr	r3, [pc, #492]	; (8001f30 <HAL_RCC_OscConfig+0x4f4>)
 8001d42:	6a1b      	ldr	r3, [r3, #32]
 8001d44:	4a7a      	ldr	r2, [pc, #488]	; (8001f30 <HAL_RCC_OscConfig+0x4f4>)
 8001d46:	f043 0301 	orr.w	r3, r3, #1
 8001d4a:	6213      	str	r3, [r2, #32]
 8001d4c:	e02d      	b.n	8001daa <HAL_RCC_OscConfig+0x36e>
 8001d4e:	687b      	ldr	r3, [r7, #4]
 8001d50:	68db      	ldr	r3, [r3, #12]
 8001d52:	2b00      	cmp	r3, #0
 8001d54:	d10c      	bne.n	8001d70 <HAL_RCC_OscConfig+0x334>
 8001d56:	4b76      	ldr	r3, [pc, #472]	; (8001f30 <HAL_RCC_OscConfig+0x4f4>)
 8001d58:	6a1b      	ldr	r3, [r3, #32]
 8001d5a:	4a75      	ldr	r2, [pc, #468]	; (8001f30 <HAL_RCC_OscConfig+0x4f4>)
 8001d5c:	f023 0301 	bic.w	r3, r3, #1
 8001d60:	6213      	str	r3, [r2, #32]
 8001d62:	4b73      	ldr	r3, [pc, #460]	; (8001f30 <HAL_RCC_OscConfig+0x4f4>)
 8001d64:	6a1b      	ldr	r3, [r3, #32]
 8001d66:	4a72      	ldr	r2, [pc, #456]	; (8001f30 <HAL_RCC_OscConfig+0x4f4>)
 8001d68:	f023 0304 	bic.w	r3, r3, #4
 8001d6c:	6213      	str	r3, [r2, #32]
 8001d6e:	e01c      	b.n	8001daa <HAL_RCC_OscConfig+0x36e>
 8001d70:	687b      	ldr	r3, [r7, #4]
 8001d72:	68db      	ldr	r3, [r3, #12]
 8001d74:	2b05      	cmp	r3, #5
 8001d76:	d10c      	bne.n	8001d92 <HAL_RCC_OscConfig+0x356>
 8001d78:	4b6d      	ldr	r3, [pc, #436]	; (8001f30 <HAL_RCC_OscConfig+0x4f4>)
 8001d7a:	6a1b      	ldr	r3, [r3, #32]
 8001d7c:	4a6c      	ldr	r2, [pc, #432]	; (8001f30 <HAL_RCC_OscConfig+0x4f4>)
 8001d7e:	f043 0304 	orr.w	r3, r3, #4
 8001d82:	6213      	str	r3, [r2, #32]
 8001d84:	4b6a      	ldr	r3, [pc, #424]	; (8001f30 <HAL_RCC_OscConfig+0x4f4>)
 8001d86:	6a1b      	ldr	r3, [r3, #32]
 8001d88:	4a69      	ldr	r2, [pc, #420]	; (8001f30 <HAL_RCC_OscConfig+0x4f4>)
 8001d8a:	f043 0301 	orr.w	r3, r3, #1
 8001d8e:	6213      	str	r3, [r2, #32]
 8001d90:	e00b      	b.n	8001daa <HAL_RCC_OscConfig+0x36e>
 8001d92:	4b67      	ldr	r3, [pc, #412]	; (8001f30 <HAL_RCC_OscConfig+0x4f4>)
 8001d94:	6a1b      	ldr	r3, [r3, #32]
 8001d96:	4a66      	ldr	r2, [pc, #408]	; (8001f30 <HAL_RCC_OscConfig+0x4f4>)
 8001d98:	f023 0301 	bic.w	r3, r3, #1
 8001d9c:	6213      	str	r3, [r2, #32]
 8001d9e:	4b64      	ldr	r3, [pc, #400]	; (8001f30 <HAL_RCC_OscConfig+0x4f4>)
 8001da0:	6a1b      	ldr	r3, [r3, #32]
 8001da2:	4a63      	ldr	r2, [pc, #396]	; (8001f30 <HAL_RCC_OscConfig+0x4f4>)
 8001da4:	f023 0304 	bic.w	r3, r3, #4
 8001da8:	6213      	str	r3, [r2, #32]
 8001daa:	687b      	ldr	r3, [r7, #4]
 8001dac:	68db      	ldr	r3, [r3, #12]
 8001dae:	2b00      	cmp	r3, #0
 8001db0:	d015      	beq.n	8001dde <HAL_RCC_OscConfig+0x3a2>
 8001db2:	f7ff fb81 	bl	80014b8 <HAL_GetTick>
 8001db6:	6138      	str	r0, [r7, #16]
 8001db8:	e00a      	b.n	8001dd0 <HAL_RCC_OscConfig+0x394>
 8001dba:	f7ff fb7d 	bl	80014b8 <HAL_GetTick>
 8001dbe:	4602      	mov	r2, r0
 8001dc0:	693b      	ldr	r3, [r7, #16]
 8001dc2:	1ad3      	subs	r3, r2, r3
 8001dc4:	f241 3288 	movw	r2, #5000	; 0x1388
 8001dc8:	4293      	cmp	r3, r2
 8001dca:	d901      	bls.n	8001dd0 <HAL_RCC_OscConfig+0x394>
 8001dcc:	2303      	movs	r3, #3
 8001dce:	e0ab      	b.n	8001f28 <HAL_RCC_OscConfig+0x4ec>
 8001dd0:	4b57      	ldr	r3, [pc, #348]	; (8001f30 <HAL_RCC_OscConfig+0x4f4>)
 8001dd2:	6a1b      	ldr	r3, [r3, #32]
 8001dd4:	f003 0302 	and.w	r3, r3, #2
 8001dd8:	2b00      	cmp	r3, #0
 8001dda:	d0ee      	beq.n	8001dba <HAL_RCC_OscConfig+0x37e>
 8001ddc:	e014      	b.n	8001e08 <HAL_RCC_OscConfig+0x3cc>
 8001dde:	f7ff fb6b 	bl	80014b8 <HAL_GetTick>
 8001de2:	6138      	str	r0, [r7, #16]
 8001de4:	e00a      	b.n	8001dfc <HAL_RCC_OscConfig+0x3c0>
 8001de6:	f7ff fb67 	bl	80014b8 <HAL_GetTick>
 8001dea:	4602      	mov	r2, r0
 8001dec:	693b      	ldr	r3, [r7, #16]
 8001dee:	1ad3      	subs	r3, r2, r3
 8001df0:	f241 3288 	movw	r2, #5000	; 0x1388
 8001df4:	4293      	cmp	r3, r2
 8001df6:	d901      	bls.n	8001dfc <HAL_RCC_OscConfig+0x3c0>
 8001df8:	2303      	movs	r3, #3
 8001dfa:	e095      	b.n	8001f28 <HAL_RCC_OscConfig+0x4ec>
 8001dfc:	4b4c      	ldr	r3, [pc, #304]	; (8001f30 <HAL_RCC_OscConfig+0x4f4>)
 8001dfe:	6a1b      	ldr	r3, [r3, #32]
 8001e00:	f003 0302 	and.w	r3, r3, #2
 8001e04:	2b00      	cmp	r3, #0
 8001e06:	d1ee      	bne.n	8001de6 <HAL_RCC_OscConfig+0x3aa>
 8001e08:	7dfb      	ldrb	r3, [r7, #23]
 8001e0a:	2b01      	cmp	r3, #1
 8001e0c:	d105      	bne.n	8001e1a <HAL_RCC_OscConfig+0x3de>
 8001e0e:	4b48      	ldr	r3, [pc, #288]	; (8001f30 <HAL_RCC_OscConfig+0x4f4>)
 8001e10:	69db      	ldr	r3, [r3, #28]
 8001e12:	4a47      	ldr	r2, [pc, #284]	; (8001f30 <HAL_RCC_OscConfig+0x4f4>)
 8001e14:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 8001e18:	61d3      	str	r3, [r2, #28]
 8001e1a:	687b      	ldr	r3, [r7, #4]
 8001e1c:	69db      	ldr	r3, [r3, #28]
 8001e1e:	2b00      	cmp	r3, #0
 8001e20:	f000 8081 	beq.w	8001f26 <HAL_RCC_OscConfig+0x4ea>
 8001e24:	4b42      	ldr	r3, [pc, #264]	; (8001f30 <HAL_RCC_OscConfig+0x4f4>)
 8001e26:	685b      	ldr	r3, [r3, #4]
 8001e28:	f003 030c 	and.w	r3, r3, #12
 8001e2c:	2b08      	cmp	r3, #8
 8001e2e:	d061      	beq.n	8001ef4 <HAL_RCC_OscConfig+0x4b8>
 8001e30:	687b      	ldr	r3, [r7, #4]
 8001e32:	69db      	ldr	r3, [r3, #28]
 8001e34:	2b02      	cmp	r3, #2
 8001e36:	d146      	bne.n	8001ec6 <HAL_RCC_OscConfig+0x48a>
 8001e38:	4b3f      	ldr	r3, [pc, #252]	; (8001f38 <HAL_RCC_OscConfig+0x4fc>)
 8001e3a:	2200      	movs	r2, #0
 8001e3c:	601a      	str	r2, [r3, #0]
 8001e3e:	f7ff fb3b 	bl	80014b8 <HAL_GetTick>
 8001e42:	6138      	str	r0, [r7, #16]
 8001e44:	e008      	b.n	8001e58 <HAL_RCC_OscConfig+0x41c>
 8001e46:	f7ff fb37 	bl	80014b8 <HAL_GetTick>
 8001e4a:	4602      	mov	r2, r0
 8001e4c:	693b      	ldr	r3, [r7, #16]
 8001e4e:	1ad3      	subs	r3, r2, r3
 8001e50:	2b02      	cmp	r3, #2
 8001e52:	d901      	bls.n	8001e58 <HAL_RCC_OscConfig+0x41c>
 8001e54:	2303      	movs	r3, #3
 8001e56:	e067      	b.n	8001f28 <HAL_RCC_OscConfig+0x4ec>
 8001e58:	4b35      	ldr	r3, [pc, #212]	; (8001f30 <HAL_RCC_OscConfig+0x4f4>)
 8001e5a:	681b      	ldr	r3, [r3, #0]
 8001e5c:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8001e60:	2b00      	cmp	r3, #0
 8001e62:	d1f0      	bne.n	8001e46 <HAL_RCC_OscConfig+0x40a>
 8001e64:	687b      	ldr	r3, [r7, #4]
 8001e66:	6a1b      	ldr	r3, [r3, #32]
 8001e68:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8001e6c:	d108      	bne.n	8001e80 <HAL_RCC_OscConfig+0x444>
 8001e6e:	4b30      	ldr	r3, [pc, #192]	; (8001f30 <HAL_RCC_OscConfig+0x4f4>)
 8001e70:	685b      	ldr	r3, [r3, #4]
 8001e72:	f423 3200 	bic.w	r2, r3, #131072	; 0x20000
 8001e76:	687b      	ldr	r3, [r7, #4]
 8001e78:	689b      	ldr	r3, [r3, #8]
 8001e7a:	492d      	ldr	r1, [pc, #180]	; (8001f30 <HAL_RCC_OscConfig+0x4f4>)
 8001e7c:	4313      	orrs	r3, r2
 8001e7e:	604b      	str	r3, [r1, #4]
 8001e80:	4b2b      	ldr	r3, [pc, #172]	; (8001f30 <HAL_RCC_OscConfig+0x4f4>)
 8001e82:	685b      	ldr	r3, [r3, #4]
 8001e84:	f423 1274 	bic.w	r2, r3, #3997696	; 0x3d0000
 8001e88:	687b      	ldr	r3, [r7, #4]
 8001e8a:	6a19      	ldr	r1, [r3, #32]
 8001e8c:	687b      	ldr	r3, [r7, #4]
 8001e8e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8001e90:	430b      	orrs	r3, r1
 8001e92:	4927      	ldr	r1, [pc, #156]	; (8001f30 <HAL_RCC_OscConfig+0x4f4>)
 8001e94:	4313      	orrs	r3, r2
 8001e96:	604b      	str	r3, [r1, #4]
 8001e98:	4b27      	ldr	r3, [pc, #156]	; (8001f38 <HAL_RCC_OscConfig+0x4fc>)
 8001e9a:	2201      	movs	r2, #1
 8001e9c:	601a      	str	r2, [r3, #0]
 8001e9e:	f7ff fb0b 	bl	80014b8 <HAL_GetTick>
 8001ea2:	6138      	str	r0, [r7, #16]
 8001ea4:	e008      	b.n	8001eb8 <HAL_RCC_OscConfig+0x47c>
 8001ea6:	f7ff fb07 	bl	80014b8 <HAL_GetTick>
 8001eaa:	4602      	mov	r2, r0
 8001eac:	693b      	ldr	r3, [r7, #16]
 8001eae:	1ad3      	subs	r3, r2, r3
 8001eb0:	2b02      	cmp	r3, #2
 8001eb2:	d901      	bls.n	8001eb8 <HAL_RCC_OscConfig+0x47c>
 8001eb4:	2303      	movs	r3, #3
 8001eb6:	e037      	b.n	8001f28 <HAL_RCC_OscConfig+0x4ec>
 8001eb8:	4b1d      	ldr	r3, [pc, #116]	; (8001f30 <HAL_RCC_OscConfig+0x4f4>)
 8001eba:	681b      	ldr	r3, [r3, #0]
 8001ebc:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8001ec0:	2b00      	cmp	r3, #0
 8001ec2:	d0f0      	beq.n	8001ea6 <HAL_RCC_OscConfig+0x46a>
 8001ec4:	e02f      	b.n	8001f26 <HAL_RCC_OscConfig+0x4ea>
 8001ec6:	4b1c      	ldr	r3, [pc, #112]	; (8001f38 <HAL_RCC_OscConfig+0x4fc>)
 8001ec8:	2200      	movs	r2, #0
 8001eca:	601a      	str	r2, [r3, #0]
 8001ecc:	f7ff faf4 	bl	80014b8 <HAL_GetTick>
 8001ed0:	6138      	str	r0, [r7, #16]
 8001ed2:	e008      	b.n	8001ee6 <HAL_RCC_OscConfig+0x4aa>
 8001ed4:	f7ff faf0 	bl	80014b8 <HAL_GetTick>
 8001ed8:	4602      	mov	r2, r0
 8001eda:	693b      	ldr	r3, [r7, #16]
 8001edc:	1ad3      	subs	r3, r2, r3
 8001ede:	2b02      	cmp	r3, #2
 8001ee0:	d901      	bls.n	8001ee6 <HAL_RCC_OscConfig+0x4aa>
 8001ee2:	2303      	movs	r3, #3
 8001ee4:	e020      	b.n	8001f28 <HAL_RCC_OscConfig+0x4ec>
 8001ee6:	4b12      	ldr	r3, [pc, #72]	; (8001f30 <HAL_RCC_OscConfig+0x4f4>)
 8001ee8:	681b      	ldr	r3, [r3, #0]
 8001eea:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8001eee:	2b00      	cmp	r3, #0
 8001ef0:	d1f0      	bne.n	8001ed4 <HAL_RCC_OscConfig+0x498>
 8001ef2:	e018      	b.n	8001f26 <HAL_RCC_OscConfig+0x4ea>
 8001ef4:	687b      	ldr	r3, [r7, #4]
 8001ef6:	69db      	ldr	r3, [r3, #28]
 8001ef8:	2b01      	cmp	r3, #1
 8001efa:	d101      	bne.n	8001f00 <HAL_RCC_OscConfig+0x4c4>
 8001efc:	2301      	movs	r3, #1
 8001efe:	e013      	b.n	8001f28 <HAL_RCC_OscConfig+0x4ec>
 8001f00:	4b0b      	ldr	r3, [pc, #44]	; (8001f30 <HAL_RCC_OscConfig+0x4f4>)
 8001f02:	685b      	ldr	r3, [r3, #4]
 8001f04:	60fb      	str	r3, [r7, #12]
 8001f06:	68fb      	ldr	r3, [r7, #12]
 8001f08:	f403 3280 	and.w	r2, r3, #65536	; 0x10000
 8001f0c:	687b      	ldr	r3, [r7, #4]
 8001f0e:	6a1b      	ldr	r3, [r3, #32]
 8001f10:	429a      	cmp	r2, r3
 8001f12:	d106      	bne.n	8001f22 <HAL_RCC_OscConfig+0x4e6>
 8001f14:	68fb      	ldr	r3, [r7, #12]
 8001f16:	f403 1270 	and.w	r2, r3, #3932160	; 0x3c0000
 8001f1a:	687b      	ldr	r3, [r7, #4]
 8001f1c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8001f1e:	429a      	cmp	r2, r3
 8001f20:	d001      	beq.n	8001f26 <HAL_RCC_OscConfig+0x4ea>
 8001f22:	2301      	movs	r3, #1
 8001f24:	e000      	b.n	8001f28 <HAL_RCC_OscConfig+0x4ec>
 8001f26:	2300      	movs	r3, #0
 8001f28:	4618      	mov	r0, r3
 8001f2a:	3718      	adds	r7, #24
 8001f2c:	46bd      	mov	sp, r7
 8001f2e:	bd80      	pop	{r7, pc}
 8001f30:	40021000 	.word	0x40021000
 8001f34:	40007000 	.word	0x40007000
 8001f38:	42420060 	.word	0x42420060

08001f3c <HAL_RCC_ClockConfig>:
 8001f3c:	b580      	push	{r7, lr}
 8001f3e:	b084      	sub	sp, #16
 8001f40:	af00      	add	r7, sp, #0
 8001f42:	6078      	str	r0, [r7, #4]
 8001f44:	6039      	str	r1, [r7, #0]
 8001f46:	687b      	ldr	r3, [r7, #4]
 8001f48:	2b00      	cmp	r3, #0
 8001f4a:	d101      	bne.n	8001f50 <HAL_RCC_ClockConfig+0x14>
 8001f4c:	2301      	movs	r3, #1
 8001f4e:	e0d0      	b.n	80020f2 <HAL_RCC_ClockConfig+0x1b6>
 8001f50:	4b6a      	ldr	r3, [pc, #424]	; (80020fc <HAL_RCC_ClockConfig+0x1c0>)
 8001f52:	681b      	ldr	r3, [r3, #0]
 8001f54:	f003 0307 	and.w	r3, r3, #7
 8001f58:	683a      	ldr	r2, [r7, #0]
 8001f5a:	429a      	cmp	r2, r3
 8001f5c:	d910      	bls.n	8001f80 <HAL_RCC_ClockConfig+0x44>
 8001f5e:	4b67      	ldr	r3, [pc, #412]	; (80020fc <HAL_RCC_ClockConfig+0x1c0>)
 8001f60:	681b      	ldr	r3, [r3, #0]
 8001f62:	f023 0207 	bic.w	r2, r3, #7
 8001f66:	4965      	ldr	r1, [pc, #404]	; (80020fc <HAL_RCC_ClockConfig+0x1c0>)
 8001f68:	683b      	ldr	r3, [r7, #0]
 8001f6a:	4313      	orrs	r3, r2
 8001f6c:	600b      	str	r3, [r1, #0]
 8001f6e:	4b63      	ldr	r3, [pc, #396]	; (80020fc <HAL_RCC_ClockConfig+0x1c0>)
 8001f70:	681b      	ldr	r3, [r3, #0]
 8001f72:	f003 0307 	and.w	r3, r3, #7
 8001f76:	683a      	ldr	r2, [r7, #0]
 8001f78:	429a      	cmp	r2, r3
 8001f7a:	d001      	beq.n	8001f80 <HAL_RCC_ClockConfig+0x44>
 8001f7c:	2301      	movs	r3, #1
 8001f7e:	e0b8      	b.n	80020f2 <HAL_RCC_ClockConfig+0x1b6>
 8001f80:	687b      	ldr	r3, [r7, #4]
 8001f82:	681b      	ldr	r3, [r3, #0]
 8001f84:	f003 0302 	and.w	r3, r3, #2
 8001f88:	2b00      	cmp	r3, #0
 8001f8a:	d020      	beq.n	8001fce <HAL_RCC_ClockConfig+0x92>
 8001f8c:	687b      	ldr	r3, [r7, #4]
 8001f8e:	681b      	ldr	r3, [r3, #0]
 8001f90:	f003 0304 	and.w	r3, r3, #4
 8001f94:	2b00      	cmp	r3, #0
 8001f96:	d005      	beq.n	8001fa4 <HAL_RCC_ClockConfig+0x68>
 8001f98:	4b59      	ldr	r3, [pc, #356]	; (8002100 <HAL_RCC_ClockConfig+0x1c4>)
 8001f9a:	685b      	ldr	r3, [r3, #4]
 8001f9c:	4a58      	ldr	r2, [pc, #352]	; (8002100 <HAL_RCC_ClockConfig+0x1c4>)
 8001f9e:	f443 63e0 	orr.w	r3, r3, #1792	; 0x700
 8001fa2:	6053      	str	r3, [r2, #4]
 8001fa4:	687b      	ldr	r3, [r7, #4]
 8001fa6:	681b      	ldr	r3, [r3, #0]
 8001fa8:	f003 0308 	and.w	r3, r3, #8
 8001fac:	2b00      	cmp	r3, #0
 8001fae:	d005      	beq.n	8001fbc <HAL_RCC_ClockConfig+0x80>
 8001fb0:	4b53      	ldr	r3, [pc, #332]	; (8002100 <HAL_RCC_ClockConfig+0x1c4>)
 8001fb2:	685b      	ldr	r3, [r3, #4]
 8001fb4:	4a52      	ldr	r2, [pc, #328]	; (8002100 <HAL_RCC_ClockConfig+0x1c4>)
 8001fb6:	f443 5360 	orr.w	r3, r3, #14336	; 0x3800
 8001fba:	6053      	str	r3, [r2, #4]
 8001fbc:	4b50      	ldr	r3, [pc, #320]	; (8002100 <HAL_RCC_ClockConfig+0x1c4>)
 8001fbe:	685b      	ldr	r3, [r3, #4]
 8001fc0:	f023 02f0 	bic.w	r2, r3, #240	; 0xf0
 8001fc4:	687b      	ldr	r3, [r7, #4]
 8001fc6:	689b      	ldr	r3, [r3, #8]
 8001fc8:	494d      	ldr	r1, [pc, #308]	; (8002100 <HAL_RCC_ClockConfig+0x1c4>)
 8001fca:	4313      	orrs	r3, r2
 8001fcc:	604b      	str	r3, [r1, #4]
 8001fce:	687b      	ldr	r3, [r7, #4]
 8001fd0:	681b      	ldr	r3, [r3, #0]
 8001fd2:	f003 0301 	and.w	r3, r3, #1
 8001fd6:	2b00      	cmp	r3, #0
 8001fd8:	d040      	beq.n	800205c <HAL_RCC_ClockConfig+0x120>
 8001fda:	687b      	ldr	r3, [r7, #4]
 8001fdc:	685b      	ldr	r3, [r3, #4]
 8001fde:	2b01      	cmp	r3, #1
 8001fe0:	d107      	bne.n	8001ff2 <HAL_RCC_ClockConfig+0xb6>
 8001fe2:	4b47      	ldr	r3, [pc, #284]	; (8002100 <HAL_RCC_ClockConfig+0x1c4>)
 8001fe4:	681b      	ldr	r3, [r3, #0]
 8001fe6:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8001fea:	2b00      	cmp	r3, #0
 8001fec:	d115      	bne.n	800201a <HAL_RCC_ClockConfig+0xde>
 8001fee:	2301      	movs	r3, #1
 8001ff0:	e07f      	b.n	80020f2 <HAL_RCC_ClockConfig+0x1b6>
 8001ff2:	687b      	ldr	r3, [r7, #4]
 8001ff4:	685b      	ldr	r3, [r3, #4]
 8001ff6:	2b02      	cmp	r3, #2
 8001ff8:	d107      	bne.n	800200a <HAL_RCC_ClockConfig+0xce>
 8001ffa:	4b41      	ldr	r3, [pc, #260]	; (8002100 <HAL_RCC_ClockConfig+0x1c4>)
 8001ffc:	681b      	ldr	r3, [r3, #0]
 8001ffe:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8002002:	2b00      	cmp	r3, #0
 8002004:	d109      	bne.n	800201a <HAL_RCC_ClockConfig+0xde>
 8002006:	2301      	movs	r3, #1
 8002008:	e073      	b.n	80020f2 <HAL_RCC_ClockConfig+0x1b6>
 800200a:	4b3d      	ldr	r3, [pc, #244]	; (8002100 <HAL_RCC_ClockConfig+0x1c4>)
 800200c:	681b      	ldr	r3, [r3, #0]
 800200e:	f003 0302 	and.w	r3, r3, #2
 8002012:	2b00      	cmp	r3, #0
 8002014:	d101      	bne.n	800201a <HAL_RCC_ClockConfig+0xde>
 8002016:	2301      	movs	r3, #1
 8002018:	e06b      	b.n	80020f2 <HAL_RCC_ClockConfig+0x1b6>
 800201a:	4b39      	ldr	r3, [pc, #228]	; (8002100 <HAL_RCC_ClockConfig+0x1c4>)
 800201c:	685b      	ldr	r3, [r3, #4]
 800201e:	f023 0203 	bic.w	r2, r3, #3
 8002022:	687b      	ldr	r3, [r7, #4]
 8002024:	685b      	ldr	r3, [r3, #4]
 8002026:	4936      	ldr	r1, [pc, #216]	; (8002100 <HAL_RCC_ClockConfig+0x1c4>)
 8002028:	4313      	orrs	r3, r2
 800202a:	604b      	str	r3, [r1, #4]
 800202c:	f7ff fa44 	bl	80014b8 <HAL_GetTick>
 8002030:	60f8      	str	r0, [r7, #12]
 8002032:	e00a      	b.n	800204a <HAL_RCC_ClockConfig+0x10e>
 8002034:	f7ff fa40 	bl	80014b8 <HAL_GetTick>
 8002038:	4602      	mov	r2, r0
 800203a:	68fb      	ldr	r3, [r7, #12]
 800203c:	1ad3      	subs	r3, r2, r3
 800203e:	f241 3288 	movw	r2, #5000	; 0x1388
 8002042:	4293      	cmp	r3, r2
 8002044:	d901      	bls.n	800204a <HAL_RCC_ClockConfig+0x10e>
 8002046:	2303      	movs	r3, #3
 8002048:	e053      	b.n	80020f2 <HAL_RCC_ClockConfig+0x1b6>
 800204a:	4b2d      	ldr	r3, [pc, #180]	; (8002100 <HAL_RCC_ClockConfig+0x1c4>)
 800204c:	685b      	ldr	r3, [r3, #4]
 800204e:	f003 020c 	and.w	r2, r3, #12
 8002052:	687b      	ldr	r3, [r7, #4]
 8002054:	685b      	ldr	r3, [r3, #4]
 8002056:	009b      	lsls	r3, r3, #2
 8002058:	429a      	cmp	r2, r3
 800205a:	d1eb      	bne.n	8002034 <HAL_RCC_ClockConfig+0xf8>
 800205c:	4b27      	ldr	r3, [pc, #156]	; (80020fc <HAL_RCC_ClockConfig+0x1c0>)
 800205e:	681b      	ldr	r3, [r3, #0]
 8002060:	f003 0307 	and.w	r3, r3, #7
 8002064:	683a      	ldr	r2, [r7, #0]
 8002066:	429a      	cmp	r2, r3
 8002068:	d210      	bcs.n	800208c <HAL_RCC_ClockConfig+0x150>
 800206a:	4b24      	ldr	r3, [pc, #144]	; (80020fc <HAL_RCC_ClockConfig+0x1c0>)
 800206c:	681b      	ldr	r3, [r3, #0]
 800206e:	f023 0207 	bic.w	r2, r3, #7
 8002072:	4922      	ldr	r1, [pc, #136]	; (80020fc <HAL_RCC_ClockConfig+0x1c0>)
 8002074:	683b      	ldr	r3, [r7, #0]
 8002076:	4313      	orrs	r3, r2
 8002078:	600b      	str	r3, [r1, #0]
 800207a:	4b20      	ldr	r3, [pc, #128]	; (80020fc <HAL_RCC_ClockConfig+0x1c0>)
 800207c:	681b      	ldr	r3, [r3, #0]
 800207e:	f003 0307 	and.w	r3, r3, #7
 8002082:	683a      	ldr	r2, [r7, #0]
 8002084:	429a      	cmp	r2, r3
 8002086:	d001      	beq.n	800208c <HAL_RCC_ClockConfig+0x150>
 8002088:	2301      	movs	r3, #1
 800208a:	e032      	b.n	80020f2 <HAL_RCC_ClockConfig+0x1b6>
 800208c:	687b      	ldr	r3, [r7, #4]
 800208e:	681b      	ldr	r3, [r3, #0]
 8002090:	f003 0304 	and.w	r3, r3, #4
 8002094:	2b00      	cmp	r3, #0
 8002096:	d008      	beq.n	80020aa <HAL_RCC_ClockConfig+0x16e>
 8002098:	4b19      	ldr	r3, [pc, #100]	; (8002100 <HAL_RCC_ClockConfig+0x1c4>)
 800209a:	685b      	ldr	r3, [r3, #4]
 800209c:	f423 62e0 	bic.w	r2, r3, #1792	; 0x700
 80020a0:	687b      	ldr	r3, [r7, #4]
 80020a2:	68db      	ldr	r3, [r3, #12]
 80020a4:	4916      	ldr	r1, [pc, #88]	; (8002100 <HAL_RCC_ClockConfig+0x1c4>)
 80020a6:	4313      	orrs	r3, r2
 80020a8:	604b      	str	r3, [r1, #4]
 80020aa:	687b      	ldr	r3, [r7, #4]
 80020ac:	681b      	ldr	r3, [r3, #0]
 80020ae:	f003 0308 	and.w	r3, r3, #8
 80020b2:	2b00      	cmp	r3, #0
 80020b4:	d009      	beq.n	80020ca <HAL_RCC_ClockConfig+0x18e>
 80020b6:	4b12      	ldr	r3, [pc, #72]	; (8002100 <HAL_RCC_ClockConfig+0x1c4>)
 80020b8:	685b      	ldr	r3, [r3, #4]
 80020ba:	f423 5260 	bic.w	r2, r3, #14336	; 0x3800
 80020be:	687b      	ldr	r3, [r7, #4]
 80020c0:	691b      	ldr	r3, [r3, #16]
 80020c2:	00db      	lsls	r3, r3, #3
 80020c4:	490e      	ldr	r1, [pc, #56]	; (8002100 <HAL_RCC_ClockConfig+0x1c4>)
 80020c6:	4313      	orrs	r3, r2
 80020c8:	604b      	str	r3, [r1, #4]
 80020ca:	f000 f821 	bl	8002110 <HAL_RCC_GetSysClockFreq>
 80020ce:	4602      	mov	r2, r0
 80020d0:	4b0b      	ldr	r3, [pc, #44]	; (8002100 <HAL_RCC_ClockConfig+0x1c4>)
 80020d2:	685b      	ldr	r3, [r3, #4]
 80020d4:	091b      	lsrs	r3, r3, #4
 80020d6:	f003 030f 	and.w	r3, r3, #15
 80020da:	490a      	ldr	r1, [pc, #40]	; (8002104 <HAL_RCC_ClockConfig+0x1c8>)
 80020dc:	5ccb      	ldrb	r3, [r1, r3]
 80020de:	fa22 f303 	lsr.w	r3, r2, r3
 80020e2:	4a09      	ldr	r2, [pc, #36]	; (8002108 <HAL_RCC_ClockConfig+0x1cc>)
 80020e4:	6013      	str	r3, [r2, #0]
 80020e6:	4b09      	ldr	r3, [pc, #36]	; (800210c <HAL_RCC_ClockConfig+0x1d0>)
 80020e8:	681b      	ldr	r3, [r3, #0]
 80020ea:	4618      	mov	r0, r3
 80020ec:	f7ff f9a2 	bl	8001434 <HAL_InitTick>
 80020f0:	2300      	movs	r3, #0
 80020f2:	4618      	mov	r0, r3
 80020f4:	3710      	adds	r7, #16
 80020f6:	46bd      	mov	sp, r7
 80020f8:	bd80      	pop	{r7, pc}
 80020fa:	bf00      	nop
 80020fc:	40022000 	.word	0x40022000
 8002100:	40021000 	.word	0x40021000
 8002104:	08002a54 	.word	0x08002a54
 8002108:	20000048 	.word	0x20000048
 800210c:	2000004c 	.word	0x2000004c

08002110 <HAL_RCC_GetSysClockFreq>:
 8002110:	b490      	push	{r4, r7}
 8002112:	b08a      	sub	sp, #40	; 0x28
 8002114:	af00      	add	r7, sp, #0
 8002116:	4b2a      	ldr	r3, [pc, #168]	; (80021c0 <HAL_RCC_GetSysClockFreq+0xb0>)
 8002118:	1d3c      	adds	r4, r7, #4
 800211a:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 800211c:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 8002120:	f240 2301 	movw	r3, #513	; 0x201
 8002124:	803b      	strh	r3, [r7, #0]
 8002126:	2300      	movs	r3, #0
 8002128:	61fb      	str	r3, [r7, #28]
 800212a:	2300      	movs	r3, #0
 800212c:	61bb      	str	r3, [r7, #24]
 800212e:	2300      	movs	r3, #0
 8002130:	627b      	str	r3, [r7, #36]	; 0x24
 8002132:	2300      	movs	r3, #0
 8002134:	617b      	str	r3, [r7, #20]
 8002136:	2300      	movs	r3, #0
 8002138:	623b      	str	r3, [r7, #32]
 800213a:	4b22      	ldr	r3, [pc, #136]	; (80021c4 <HAL_RCC_GetSysClockFreq+0xb4>)
 800213c:	685b      	ldr	r3, [r3, #4]
 800213e:	61fb      	str	r3, [r7, #28]
 8002140:	69fb      	ldr	r3, [r7, #28]
 8002142:	f003 030c 	and.w	r3, r3, #12
 8002146:	2b04      	cmp	r3, #4
 8002148:	d002      	beq.n	8002150 <HAL_RCC_GetSysClockFreq+0x40>
 800214a:	2b08      	cmp	r3, #8
 800214c:	d003      	beq.n	8002156 <HAL_RCC_GetSysClockFreq+0x46>
 800214e:	e02d      	b.n	80021ac <HAL_RCC_GetSysClockFreq+0x9c>
 8002150:	4b1d      	ldr	r3, [pc, #116]	; (80021c8 <HAL_RCC_GetSysClockFreq+0xb8>)
 8002152:	623b      	str	r3, [r7, #32]
 8002154:	e02d      	b.n	80021b2 <HAL_RCC_GetSysClockFreq+0xa2>
 8002156:	69fb      	ldr	r3, [r7, #28]
 8002158:	0c9b      	lsrs	r3, r3, #18
 800215a:	f003 030f 	and.w	r3, r3, #15
 800215e:	f107 0228 	add.w	r2, r7, #40	; 0x28
 8002162:	4413      	add	r3, r2
 8002164:	f813 3c24 	ldrb.w	r3, [r3, #-36]
 8002168:	617b      	str	r3, [r7, #20]
 800216a:	69fb      	ldr	r3, [r7, #28]
 800216c:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8002170:	2b00      	cmp	r3, #0
 8002172:	d013      	beq.n	800219c <HAL_RCC_GetSysClockFreq+0x8c>
 8002174:	4b13      	ldr	r3, [pc, #76]	; (80021c4 <HAL_RCC_GetSysClockFreq+0xb4>)
 8002176:	685b      	ldr	r3, [r3, #4]
 8002178:	0c5b      	lsrs	r3, r3, #17
 800217a:	f003 0301 	and.w	r3, r3, #1
 800217e:	f107 0228 	add.w	r2, r7, #40	; 0x28
 8002182:	4413      	add	r3, r2
 8002184:	f813 3c28 	ldrb.w	r3, [r3, #-40]
 8002188:	61bb      	str	r3, [r7, #24]
 800218a:	697b      	ldr	r3, [r7, #20]
 800218c:	4a0e      	ldr	r2, [pc, #56]	; (80021c8 <HAL_RCC_GetSysClockFreq+0xb8>)
 800218e:	fb02 f203 	mul.w	r2, r2, r3
 8002192:	69bb      	ldr	r3, [r7, #24]
 8002194:	fbb2 f3f3 	udiv	r3, r2, r3
 8002198:	627b      	str	r3, [r7, #36]	; 0x24
 800219a:	e004      	b.n	80021a6 <HAL_RCC_GetSysClockFreq+0x96>
 800219c:	697b      	ldr	r3, [r7, #20]
 800219e:	4a0b      	ldr	r2, [pc, #44]	; (80021cc <HAL_RCC_GetSysClockFreq+0xbc>)
 80021a0:	fb02 f303 	mul.w	r3, r2, r3
 80021a4:	627b      	str	r3, [r7, #36]	; 0x24
 80021a6:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80021a8:	623b      	str	r3, [r7, #32]
 80021aa:	e002      	b.n	80021b2 <HAL_RCC_GetSysClockFreq+0xa2>
 80021ac:	4b06      	ldr	r3, [pc, #24]	; (80021c8 <HAL_RCC_GetSysClockFreq+0xb8>)
 80021ae:	623b      	str	r3, [r7, #32]
 80021b0:	bf00      	nop
 80021b2:	6a3b      	ldr	r3, [r7, #32]
 80021b4:	4618      	mov	r0, r3
 80021b6:	3728      	adds	r7, #40	; 0x28
 80021b8:	46bd      	mov	sp, r7
 80021ba:	bc90      	pop	{r4, r7}
 80021bc:	4770      	bx	lr
 80021be:	bf00      	nop
 80021c0:	08002a44 	.word	0x08002a44
 80021c4:	40021000 	.word	0x40021000
 80021c8:	007a1200 	.word	0x007a1200
 80021cc:	003d0900 	.word	0x003d0900

080021d0 <RCC_Delay>:
 80021d0:	b480      	push	{r7}
 80021d2:	b085      	sub	sp, #20
 80021d4:	af00      	add	r7, sp, #0
 80021d6:	6078      	str	r0, [r7, #4]
 80021d8:	4b0a      	ldr	r3, [pc, #40]	; (8002204 <RCC_Delay+0x34>)
 80021da:	681b      	ldr	r3, [r3, #0]
 80021dc:	4a0a      	ldr	r2, [pc, #40]	; (8002208 <RCC_Delay+0x38>)
 80021de:	fba2 2303 	umull	r2, r3, r2, r3
 80021e2:	0a5b      	lsrs	r3, r3, #9
 80021e4:	687a      	ldr	r2, [r7, #4]
 80021e6:	fb02 f303 	mul.w	r3, r2, r3
 80021ea:	60fb      	str	r3, [r7, #12]
 80021ec:	bf00      	nop
 80021ee:	68fb      	ldr	r3, [r7, #12]
 80021f0:	1e5a      	subs	r2, r3, #1
 80021f2:	60fa      	str	r2, [r7, #12]
 80021f4:	2b00      	cmp	r3, #0
 80021f6:	d1f9      	bne.n	80021ec <RCC_Delay+0x1c>
 80021f8:	bf00      	nop
 80021fa:	bf00      	nop
 80021fc:	3714      	adds	r7, #20
 80021fe:	46bd      	mov	sp, r7
 8002200:	bc80      	pop	{r7}
 8002202:	4770      	bx	lr
 8002204:	20000048 	.word	0x20000048
 8002208:	10624dd3 	.word	0x10624dd3

0800220c <HAL_TIM_Base_Init>:
 800220c:	b580      	push	{r7, lr}
 800220e:	b082      	sub	sp, #8
 8002210:	af00      	add	r7, sp, #0
 8002212:	6078      	str	r0, [r7, #4]
 8002214:	687b      	ldr	r3, [r7, #4]
 8002216:	2b00      	cmp	r3, #0
 8002218:	d101      	bne.n	800221e <HAL_TIM_Base_Init+0x12>
 800221a:	2301      	movs	r3, #1
 800221c:	e041      	b.n	80022a2 <HAL_TIM_Base_Init+0x96>
 800221e:	687b      	ldr	r3, [r7, #4]
 8002220:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8002224:	b2db      	uxtb	r3, r3
 8002226:	2b00      	cmp	r3, #0
 8002228:	d106      	bne.n	8002238 <HAL_TIM_Base_Init+0x2c>
 800222a:	687b      	ldr	r3, [r7, #4]
 800222c:	2200      	movs	r2, #0
 800222e:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8002232:	6878      	ldr	r0, [r7, #4]
 8002234:	f7ff f866 	bl	8001304 <HAL_TIM_Base_MspInit>
 8002238:	687b      	ldr	r3, [r7, #4]
 800223a:	2202      	movs	r2, #2
 800223c:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8002240:	687b      	ldr	r3, [r7, #4]
 8002242:	681a      	ldr	r2, [r3, #0]
 8002244:	687b      	ldr	r3, [r7, #4]
 8002246:	3304      	adds	r3, #4
 8002248:	4619      	mov	r1, r3
 800224a:	4610      	mov	r0, r2
 800224c:	f000 fa6a 	bl	8002724 <TIM_Base_SetConfig>
 8002250:	687b      	ldr	r3, [r7, #4]
 8002252:	2201      	movs	r2, #1
 8002254:	f883 2046 	strb.w	r2, [r3, #70]	; 0x46
 8002258:	687b      	ldr	r3, [r7, #4]
 800225a:	2201      	movs	r2, #1
 800225c:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8002260:	687b      	ldr	r3, [r7, #4]
 8002262:	2201      	movs	r2, #1
 8002264:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 8002268:	687b      	ldr	r3, [r7, #4]
 800226a:	2201      	movs	r2, #1
 800226c:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 8002270:	687b      	ldr	r3, [r7, #4]
 8002272:	2201      	movs	r2, #1
 8002274:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8002278:	687b      	ldr	r3, [r7, #4]
 800227a:	2201      	movs	r2, #1
 800227c:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 8002280:	687b      	ldr	r3, [r7, #4]
 8002282:	2201      	movs	r2, #1
 8002284:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
 8002288:	687b      	ldr	r3, [r7, #4]
 800228a:	2201      	movs	r2, #1
 800228c:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 8002290:	687b      	ldr	r3, [r7, #4]
 8002292:	2201      	movs	r2, #1
 8002294:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 8002298:	687b      	ldr	r3, [r7, #4]
 800229a:	2201      	movs	r2, #1
 800229c:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80022a0:	2300      	movs	r3, #0
 80022a2:	4618      	mov	r0, r3
 80022a4:	3708      	adds	r7, #8
 80022a6:	46bd      	mov	sp, r7
 80022a8:	bd80      	pop	{r7, pc}
	...

080022ac <HAL_TIM_Base_Start_IT>:
 80022ac:	b480      	push	{r7}
 80022ae:	b085      	sub	sp, #20
 80022b0:	af00      	add	r7, sp, #0
 80022b2:	6078      	str	r0, [r7, #4]
 80022b4:	687b      	ldr	r3, [r7, #4]
 80022b6:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 80022ba:	b2db      	uxtb	r3, r3
 80022bc:	2b01      	cmp	r3, #1
 80022be:	d001      	beq.n	80022c4 <HAL_TIM_Base_Start_IT+0x18>
 80022c0:	2301      	movs	r3, #1
 80022c2:	e035      	b.n	8002330 <HAL_TIM_Base_Start_IT+0x84>
 80022c4:	687b      	ldr	r3, [r7, #4]
 80022c6:	2202      	movs	r2, #2
 80022c8:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80022cc:	687b      	ldr	r3, [r7, #4]
 80022ce:	681b      	ldr	r3, [r3, #0]
 80022d0:	68da      	ldr	r2, [r3, #12]
 80022d2:	687b      	ldr	r3, [r7, #4]
 80022d4:	681b      	ldr	r3, [r3, #0]
 80022d6:	f042 0201 	orr.w	r2, r2, #1
 80022da:	60da      	str	r2, [r3, #12]
 80022dc:	687b      	ldr	r3, [r7, #4]
 80022de:	681b      	ldr	r3, [r3, #0]
 80022e0:	4a16      	ldr	r2, [pc, #88]	; (800233c <HAL_TIM_Base_Start_IT+0x90>)
 80022e2:	4293      	cmp	r3, r2
 80022e4:	d009      	beq.n	80022fa <HAL_TIM_Base_Start_IT+0x4e>
 80022e6:	687b      	ldr	r3, [r7, #4]
 80022e8:	681b      	ldr	r3, [r3, #0]
 80022ea:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 80022ee:	d004      	beq.n	80022fa <HAL_TIM_Base_Start_IT+0x4e>
 80022f0:	687b      	ldr	r3, [r7, #4]
 80022f2:	681b      	ldr	r3, [r3, #0]
 80022f4:	4a12      	ldr	r2, [pc, #72]	; (8002340 <HAL_TIM_Base_Start_IT+0x94>)
 80022f6:	4293      	cmp	r3, r2
 80022f8:	d111      	bne.n	800231e <HAL_TIM_Base_Start_IT+0x72>
 80022fa:	687b      	ldr	r3, [r7, #4]
 80022fc:	681b      	ldr	r3, [r3, #0]
 80022fe:	689b      	ldr	r3, [r3, #8]
 8002300:	f003 0307 	and.w	r3, r3, #7
 8002304:	60fb      	str	r3, [r7, #12]
 8002306:	68fb      	ldr	r3, [r7, #12]
 8002308:	2b06      	cmp	r3, #6
 800230a:	d010      	beq.n	800232e <HAL_TIM_Base_Start_IT+0x82>
 800230c:	687b      	ldr	r3, [r7, #4]
 800230e:	681b      	ldr	r3, [r3, #0]
 8002310:	681a      	ldr	r2, [r3, #0]
 8002312:	687b      	ldr	r3, [r7, #4]
 8002314:	681b      	ldr	r3, [r3, #0]
 8002316:	f042 0201 	orr.w	r2, r2, #1
 800231a:	601a      	str	r2, [r3, #0]
 800231c:	e007      	b.n	800232e <HAL_TIM_Base_Start_IT+0x82>
 800231e:	687b      	ldr	r3, [r7, #4]
 8002320:	681b      	ldr	r3, [r3, #0]
 8002322:	681a      	ldr	r2, [r3, #0]
 8002324:	687b      	ldr	r3, [r7, #4]
 8002326:	681b      	ldr	r3, [r3, #0]
 8002328:	f042 0201 	orr.w	r2, r2, #1
 800232c:	601a      	str	r2, [r3, #0]
 800232e:	2300      	movs	r3, #0
 8002330:	4618      	mov	r0, r3
 8002332:	3714      	adds	r7, #20
 8002334:	46bd      	mov	sp, r7
 8002336:	bc80      	pop	{r7}
 8002338:	4770      	bx	lr
 800233a:	bf00      	nop
 800233c:	40012c00 	.word	0x40012c00
 8002340:	40000400 	.word	0x40000400

08002344 <HAL_TIM_IRQHandler>:
 8002344:	b580      	push	{r7, lr}
 8002346:	b082      	sub	sp, #8
 8002348:	af00      	add	r7, sp, #0
 800234a:	6078      	str	r0, [r7, #4]
 800234c:	687b      	ldr	r3, [r7, #4]
 800234e:	681b      	ldr	r3, [r3, #0]
 8002350:	691b      	ldr	r3, [r3, #16]
 8002352:	f003 0302 	and.w	r3, r3, #2
 8002356:	2b02      	cmp	r3, #2
 8002358:	d122      	bne.n	80023a0 <HAL_TIM_IRQHandler+0x5c>
 800235a:	687b      	ldr	r3, [r7, #4]
 800235c:	681b      	ldr	r3, [r3, #0]
 800235e:	68db      	ldr	r3, [r3, #12]
 8002360:	f003 0302 	and.w	r3, r3, #2
 8002364:	2b02      	cmp	r3, #2
 8002366:	d11b      	bne.n	80023a0 <HAL_TIM_IRQHandler+0x5c>
 8002368:	687b      	ldr	r3, [r7, #4]
 800236a:	681b      	ldr	r3, [r3, #0]
 800236c:	f06f 0202 	mvn.w	r2, #2
 8002370:	611a      	str	r2, [r3, #16]
 8002372:	687b      	ldr	r3, [r7, #4]
 8002374:	2201      	movs	r2, #1
 8002376:	771a      	strb	r2, [r3, #28]
 8002378:	687b      	ldr	r3, [r7, #4]
 800237a:	681b      	ldr	r3, [r3, #0]
 800237c:	699b      	ldr	r3, [r3, #24]
 800237e:	f003 0303 	and.w	r3, r3, #3
 8002382:	2b00      	cmp	r3, #0
 8002384:	d003      	beq.n	800238e <HAL_TIM_IRQHandler+0x4a>
 8002386:	6878      	ldr	r0, [r7, #4]
 8002388:	f000 f9b1 	bl	80026ee <HAL_TIM_IC_CaptureCallback>
 800238c:	e005      	b.n	800239a <HAL_TIM_IRQHandler+0x56>
 800238e:	6878      	ldr	r0, [r7, #4]
 8002390:	f000 f9a4 	bl	80026dc <HAL_TIM_OC_DelayElapsedCallback>
 8002394:	6878      	ldr	r0, [r7, #4]
 8002396:	f000 f9b3 	bl	8002700 <HAL_TIM_PWM_PulseFinishedCallback>
 800239a:	687b      	ldr	r3, [r7, #4]
 800239c:	2200      	movs	r2, #0
 800239e:	771a      	strb	r2, [r3, #28]
 80023a0:	687b      	ldr	r3, [r7, #4]
 80023a2:	681b      	ldr	r3, [r3, #0]
 80023a4:	691b      	ldr	r3, [r3, #16]
 80023a6:	f003 0304 	and.w	r3, r3, #4
 80023aa:	2b04      	cmp	r3, #4
 80023ac:	d122      	bne.n	80023f4 <HAL_TIM_IRQHandler+0xb0>
 80023ae:	687b      	ldr	r3, [r7, #4]
 80023b0:	681b      	ldr	r3, [r3, #0]
 80023b2:	68db      	ldr	r3, [r3, #12]
 80023b4:	f003 0304 	and.w	r3, r3, #4
 80023b8:	2b04      	cmp	r3, #4
 80023ba:	d11b      	bne.n	80023f4 <HAL_TIM_IRQHandler+0xb0>
 80023bc:	687b      	ldr	r3, [r7, #4]
 80023be:	681b      	ldr	r3, [r3, #0]
 80023c0:	f06f 0204 	mvn.w	r2, #4
 80023c4:	611a      	str	r2, [r3, #16]
 80023c6:	687b      	ldr	r3, [r7, #4]
 80023c8:	2202      	movs	r2, #2
 80023ca:	771a      	strb	r2, [r3, #28]
 80023cc:	687b      	ldr	r3, [r7, #4]
 80023ce:	681b      	ldr	r3, [r3, #0]
 80023d0:	699b      	ldr	r3, [r3, #24]
 80023d2:	f403 7340 	and.w	r3, r3, #768	; 0x300
 80023d6:	2b00      	cmp	r3, #0
 80023d8:	d003      	beq.n	80023e2 <HAL_TIM_IRQHandler+0x9e>
 80023da:	6878      	ldr	r0, [r7, #4]
 80023dc:	f000 f987 	bl	80026ee <HAL_TIM_IC_CaptureCallback>
 80023e0:	e005      	b.n	80023ee <HAL_TIM_IRQHandler+0xaa>
 80023e2:	6878      	ldr	r0, [r7, #4]
 80023e4:	f000 f97a 	bl	80026dc <HAL_TIM_OC_DelayElapsedCallback>
 80023e8:	6878      	ldr	r0, [r7, #4]
 80023ea:	f000 f989 	bl	8002700 <HAL_TIM_PWM_PulseFinishedCallback>
 80023ee:	687b      	ldr	r3, [r7, #4]
 80023f0:	2200      	movs	r2, #0
 80023f2:	771a      	strb	r2, [r3, #28]
 80023f4:	687b      	ldr	r3, [r7, #4]
 80023f6:	681b      	ldr	r3, [r3, #0]
 80023f8:	691b      	ldr	r3, [r3, #16]
 80023fa:	f003 0308 	and.w	r3, r3, #8
 80023fe:	2b08      	cmp	r3, #8
 8002400:	d122      	bne.n	8002448 <HAL_TIM_IRQHandler+0x104>
 8002402:	687b      	ldr	r3, [r7, #4]
 8002404:	681b      	ldr	r3, [r3, #0]
 8002406:	68db      	ldr	r3, [r3, #12]
 8002408:	f003 0308 	and.w	r3, r3, #8
 800240c:	2b08      	cmp	r3, #8
 800240e:	d11b      	bne.n	8002448 <HAL_TIM_IRQHandler+0x104>
 8002410:	687b      	ldr	r3, [r7, #4]
 8002412:	681b      	ldr	r3, [r3, #0]
 8002414:	f06f 0208 	mvn.w	r2, #8
 8002418:	611a      	str	r2, [r3, #16]
 800241a:	687b      	ldr	r3, [r7, #4]
 800241c:	2204      	movs	r2, #4
 800241e:	771a      	strb	r2, [r3, #28]
 8002420:	687b      	ldr	r3, [r7, #4]
 8002422:	681b      	ldr	r3, [r3, #0]
 8002424:	69db      	ldr	r3, [r3, #28]
 8002426:	f003 0303 	and.w	r3, r3, #3
 800242a:	2b00      	cmp	r3, #0
 800242c:	d003      	beq.n	8002436 <HAL_TIM_IRQHandler+0xf2>
 800242e:	6878      	ldr	r0, [r7, #4]
 8002430:	f000 f95d 	bl	80026ee <HAL_TIM_IC_CaptureCallback>
 8002434:	e005      	b.n	8002442 <HAL_TIM_IRQHandler+0xfe>
 8002436:	6878      	ldr	r0, [r7, #4]
 8002438:	f000 f950 	bl	80026dc <HAL_TIM_OC_DelayElapsedCallback>
 800243c:	6878      	ldr	r0, [r7, #4]
 800243e:	f000 f95f 	bl	8002700 <HAL_TIM_PWM_PulseFinishedCallback>
 8002442:	687b      	ldr	r3, [r7, #4]
 8002444:	2200      	movs	r2, #0
 8002446:	771a      	strb	r2, [r3, #28]
 8002448:	687b      	ldr	r3, [r7, #4]
 800244a:	681b      	ldr	r3, [r3, #0]
 800244c:	691b      	ldr	r3, [r3, #16]
 800244e:	f003 0310 	and.w	r3, r3, #16
 8002452:	2b10      	cmp	r3, #16
 8002454:	d122      	bne.n	800249c <HAL_TIM_IRQHandler+0x158>
 8002456:	687b      	ldr	r3, [r7, #4]
 8002458:	681b      	ldr	r3, [r3, #0]
 800245a:	68db      	ldr	r3, [r3, #12]
 800245c:	f003 0310 	and.w	r3, r3, #16
 8002460:	2b10      	cmp	r3, #16
 8002462:	d11b      	bne.n	800249c <HAL_TIM_IRQHandler+0x158>
 8002464:	687b      	ldr	r3, [r7, #4]
 8002466:	681b      	ldr	r3, [r3, #0]
 8002468:	f06f 0210 	mvn.w	r2, #16
 800246c:	611a      	str	r2, [r3, #16]
 800246e:	687b      	ldr	r3, [r7, #4]
 8002470:	2208      	movs	r2, #8
 8002472:	771a      	strb	r2, [r3, #28]
 8002474:	687b      	ldr	r3, [r7, #4]
 8002476:	681b      	ldr	r3, [r3, #0]
 8002478:	69db      	ldr	r3, [r3, #28]
 800247a:	f403 7340 	and.w	r3, r3, #768	; 0x300
 800247e:	2b00      	cmp	r3, #0
 8002480:	d003      	beq.n	800248a <HAL_TIM_IRQHandler+0x146>
 8002482:	6878      	ldr	r0, [r7, #4]
 8002484:	f000 f933 	bl	80026ee <HAL_TIM_IC_CaptureCallback>
 8002488:	e005      	b.n	8002496 <HAL_TIM_IRQHandler+0x152>
 800248a:	6878      	ldr	r0, [r7, #4]
 800248c:	f000 f926 	bl	80026dc <HAL_TIM_OC_DelayElapsedCallback>
 8002490:	6878      	ldr	r0, [r7, #4]
 8002492:	f000 f935 	bl	8002700 <HAL_TIM_PWM_PulseFinishedCallback>
 8002496:	687b      	ldr	r3, [r7, #4]
 8002498:	2200      	movs	r2, #0
 800249a:	771a      	strb	r2, [r3, #28]
 800249c:	687b      	ldr	r3, [r7, #4]
 800249e:	681b      	ldr	r3, [r3, #0]
 80024a0:	691b      	ldr	r3, [r3, #16]
 80024a2:	f003 0301 	and.w	r3, r3, #1
 80024a6:	2b01      	cmp	r3, #1
 80024a8:	d10e      	bne.n	80024c8 <HAL_TIM_IRQHandler+0x184>
 80024aa:	687b      	ldr	r3, [r7, #4]
 80024ac:	681b      	ldr	r3, [r3, #0]
 80024ae:	68db      	ldr	r3, [r3, #12]
 80024b0:	f003 0301 	and.w	r3, r3, #1
 80024b4:	2b01      	cmp	r3, #1
 80024b6:	d107      	bne.n	80024c8 <HAL_TIM_IRQHandler+0x184>
 80024b8:	687b      	ldr	r3, [r7, #4]
 80024ba:	681b      	ldr	r3, [r3, #0]
 80024bc:	f06f 0201 	mvn.w	r2, #1
 80024c0:	611a      	str	r2, [r3, #16]
 80024c2:	6878      	ldr	r0, [r7, #4]
 80024c4:	f7fe fe3a 	bl	800113c <HAL_TIM_PeriodElapsedCallback>
 80024c8:	687b      	ldr	r3, [r7, #4]
 80024ca:	681b      	ldr	r3, [r3, #0]
 80024cc:	691b      	ldr	r3, [r3, #16]
 80024ce:	f003 0380 	and.w	r3, r3, #128	; 0x80
 80024d2:	2b80      	cmp	r3, #128	; 0x80
 80024d4:	d10e      	bne.n	80024f4 <HAL_TIM_IRQHandler+0x1b0>
 80024d6:	687b      	ldr	r3, [r7, #4]
 80024d8:	681b      	ldr	r3, [r3, #0]
 80024da:	68db      	ldr	r3, [r3, #12]
 80024dc:	f003 0380 	and.w	r3, r3, #128	; 0x80
 80024e0:	2b80      	cmp	r3, #128	; 0x80
 80024e2:	d107      	bne.n	80024f4 <HAL_TIM_IRQHandler+0x1b0>
 80024e4:	687b      	ldr	r3, [r7, #4]
 80024e6:	681b      	ldr	r3, [r3, #0]
 80024e8:	f06f 0280 	mvn.w	r2, #128	; 0x80
 80024ec:	611a      	str	r2, [r3, #16]
 80024ee:	6878      	ldr	r0, [r7, #4]
 80024f0:	f000 fa67 	bl	80029c2 <HAL_TIMEx_BreakCallback>
 80024f4:	687b      	ldr	r3, [r7, #4]
 80024f6:	681b      	ldr	r3, [r3, #0]
 80024f8:	691b      	ldr	r3, [r3, #16]
 80024fa:	f003 0340 	and.w	r3, r3, #64	; 0x40
 80024fe:	2b40      	cmp	r3, #64	; 0x40
 8002500:	d10e      	bne.n	8002520 <HAL_TIM_IRQHandler+0x1dc>
 8002502:	687b      	ldr	r3, [r7, #4]
 8002504:	681b      	ldr	r3, [r3, #0]
 8002506:	68db      	ldr	r3, [r3, #12]
 8002508:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800250c:	2b40      	cmp	r3, #64	; 0x40
 800250e:	d107      	bne.n	8002520 <HAL_TIM_IRQHandler+0x1dc>
 8002510:	687b      	ldr	r3, [r7, #4]
 8002512:	681b      	ldr	r3, [r3, #0]
 8002514:	f06f 0240 	mvn.w	r2, #64	; 0x40
 8002518:	611a      	str	r2, [r3, #16]
 800251a:	6878      	ldr	r0, [r7, #4]
 800251c:	f000 f8f9 	bl	8002712 <HAL_TIM_TriggerCallback>
 8002520:	687b      	ldr	r3, [r7, #4]
 8002522:	681b      	ldr	r3, [r3, #0]
 8002524:	691b      	ldr	r3, [r3, #16]
 8002526:	f003 0320 	and.w	r3, r3, #32
 800252a:	2b20      	cmp	r3, #32
 800252c:	d10e      	bne.n	800254c <HAL_TIM_IRQHandler+0x208>
 800252e:	687b      	ldr	r3, [r7, #4]
 8002530:	681b      	ldr	r3, [r3, #0]
 8002532:	68db      	ldr	r3, [r3, #12]
 8002534:	f003 0320 	and.w	r3, r3, #32
 8002538:	2b20      	cmp	r3, #32
 800253a:	d107      	bne.n	800254c <HAL_TIM_IRQHandler+0x208>
 800253c:	687b      	ldr	r3, [r7, #4]
 800253e:	681b      	ldr	r3, [r3, #0]
 8002540:	f06f 0220 	mvn.w	r2, #32
 8002544:	611a      	str	r2, [r3, #16]
 8002546:	6878      	ldr	r0, [r7, #4]
 8002548:	f000 fa32 	bl	80029b0 <HAL_TIMEx_CommutCallback>
 800254c:	bf00      	nop
 800254e:	3708      	adds	r7, #8
 8002550:	46bd      	mov	sp, r7
 8002552:	bd80      	pop	{r7, pc}

08002554 <HAL_TIM_ConfigClockSource>:
 8002554:	b580      	push	{r7, lr}
 8002556:	b084      	sub	sp, #16
 8002558:	af00      	add	r7, sp, #0
 800255a:	6078      	str	r0, [r7, #4]
 800255c:	6039      	str	r1, [r7, #0]
 800255e:	687b      	ldr	r3, [r7, #4]
 8002560:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8002564:	2b01      	cmp	r3, #1
 8002566:	d101      	bne.n	800256c <HAL_TIM_ConfigClockSource+0x18>
 8002568:	2302      	movs	r3, #2
 800256a:	e0b3      	b.n	80026d4 <HAL_TIM_ConfigClockSource+0x180>
 800256c:	687b      	ldr	r3, [r7, #4]
 800256e:	2201      	movs	r2, #1
 8002570:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8002574:	687b      	ldr	r3, [r7, #4]
 8002576:	2202      	movs	r2, #2
 8002578:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800257c:	687b      	ldr	r3, [r7, #4]
 800257e:	681b      	ldr	r3, [r3, #0]
 8002580:	689b      	ldr	r3, [r3, #8]
 8002582:	60fb      	str	r3, [r7, #12]
 8002584:	68fb      	ldr	r3, [r7, #12]
 8002586:	f023 0377 	bic.w	r3, r3, #119	; 0x77
 800258a:	60fb      	str	r3, [r7, #12]
 800258c:	68fb      	ldr	r3, [r7, #12]
 800258e:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 8002592:	60fb      	str	r3, [r7, #12]
 8002594:	687b      	ldr	r3, [r7, #4]
 8002596:	681b      	ldr	r3, [r3, #0]
 8002598:	68fa      	ldr	r2, [r7, #12]
 800259a:	609a      	str	r2, [r3, #8]
 800259c:	683b      	ldr	r3, [r7, #0]
 800259e:	681b      	ldr	r3, [r3, #0]
 80025a0:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 80025a4:	d03e      	beq.n	8002624 <HAL_TIM_ConfigClockSource+0xd0>
 80025a6:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 80025aa:	f200 8087 	bhi.w	80026bc <HAL_TIM_ConfigClockSource+0x168>
 80025ae:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 80025b2:	f000 8085 	beq.w	80026c0 <HAL_TIM_ConfigClockSource+0x16c>
 80025b6:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 80025ba:	d87f      	bhi.n	80026bc <HAL_TIM_ConfigClockSource+0x168>
 80025bc:	2b70      	cmp	r3, #112	; 0x70
 80025be:	d01a      	beq.n	80025f6 <HAL_TIM_ConfigClockSource+0xa2>
 80025c0:	2b70      	cmp	r3, #112	; 0x70
 80025c2:	d87b      	bhi.n	80026bc <HAL_TIM_ConfigClockSource+0x168>
 80025c4:	2b60      	cmp	r3, #96	; 0x60
 80025c6:	d050      	beq.n	800266a <HAL_TIM_ConfigClockSource+0x116>
 80025c8:	2b60      	cmp	r3, #96	; 0x60
 80025ca:	d877      	bhi.n	80026bc <HAL_TIM_ConfigClockSource+0x168>
 80025cc:	2b50      	cmp	r3, #80	; 0x50
 80025ce:	d03c      	beq.n	800264a <HAL_TIM_ConfigClockSource+0xf6>
 80025d0:	2b50      	cmp	r3, #80	; 0x50
 80025d2:	d873      	bhi.n	80026bc <HAL_TIM_ConfigClockSource+0x168>
 80025d4:	2b40      	cmp	r3, #64	; 0x40
 80025d6:	d058      	beq.n	800268a <HAL_TIM_ConfigClockSource+0x136>
 80025d8:	2b40      	cmp	r3, #64	; 0x40
 80025da:	d86f      	bhi.n	80026bc <HAL_TIM_ConfigClockSource+0x168>
 80025dc:	2b30      	cmp	r3, #48	; 0x30
 80025de:	d064      	beq.n	80026aa <HAL_TIM_ConfigClockSource+0x156>
 80025e0:	2b30      	cmp	r3, #48	; 0x30
 80025e2:	d86b      	bhi.n	80026bc <HAL_TIM_ConfigClockSource+0x168>
 80025e4:	2b20      	cmp	r3, #32
 80025e6:	d060      	beq.n	80026aa <HAL_TIM_ConfigClockSource+0x156>
 80025e8:	2b20      	cmp	r3, #32
 80025ea:	d867      	bhi.n	80026bc <HAL_TIM_ConfigClockSource+0x168>
 80025ec:	2b00      	cmp	r3, #0
 80025ee:	d05c      	beq.n	80026aa <HAL_TIM_ConfigClockSource+0x156>
 80025f0:	2b10      	cmp	r3, #16
 80025f2:	d05a      	beq.n	80026aa <HAL_TIM_ConfigClockSource+0x156>
 80025f4:	e062      	b.n	80026bc <HAL_TIM_ConfigClockSource+0x168>
 80025f6:	687b      	ldr	r3, [r7, #4]
 80025f8:	6818      	ldr	r0, [r3, #0]
 80025fa:	683b      	ldr	r3, [r7, #0]
 80025fc:	6899      	ldr	r1, [r3, #8]
 80025fe:	683b      	ldr	r3, [r7, #0]
 8002600:	685a      	ldr	r2, [r3, #4]
 8002602:	683b      	ldr	r3, [r7, #0]
 8002604:	68db      	ldr	r3, [r3, #12]
 8002606:	f000 f95c 	bl	80028c2 <TIM_ETR_SetConfig>
 800260a:	687b      	ldr	r3, [r7, #4]
 800260c:	681b      	ldr	r3, [r3, #0]
 800260e:	689b      	ldr	r3, [r3, #8]
 8002610:	60fb      	str	r3, [r7, #12]
 8002612:	68fb      	ldr	r3, [r7, #12]
 8002614:	f043 0377 	orr.w	r3, r3, #119	; 0x77
 8002618:	60fb      	str	r3, [r7, #12]
 800261a:	687b      	ldr	r3, [r7, #4]
 800261c:	681b      	ldr	r3, [r3, #0]
 800261e:	68fa      	ldr	r2, [r7, #12]
 8002620:	609a      	str	r2, [r3, #8]
 8002622:	e04e      	b.n	80026c2 <HAL_TIM_ConfigClockSource+0x16e>
 8002624:	687b      	ldr	r3, [r7, #4]
 8002626:	6818      	ldr	r0, [r3, #0]
 8002628:	683b      	ldr	r3, [r7, #0]
 800262a:	6899      	ldr	r1, [r3, #8]
 800262c:	683b      	ldr	r3, [r7, #0]
 800262e:	685a      	ldr	r2, [r3, #4]
 8002630:	683b      	ldr	r3, [r7, #0]
 8002632:	68db      	ldr	r3, [r3, #12]
 8002634:	f000 f945 	bl	80028c2 <TIM_ETR_SetConfig>
 8002638:	687b      	ldr	r3, [r7, #4]
 800263a:	681b      	ldr	r3, [r3, #0]
 800263c:	689a      	ldr	r2, [r3, #8]
 800263e:	687b      	ldr	r3, [r7, #4]
 8002640:	681b      	ldr	r3, [r3, #0]
 8002642:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 8002646:	609a      	str	r2, [r3, #8]
 8002648:	e03b      	b.n	80026c2 <HAL_TIM_ConfigClockSource+0x16e>
 800264a:	687b      	ldr	r3, [r7, #4]
 800264c:	6818      	ldr	r0, [r3, #0]
 800264e:	683b      	ldr	r3, [r7, #0]
 8002650:	6859      	ldr	r1, [r3, #4]
 8002652:	683b      	ldr	r3, [r7, #0]
 8002654:	68db      	ldr	r3, [r3, #12]
 8002656:	461a      	mov	r2, r3
 8002658:	f000 f8bc 	bl	80027d4 <TIM_TI1_ConfigInputStage>
 800265c:	687b      	ldr	r3, [r7, #4]
 800265e:	681b      	ldr	r3, [r3, #0]
 8002660:	2150      	movs	r1, #80	; 0x50
 8002662:	4618      	mov	r0, r3
 8002664:	f000 f913 	bl	800288e <TIM_ITRx_SetConfig>
 8002668:	e02b      	b.n	80026c2 <HAL_TIM_ConfigClockSource+0x16e>
 800266a:	687b      	ldr	r3, [r7, #4]
 800266c:	6818      	ldr	r0, [r3, #0]
 800266e:	683b      	ldr	r3, [r7, #0]
 8002670:	6859      	ldr	r1, [r3, #4]
 8002672:	683b      	ldr	r3, [r7, #0]
 8002674:	68db      	ldr	r3, [r3, #12]
 8002676:	461a      	mov	r2, r3
 8002678:	f000 f8da 	bl	8002830 <TIM_TI2_ConfigInputStage>
 800267c:	687b      	ldr	r3, [r7, #4]
 800267e:	681b      	ldr	r3, [r3, #0]
 8002680:	2160      	movs	r1, #96	; 0x60
 8002682:	4618      	mov	r0, r3
 8002684:	f000 f903 	bl	800288e <TIM_ITRx_SetConfig>
 8002688:	e01b      	b.n	80026c2 <HAL_TIM_ConfigClockSource+0x16e>
 800268a:	687b      	ldr	r3, [r7, #4]
 800268c:	6818      	ldr	r0, [r3, #0]
 800268e:	683b      	ldr	r3, [r7, #0]
 8002690:	6859      	ldr	r1, [r3, #4]
 8002692:	683b      	ldr	r3, [r7, #0]
 8002694:	68db      	ldr	r3, [r3, #12]
 8002696:	461a      	mov	r2, r3
 8002698:	f000 f89c 	bl	80027d4 <TIM_TI1_ConfigInputStage>
 800269c:	687b      	ldr	r3, [r7, #4]
 800269e:	681b      	ldr	r3, [r3, #0]
 80026a0:	2140      	movs	r1, #64	; 0x40
 80026a2:	4618      	mov	r0, r3
 80026a4:	f000 f8f3 	bl	800288e <TIM_ITRx_SetConfig>
 80026a8:	e00b      	b.n	80026c2 <HAL_TIM_ConfigClockSource+0x16e>
 80026aa:	687b      	ldr	r3, [r7, #4]
 80026ac:	681a      	ldr	r2, [r3, #0]
 80026ae:	683b      	ldr	r3, [r7, #0]
 80026b0:	681b      	ldr	r3, [r3, #0]
 80026b2:	4619      	mov	r1, r3
 80026b4:	4610      	mov	r0, r2
 80026b6:	f000 f8ea 	bl	800288e <TIM_ITRx_SetConfig>
 80026ba:	e002      	b.n	80026c2 <HAL_TIM_ConfigClockSource+0x16e>
 80026bc:	bf00      	nop
 80026be:	e000      	b.n	80026c2 <HAL_TIM_ConfigClockSource+0x16e>
 80026c0:	bf00      	nop
 80026c2:	687b      	ldr	r3, [r7, #4]
 80026c4:	2201      	movs	r2, #1
 80026c6:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80026ca:	687b      	ldr	r3, [r7, #4]
 80026cc:	2200      	movs	r2, #0
 80026ce:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80026d2:	2300      	movs	r3, #0
 80026d4:	4618      	mov	r0, r3
 80026d6:	3710      	adds	r7, #16
 80026d8:	46bd      	mov	sp, r7
 80026da:	bd80      	pop	{r7, pc}

080026dc <HAL_TIM_OC_DelayElapsedCallback>:
 80026dc:	b480      	push	{r7}
 80026de:	b083      	sub	sp, #12
 80026e0:	af00      	add	r7, sp, #0
 80026e2:	6078      	str	r0, [r7, #4]
 80026e4:	bf00      	nop
 80026e6:	370c      	adds	r7, #12
 80026e8:	46bd      	mov	sp, r7
 80026ea:	bc80      	pop	{r7}
 80026ec:	4770      	bx	lr

080026ee <HAL_TIM_IC_CaptureCallback>:
 80026ee:	b480      	push	{r7}
 80026f0:	b083      	sub	sp, #12
 80026f2:	af00      	add	r7, sp, #0
 80026f4:	6078      	str	r0, [r7, #4]
 80026f6:	bf00      	nop
 80026f8:	370c      	adds	r7, #12
 80026fa:	46bd      	mov	sp, r7
 80026fc:	bc80      	pop	{r7}
 80026fe:	4770      	bx	lr

08002700 <HAL_TIM_PWM_PulseFinishedCallback>:
 8002700:	b480      	push	{r7}
 8002702:	b083      	sub	sp, #12
 8002704:	af00      	add	r7, sp, #0
 8002706:	6078      	str	r0, [r7, #4]
 8002708:	bf00      	nop
 800270a:	370c      	adds	r7, #12
 800270c:	46bd      	mov	sp, r7
 800270e:	bc80      	pop	{r7}
 8002710:	4770      	bx	lr

08002712 <HAL_TIM_TriggerCallback>:
 8002712:	b480      	push	{r7}
 8002714:	b083      	sub	sp, #12
 8002716:	af00      	add	r7, sp, #0
 8002718:	6078      	str	r0, [r7, #4]
 800271a:	bf00      	nop
 800271c:	370c      	adds	r7, #12
 800271e:	46bd      	mov	sp, r7
 8002720:	bc80      	pop	{r7}
 8002722:	4770      	bx	lr

08002724 <TIM_Base_SetConfig>:
 8002724:	b480      	push	{r7}
 8002726:	b085      	sub	sp, #20
 8002728:	af00      	add	r7, sp, #0
 800272a:	6078      	str	r0, [r7, #4]
 800272c:	6039      	str	r1, [r7, #0]
 800272e:	687b      	ldr	r3, [r7, #4]
 8002730:	681b      	ldr	r3, [r3, #0]
 8002732:	60fb      	str	r3, [r7, #12]
 8002734:	687b      	ldr	r3, [r7, #4]
 8002736:	4a25      	ldr	r2, [pc, #148]	; (80027cc <TIM_Base_SetConfig+0xa8>)
 8002738:	4293      	cmp	r3, r2
 800273a:	d007      	beq.n	800274c <TIM_Base_SetConfig+0x28>
 800273c:	687b      	ldr	r3, [r7, #4]
 800273e:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8002742:	d003      	beq.n	800274c <TIM_Base_SetConfig+0x28>
 8002744:	687b      	ldr	r3, [r7, #4]
 8002746:	4a22      	ldr	r2, [pc, #136]	; (80027d0 <TIM_Base_SetConfig+0xac>)
 8002748:	4293      	cmp	r3, r2
 800274a:	d108      	bne.n	800275e <TIM_Base_SetConfig+0x3a>
 800274c:	68fb      	ldr	r3, [r7, #12]
 800274e:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8002752:	60fb      	str	r3, [r7, #12]
 8002754:	683b      	ldr	r3, [r7, #0]
 8002756:	685b      	ldr	r3, [r3, #4]
 8002758:	68fa      	ldr	r2, [r7, #12]
 800275a:	4313      	orrs	r3, r2
 800275c:	60fb      	str	r3, [r7, #12]
 800275e:	687b      	ldr	r3, [r7, #4]
 8002760:	4a1a      	ldr	r2, [pc, #104]	; (80027cc <TIM_Base_SetConfig+0xa8>)
 8002762:	4293      	cmp	r3, r2
 8002764:	d007      	beq.n	8002776 <TIM_Base_SetConfig+0x52>
 8002766:	687b      	ldr	r3, [r7, #4]
 8002768:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800276c:	d003      	beq.n	8002776 <TIM_Base_SetConfig+0x52>
 800276e:	687b      	ldr	r3, [r7, #4]
 8002770:	4a17      	ldr	r2, [pc, #92]	; (80027d0 <TIM_Base_SetConfig+0xac>)
 8002772:	4293      	cmp	r3, r2
 8002774:	d108      	bne.n	8002788 <TIM_Base_SetConfig+0x64>
 8002776:	68fb      	ldr	r3, [r7, #12]
 8002778:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 800277c:	60fb      	str	r3, [r7, #12]
 800277e:	683b      	ldr	r3, [r7, #0]
 8002780:	68db      	ldr	r3, [r3, #12]
 8002782:	68fa      	ldr	r2, [r7, #12]
 8002784:	4313      	orrs	r3, r2
 8002786:	60fb      	str	r3, [r7, #12]
 8002788:	68fb      	ldr	r3, [r7, #12]
 800278a:	f023 0280 	bic.w	r2, r3, #128	; 0x80
 800278e:	683b      	ldr	r3, [r7, #0]
 8002790:	695b      	ldr	r3, [r3, #20]
 8002792:	4313      	orrs	r3, r2
 8002794:	60fb      	str	r3, [r7, #12]
 8002796:	687b      	ldr	r3, [r7, #4]
 8002798:	68fa      	ldr	r2, [r7, #12]
 800279a:	601a      	str	r2, [r3, #0]
 800279c:	683b      	ldr	r3, [r7, #0]
 800279e:	689a      	ldr	r2, [r3, #8]
 80027a0:	687b      	ldr	r3, [r7, #4]
 80027a2:	62da      	str	r2, [r3, #44]	; 0x2c
 80027a4:	683b      	ldr	r3, [r7, #0]
 80027a6:	681a      	ldr	r2, [r3, #0]
 80027a8:	687b      	ldr	r3, [r7, #4]
 80027aa:	629a      	str	r2, [r3, #40]	; 0x28
 80027ac:	687b      	ldr	r3, [r7, #4]
 80027ae:	4a07      	ldr	r2, [pc, #28]	; (80027cc <TIM_Base_SetConfig+0xa8>)
 80027b0:	4293      	cmp	r3, r2
 80027b2:	d103      	bne.n	80027bc <TIM_Base_SetConfig+0x98>
 80027b4:	683b      	ldr	r3, [r7, #0]
 80027b6:	691a      	ldr	r2, [r3, #16]
 80027b8:	687b      	ldr	r3, [r7, #4]
 80027ba:	631a      	str	r2, [r3, #48]	; 0x30
 80027bc:	687b      	ldr	r3, [r7, #4]
 80027be:	2201      	movs	r2, #1
 80027c0:	615a      	str	r2, [r3, #20]
 80027c2:	bf00      	nop
 80027c4:	3714      	adds	r7, #20
 80027c6:	46bd      	mov	sp, r7
 80027c8:	bc80      	pop	{r7}
 80027ca:	4770      	bx	lr
 80027cc:	40012c00 	.word	0x40012c00
 80027d0:	40000400 	.word	0x40000400

080027d4 <TIM_TI1_ConfigInputStage>:
 80027d4:	b480      	push	{r7}
 80027d6:	b087      	sub	sp, #28
 80027d8:	af00      	add	r7, sp, #0
 80027da:	60f8      	str	r0, [r7, #12]
 80027dc:	60b9      	str	r1, [r7, #8]
 80027de:	607a      	str	r2, [r7, #4]
 80027e0:	68fb      	ldr	r3, [r7, #12]
 80027e2:	6a1b      	ldr	r3, [r3, #32]
 80027e4:	617b      	str	r3, [r7, #20]
 80027e6:	68fb      	ldr	r3, [r7, #12]
 80027e8:	6a1b      	ldr	r3, [r3, #32]
 80027ea:	f023 0201 	bic.w	r2, r3, #1
 80027ee:	68fb      	ldr	r3, [r7, #12]
 80027f0:	621a      	str	r2, [r3, #32]
 80027f2:	68fb      	ldr	r3, [r7, #12]
 80027f4:	699b      	ldr	r3, [r3, #24]
 80027f6:	613b      	str	r3, [r7, #16]
 80027f8:	693b      	ldr	r3, [r7, #16]
 80027fa:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 80027fe:	613b      	str	r3, [r7, #16]
 8002800:	687b      	ldr	r3, [r7, #4]
 8002802:	011b      	lsls	r3, r3, #4
 8002804:	693a      	ldr	r2, [r7, #16]
 8002806:	4313      	orrs	r3, r2
 8002808:	613b      	str	r3, [r7, #16]
 800280a:	697b      	ldr	r3, [r7, #20]
 800280c:	f023 030a 	bic.w	r3, r3, #10
 8002810:	617b      	str	r3, [r7, #20]
 8002812:	697a      	ldr	r2, [r7, #20]
 8002814:	68bb      	ldr	r3, [r7, #8]
 8002816:	4313      	orrs	r3, r2
 8002818:	617b      	str	r3, [r7, #20]
 800281a:	68fb      	ldr	r3, [r7, #12]
 800281c:	693a      	ldr	r2, [r7, #16]
 800281e:	619a      	str	r2, [r3, #24]
 8002820:	68fb      	ldr	r3, [r7, #12]
 8002822:	697a      	ldr	r2, [r7, #20]
 8002824:	621a      	str	r2, [r3, #32]
 8002826:	bf00      	nop
 8002828:	371c      	adds	r7, #28
 800282a:	46bd      	mov	sp, r7
 800282c:	bc80      	pop	{r7}
 800282e:	4770      	bx	lr

08002830 <TIM_TI2_ConfigInputStage>:
 8002830:	b480      	push	{r7}
 8002832:	b087      	sub	sp, #28
 8002834:	af00      	add	r7, sp, #0
 8002836:	60f8      	str	r0, [r7, #12]
 8002838:	60b9      	str	r1, [r7, #8]
 800283a:	607a      	str	r2, [r7, #4]
 800283c:	68fb      	ldr	r3, [r7, #12]
 800283e:	6a1b      	ldr	r3, [r3, #32]
 8002840:	f023 0210 	bic.w	r2, r3, #16
 8002844:	68fb      	ldr	r3, [r7, #12]
 8002846:	621a      	str	r2, [r3, #32]
 8002848:	68fb      	ldr	r3, [r7, #12]
 800284a:	699b      	ldr	r3, [r3, #24]
 800284c:	617b      	str	r3, [r7, #20]
 800284e:	68fb      	ldr	r3, [r7, #12]
 8002850:	6a1b      	ldr	r3, [r3, #32]
 8002852:	613b      	str	r3, [r7, #16]
 8002854:	697b      	ldr	r3, [r7, #20]
 8002856:	f423 4370 	bic.w	r3, r3, #61440	; 0xf000
 800285a:	617b      	str	r3, [r7, #20]
 800285c:	687b      	ldr	r3, [r7, #4]
 800285e:	031b      	lsls	r3, r3, #12
 8002860:	697a      	ldr	r2, [r7, #20]
 8002862:	4313      	orrs	r3, r2
 8002864:	617b      	str	r3, [r7, #20]
 8002866:	693b      	ldr	r3, [r7, #16]
 8002868:	f023 03a0 	bic.w	r3, r3, #160	; 0xa0
 800286c:	613b      	str	r3, [r7, #16]
 800286e:	68bb      	ldr	r3, [r7, #8]
 8002870:	011b      	lsls	r3, r3, #4
 8002872:	693a      	ldr	r2, [r7, #16]
 8002874:	4313      	orrs	r3, r2
 8002876:	613b      	str	r3, [r7, #16]
 8002878:	68fb      	ldr	r3, [r7, #12]
 800287a:	697a      	ldr	r2, [r7, #20]
 800287c:	619a      	str	r2, [r3, #24]
 800287e:	68fb      	ldr	r3, [r7, #12]
 8002880:	693a      	ldr	r2, [r7, #16]
 8002882:	621a      	str	r2, [r3, #32]
 8002884:	bf00      	nop
 8002886:	371c      	adds	r7, #28
 8002888:	46bd      	mov	sp, r7
 800288a:	bc80      	pop	{r7}
 800288c:	4770      	bx	lr

0800288e <TIM_ITRx_SetConfig>:
 800288e:	b480      	push	{r7}
 8002890:	b085      	sub	sp, #20
 8002892:	af00      	add	r7, sp, #0
 8002894:	6078      	str	r0, [r7, #4]
 8002896:	6039      	str	r1, [r7, #0]
 8002898:	687b      	ldr	r3, [r7, #4]
 800289a:	689b      	ldr	r3, [r3, #8]
 800289c:	60fb      	str	r3, [r7, #12]
 800289e:	68fb      	ldr	r3, [r7, #12]
 80028a0:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 80028a4:	60fb      	str	r3, [r7, #12]
 80028a6:	683a      	ldr	r2, [r7, #0]
 80028a8:	68fb      	ldr	r3, [r7, #12]
 80028aa:	4313      	orrs	r3, r2
 80028ac:	f043 0307 	orr.w	r3, r3, #7
 80028b0:	60fb      	str	r3, [r7, #12]
 80028b2:	687b      	ldr	r3, [r7, #4]
 80028b4:	68fa      	ldr	r2, [r7, #12]
 80028b6:	609a      	str	r2, [r3, #8]
 80028b8:	bf00      	nop
 80028ba:	3714      	adds	r7, #20
 80028bc:	46bd      	mov	sp, r7
 80028be:	bc80      	pop	{r7}
 80028c0:	4770      	bx	lr

080028c2 <TIM_ETR_SetConfig>:
 80028c2:	b480      	push	{r7}
 80028c4:	b087      	sub	sp, #28
 80028c6:	af00      	add	r7, sp, #0
 80028c8:	60f8      	str	r0, [r7, #12]
 80028ca:	60b9      	str	r1, [r7, #8]
 80028cc:	607a      	str	r2, [r7, #4]
 80028ce:	603b      	str	r3, [r7, #0]
 80028d0:	68fb      	ldr	r3, [r7, #12]
 80028d2:	689b      	ldr	r3, [r3, #8]
 80028d4:	617b      	str	r3, [r7, #20]
 80028d6:	697b      	ldr	r3, [r7, #20]
 80028d8:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 80028dc:	617b      	str	r3, [r7, #20]
 80028de:	683b      	ldr	r3, [r7, #0]
 80028e0:	021a      	lsls	r2, r3, #8
 80028e2:	687b      	ldr	r3, [r7, #4]
 80028e4:	431a      	orrs	r2, r3
 80028e6:	68bb      	ldr	r3, [r7, #8]
 80028e8:	4313      	orrs	r3, r2
 80028ea:	697a      	ldr	r2, [r7, #20]
 80028ec:	4313      	orrs	r3, r2
 80028ee:	617b      	str	r3, [r7, #20]
 80028f0:	68fb      	ldr	r3, [r7, #12]
 80028f2:	697a      	ldr	r2, [r7, #20]
 80028f4:	609a      	str	r2, [r3, #8]
 80028f6:	bf00      	nop
 80028f8:	371c      	adds	r7, #28
 80028fa:	46bd      	mov	sp, r7
 80028fc:	bc80      	pop	{r7}
 80028fe:	4770      	bx	lr

08002900 <HAL_TIMEx_MasterConfigSynchronization>:
 8002900:	b480      	push	{r7}
 8002902:	b085      	sub	sp, #20
 8002904:	af00      	add	r7, sp, #0
 8002906:	6078      	str	r0, [r7, #4]
 8002908:	6039      	str	r1, [r7, #0]
 800290a:	687b      	ldr	r3, [r7, #4]
 800290c:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8002910:	2b01      	cmp	r3, #1
 8002912:	d101      	bne.n	8002918 <HAL_TIMEx_MasterConfigSynchronization+0x18>
 8002914:	2302      	movs	r3, #2
 8002916:	e041      	b.n	800299c <HAL_TIMEx_MasterConfigSynchronization+0x9c>
 8002918:	687b      	ldr	r3, [r7, #4]
 800291a:	2201      	movs	r2, #1
 800291c:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8002920:	687b      	ldr	r3, [r7, #4]
 8002922:	2202      	movs	r2, #2
 8002924:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8002928:	687b      	ldr	r3, [r7, #4]
 800292a:	681b      	ldr	r3, [r3, #0]
 800292c:	685b      	ldr	r3, [r3, #4]
 800292e:	60fb      	str	r3, [r7, #12]
 8002930:	687b      	ldr	r3, [r7, #4]
 8002932:	681b      	ldr	r3, [r3, #0]
 8002934:	689b      	ldr	r3, [r3, #8]
 8002936:	60bb      	str	r3, [r7, #8]
 8002938:	68fb      	ldr	r3, [r7, #12]
 800293a:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 800293e:	60fb      	str	r3, [r7, #12]
 8002940:	683b      	ldr	r3, [r7, #0]
 8002942:	681b      	ldr	r3, [r3, #0]
 8002944:	68fa      	ldr	r2, [r7, #12]
 8002946:	4313      	orrs	r3, r2
 8002948:	60fb      	str	r3, [r7, #12]
 800294a:	687b      	ldr	r3, [r7, #4]
 800294c:	681b      	ldr	r3, [r3, #0]
 800294e:	68fa      	ldr	r2, [r7, #12]
 8002950:	605a      	str	r2, [r3, #4]
 8002952:	687b      	ldr	r3, [r7, #4]
 8002954:	681b      	ldr	r3, [r3, #0]
 8002956:	4a14      	ldr	r2, [pc, #80]	; (80029a8 <HAL_TIMEx_MasterConfigSynchronization+0xa8>)
 8002958:	4293      	cmp	r3, r2
 800295a:	d009      	beq.n	8002970 <HAL_TIMEx_MasterConfigSynchronization+0x70>
 800295c:	687b      	ldr	r3, [r7, #4]
 800295e:	681b      	ldr	r3, [r3, #0]
 8002960:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8002964:	d004      	beq.n	8002970 <HAL_TIMEx_MasterConfigSynchronization+0x70>
 8002966:	687b      	ldr	r3, [r7, #4]
 8002968:	681b      	ldr	r3, [r3, #0]
 800296a:	4a10      	ldr	r2, [pc, #64]	; (80029ac <HAL_TIMEx_MasterConfigSynchronization+0xac>)
 800296c:	4293      	cmp	r3, r2
 800296e:	d10c      	bne.n	800298a <HAL_TIMEx_MasterConfigSynchronization+0x8a>
 8002970:	68bb      	ldr	r3, [r7, #8]
 8002972:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8002976:	60bb      	str	r3, [r7, #8]
 8002978:	683b      	ldr	r3, [r7, #0]
 800297a:	685b      	ldr	r3, [r3, #4]
 800297c:	68ba      	ldr	r2, [r7, #8]
 800297e:	4313      	orrs	r3, r2
 8002980:	60bb      	str	r3, [r7, #8]
 8002982:	687b      	ldr	r3, [r7, #4]
 8002984:	681b      	ldr	r3, [r3, #0]
 8002986:	68ba      	ldr	r2, [r7, #8]
 8002988:	609a      	str	r2, [r3, #8]
 800298a:	687b      	ldr	r3, [r7, #4]
 800298c:	2201      	movs	r2, #1
 800298e:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8002992:	687b      	ldr	r3, [r7, #4]
 8002994:	2200      	movs	r2, #0
 8002996:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800299a:	2300      	movs	r3, #0
 800299c:	4618      	mov	r0, r3
 800299e:	3714      	adds	r7, #20
 80029a0:	46bd      	mov	sp, r7
 80029a2:	bc80      	pop	{r7}
 80029a4:	4770      	bx	lr
 80029a6:	bf00      	nop
 80029a8:	40012c00 	.word	0x40012c00
 80029ac:	40000400 	.word	0x40000400

080029b0 <HAL_TIMEx_CommutCallback>:
 80029b0:	b480      	push	{r7}
 80029b2:	b083      	sub	sp, #12
 80029b4:	af00      	add	r7, sp, #0
 80029b6:	6078      	str	r0, [r7, #4]
 80029b8:	bf00      	nop
 80029ba:	370c      	adds	r7, #12
 80029bc:	46bd      	mov	sp, r7
 80029be:	bc80      	pop	{r7}
 80029c0:	4770      	bx	lr

080029c2 <HAL_TIMEx_BreakCallback>:
 80029c2:	b480      	push	{r7}
 80029c4:	b083      	sub	sp, #12
 80029c6:	af00      	add	r7, sp, #0
 80029c8:	6078      	str	r0, [r7, #4]
 80029ca:	bf00      	nop
 80029cc:	370c      	adds	r7, #12
 80029ce:	46bd      	mov	sp, r7
 80029d0:	bc80      	pop	{r7}
 80029d2:	4770      	bx	lr

080029d4 <__libc_init_array>:
 80029d4:	b570      	push	{r4, r5, r6, lr}
 80029d6:	2600      	movs	r6, #0
 80029d8:	4d0c      	ldr	r5, [pc, #48]	; (8002a0c <__libc_init_array+0x38>)
 80029da:	4c0d      	ldr	r4, [pc, #52]	; (8002a10 <__libc_init_array+0x3c>)
 80029dc:	1b64      	subs	r4, r4, r5
 80029de:	10a4      	asrs	r4, r4, #2
 80029e0:	42a6      	cmp	r6, r4
 80029e2:	d109      	bne.n	80029f8 <__libc_init_array+0x24>
 80029e4:	f000 f822 	bl	8002a2c <_init>
 80029e8:	2600      	movs	r6, #0
 80029ea:	4d0a      	ldr	r5, [pc, #40]	; (8002a14 <__libc_init_array+0x40>)
 80029ec:	4c0a      	ldr	r4, [pc, #40]	; (8002a18 <__libc_init_array+0x44>)
 80029ee:	1b64      	subs	r4, r4, r5
 80029f0:	10a4      	asrs	r4, r4, #2
 80029f2:	42a6      	cmp	r6, r4
 80029f4:	d105      	bne.n	8002a02 <__libc_init_array+0x2e>
 80029f6:	bd70      	pop	{r4, r5, r6, pc}
 80029f8:	f855 3b04 	ldr.w	r3, [r5], #4
 80029fc:	4798      	blx	r3
 80029fe:	3601      	adds	r6, #1
 8002a00:	e7ee      	b.n	80029e0 <__libc_init_array+0xc>
 8002a02:	f855 3b04 	ldr.w	r3, [r5], #4
 8002a06:	4798      	blx	r3
 8002a08:	3601      	adds	r6, #1
 8002a0a:	e7f2      	b.n	80029f2 <__libc_init_array+0x1e>
 8002a0c:	08002a64 	.word	0x08002a64
 8002a10:	08002a64 	.word	0x08002a64
 8002a14:	08002a64 	.word	0x08002a64
 8002a18:	08002a68 	.word	0x08002a68

08002a1c <memset>:
 8002a1c:	4603      	mov	r3, r0
 8002a1e:	4402      	add	r2, r0
 8002a20:	4293      	cmp	r3, r2
 8002a22:	d100      	bne.n	8002a26 <memset+0xa>
 8002a24:	4770      	bx	lr
 8002a26:	f803 1b01 	strb.w	r1, [r3], #1
 8002a2a:	e7f9      	b.n	8002a20 <memset+0x4>

08002a2c <_init>:
 8002a2c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8002a2e:	bf00      	nop
 8002a30:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8002a32:	bc08      	pop	{r3}
 8002a34:	469e      	mov	lr, r3
 8002a36:	4770      	bx	lr

08002a38 <_fini>:
 8002a38:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8002a3a:	bf00      	nop
 8002a3c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8002a3e:	bc08      	pop	{r3}
 8002a40:	469e      	mov	lr, r3
 8002a42:	4770      	bx	lr
